{"version":3,"sources":["logo.svg","constant/Url.js","redux/actions/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/BaseMenus.js","constant/Menus.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","components/container/Card.js","components/pages/dashboard/PieChart.js","middlewares/Common.js","services/Promises.js","services/RecordHistoriesService.js","components/buttons/buttons.js","utils/StringUtil.js","components/forms/commons.js","components/pages/dashboard/Statistic.js","constant/ApplicationDataKeys.js","components/pages/dashboard/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","services/MasterDataService.js","components/buttons/NavButtons.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/messages/Alert.js","services/DiscussionTopicsService.js","components/pages/meetingnotes/MeetingNoteForm.js","services/UserService.js","components/pages/Profile.js","services/IssuesService.js","components/pages/issues/IssuesList.js","components/pages/issues/IssuesForm.js","utils/DateUtil.js","components/messages/ClosedStatus.js","components/pages/issues/IssuesFollowingUpForm.js","components/pages/discussiontopics/DiscussionTopicsForm.js","components/pages/discussiontopics/DiscussionActionForm.js","components/pages/discussiontopics/DiscussionTopicsList.js","components/pages/meetingnotes/MeetingNoteList.js","components/pages/errors/NotFound.js","components/pages/issues/IssueFormPublic.js","components/layout/Content.js","components/widget/Loader.js","components/layout/SideBar.js","App.js","redux/userReducer.js","redux/applicationReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/ApplicationMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","accountAction","app","startLoading","type","payload","meta","email","password","user","applicationAction","key","data","Footer","className","href","Component","BaseComponent","props","authenticated","state","updated","Date","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","getLoggedUser","isLoggedUserAdmin","isLoggedUserNull","role","getLoggedUserDepartementName","departement","name","showConfirmation","body","Promise","resolve","reject","showAlert","e","showConfirmationDanger","showAlertError","showInfo","showError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","console","warn","commonAjax","commonAjaxWithProgress","title","refresh","setState","this","CommonTitle","style","textAlign","marginLeft","children","BaseMenus","shownMenuList","id","hideMenuList","isMenuListShown","toggleMenuList","menuName","target","getAttribute","menuChildren","i","length","element","MENUS","link","iconClassName","Header","showBurger","toggleNavBurger","performLogout","accepted","backgroundColor","to","src","width","height","onClick","map","menu","childs","extractChildren","Fragment","menu-name","marginRight","linkProperty","j","display_name","AppLink","withRouter","connect","userState","dispatch","actions","Message","show","hide","enableHidden","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","handleSubmit","event","preventDefault","form","FormData","elements","performLogin","showLoginInfo","loginFailed","current","ref","marginTop","onSubmit","nam","placeholder","required","requestId","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","headerIconClassName","iconOnClick","headerIconOnClick","margin","withButtonFooter","footerContent","HeaderIcon","aria-hidden","RAD","Math","PI","PieChart","proportions","timeoutId","accumulationDegree","updatePie","canvas","ctx","getContext","clearRect","fillStyle","currentRad","currentDegree","x","circleX","y","proportion","endAngle","color","strokeStyle","beginPath","arc","fill","coord","calculatePosition","moveTo","lineTo","labelCoord","font","fillText","label","parseFloat","toFixed","radians","mainCoord","calculateCoordinate","rad","deg","PIE_W","accDegree","radius","newX","newY","quad","getQuadrant","adjustedX","abs","cos","adjuxtedY","sin","proportionIsFixed","stateProp","prop","getPropsProportion","sumValues","proportionIsEmpty","sort","a","b","animate","requestAnimation","clearTimeout","setTimeout","resetProportion","val","overflowX","DetailPie","padding","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","split","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","headers","code","error","RecordHistoriesService","getStatistic","departement_id","filter","fieldsFilter","instance","AnchorWithIcon","CapitalizeFirstLetter","rawString","string","String","splitted","result","toUpperCase","TableHeadWithFilter","onButtonOrderClick","alias","text","withFilter","fontSize","InputFormFilter","ButtonApplyResetFilter","InputField","orientation","note","SelectField","options","option","LabelField","SubmitResetButton","submitValue","submitText","submitIconClassName","submitButtonClassName","withReset","Statistic","getDiscussionTopicProportion","statisticData","statistic","total_topic","topic_count","topic_closed_count","topic_not_closed_count","errorLoadingStatistic","pieChartChild","historiesService","departementList","loadStatisticWithDepartement","loadStatistic","statisticLoaded","departements","storeApplicationData","statisticFailedToLoad","discussionTopicProportions","departementListMapped","departementOptions","date","ErrorInfo","applicationData","applicationState","Dashboard","BaseAdminPage","ManagementMenu","MasterManagementService","setUsersData","usersData","storeUser","userModel","storeIssue","issue","viewUser","userList","list","viewIssue","issueList","storeDepartement","viewDepartement","deleteRecord","departementsData","NavButtons","index","buttonValues","generateButtonValues","limit","totalData","activeIndex","buttonsData","currentPage","displayed_buttons","buttonCount","ceil","min","max","BaseManagementPage","loadRecords","readInputForm","inputs","getElementsByClassName","masterDataServce","page","count","orderBy","orderType","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","withText","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","populateDefaultInputs","hasOwnProperty","navButtons","createNavButton","recordList","result_list","formComponent","overflow","item","indexBegin","DeparementManagement","removeDataFromStore","record_id","find","dep","splice","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","debug","match","departementListLoaded","loadRecord","recordSaved","handleSuccessGetRecord","recordFailedToSave","loadDepartements","handleErrorGetRecord","formTitle","DepartementManagementForm","updateLocallyStoredDepartements","MeetingNoteSerivce","meetingNote","meeting_note","view","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","ModalBackdrop","DiscussionTopicsService","discussionTopic","discussion_topic","storeAction","action","discussion_action","FORM_ID","TOPIC_PREFIX","MeetingNoteForm","discussionTopicCount","showFormDiscussionTopicInEditMode","discussionTopicService","form_temporary_inputs","discussion_topics","isSubmitting","meetingNoteService","getMaxDiscussionTopicID","addDiscussionTopic","saveFormTemporaryInputs","isDiscussionTopicClosed","is_closed","removeDiscussionTopic","ok","doRemoveDiscussionTopic","setFormTemporaryInputs","setAttribute","fillDataAndStore","onSubmitDiscussionTopic","window","confirm","note_id","storeDiscussionTopic","currentDiscussionTopicID","currentDiscussionTopicIndex","elementName","startsWith","indexAndName","extractTopicDiscussionIndexAndName","storeMeetingNote","handleErrorSubmit","discussionTopics","enableInputs","removeAttribute","reset","discussionTopicSaved","alert","handleErrorSubmitDiscussionTopic","notulis","isClosed","FormAddDiscussionTopic","elementNameSplitIndex","parseInt","ButtonRemoveTopic","DiscussionTopicStatusInfo","closed","border","ButtonAddTopic","LinkEditAndAction","FormUpperTag","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","IssuesService","storePublicIssue","followUpIssue","followUp","followed_up_issue","IssuesList","issueService","isAdmin","place","content","issuer","issue_input","closed_date","issue_sources","IssuesForm","appData","source","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","getDiffDaysToNow","ClosedStatus","IssuesFollowingUpForm","showDetailIssue","hideDetailIssue","issue_id","handleSuccessSubmit","follow_up","DiscussionTopicsForm","LinkDetailMeetingNote","DiscussionActionForm","showDetailDiscussionTopic","discussionTopicSerivce","topic_id","decision","deadline_date","person_in_charge","DiscussionTopicsList","deadlineDate","parse","diffDay","MeetingNoteList","discussion_topics_count","discussion_topics_closed_count","LinkToFormCreate","LinkEditPage","NotFound","class","IssueFormPublic","captchaUpdate","recordSave","captcha","firstNumber","secordNumber","operator","updatedAt","resetCaptcha","floor","random","validateCaptcha","number1","number2","capchaResult","getElementsByName","captchaValidated","departementListNotLoaded","CaptCha","canvas_id","context","getCaptchaText","drawCanvas","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","component","Home","Loader","opacity","position","zIndex","SideBar","menuChild","App","menus","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","additionalMenus","Array","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","paddingTop","paddingLeft","borderRight","initState","loginKey","loginAttempt","applicationProfile","reducer","api_token","rootReducer","combineReducers","userReducer","applicationReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","Object","assign","err","param","requestAppIdMiddleware","message","get","performLogoutMiddleware","logoutSuccess","configureStore","createStore","applyMiddleware","userMiddleware","Root","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50205d8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from '../types'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n\r\n \r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const applicationAction = {\r\n    /**\r\n     * @param {String} key\r\n     * @param {*} data\r\n     */\r\n    storeApplicationData: (key, data) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                data:data,\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.STORE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    removeApplicationData: (key) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.REMOVE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n export const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const STORE_APPLICTION_DATA = \"store-app-data\";\r\nexport const REMOVE_APPLICTION_DATA = \"remove-app-data\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">KIIS Jakarta</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import  React , {Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.state = {\r\n            updated:new Date()\r\n        }\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return true;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.getLoggedUser = () => {\r\n            return this.props.loggedUser;\r\n        }\r\n        this.isLoggedUserAdmin = () => {\r\n            return this.isLoggedUserNull() == false && this.getLoggedUser().role == 'admin';\r\n        }\r\n        this.getLoggedUserDepartementName = () => {\r\n            if (this.isLoggedUserNull()) return null;\r\n            return this.getLoggedUser().departement.name;\r\n        }\r\n        this.isLoggedUserNull = () => {\r\n            return false == this.props.loginStatus || null == this.props.loggedUser;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showConfirmationDanger = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n\r\n        this.title = (title) => {\r\n            return <CommonTitle>{title}</CommonTitle>\r\n        }\r\n        this.refresh = () => {\r\n            this.setState({updated:new Date()});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated && null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n\r\nexport const CommonTitle = (props) => {\r\n    return <h2 style={{ textAlign: 'left', marginLeft:'10px' }}>{props.children}</h2>\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nexport default class BaseMenus extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            shownMenuList: {}\r\n        }\r\n\r\n        this.shownMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = true;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.hideMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = false;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.isMenuListShown = (id) => {\r\n            return this.state.shownMenuList[id] == true;\r\n        }\r\n        this.toggleMenuList = (e) => {\r\n            const menuName = e.target.getAttribute(\"menu-name\");\r\n            if (this.isMenuListShown(menuName)) {\r\n                this.hideMenuList(menuName);\r\n            } else {\r\n                this.shownMenuList(menuName);\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    extractChildren(menuChildren) {\r\n        const children = [];\r\n        for (let i = 0; i < menuChildren.length; i++) {\r\n            const element = menuChildren[i];\r\n            if (element.authenticated && this.isLoggedUserNull()) {\r\n                continue;\r\n            }\r\n            if (this.isLoggedUserNull() == false && element.role != null && this.getLoggedUser().role != element.role) {\r\n                continue;\r\n            }\r\n            children.push(element);\r\n        }\r\n\r\n        return children;\r\n    }\r\n    \r\n\r\n}\r\n","\r\nexport const MENUS = [\r\n    {\r\n        name: 'Umum',\r\n        children: [\r\n            {\r\n                name: 'Home',\r\n                link: '/home',\r\n                iconClassName: 'fas fa-home',\r\n            }, {\r\n                name: 'Dashboard',\r\n                link: '/dashboard',\r\n                iconClassName: 'fas fa-tachometer-alt',\r\n                authenticated: true,\r\n\r\n            }, {\r\n                name: 'Aduan',\r\n                link: '/issues-public',\r\n                iconClassName: 'fas fa-envelope-open-text',\r\n                // authenticated: true,\r\n            }]\r\n    }, {\r\n        name: 'Notulensi',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/meetingnote',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        }, {\r\n            name: 'Tambah Notulensi',\r\n            link: '/meetingnote/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n        }]\r\n    }, {\r\n        name: 'Aduan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/issues',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        },\r\n        {\r\n            name: 'Tambah',\r\n            link: '/issues/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n            role: 'admin'\r\n        }]\r\n    }, {\r\n        name: 'Tema Pembahasan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/discussiontopics',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        }]\r\n    }, {\r\n        name: 'Master Data',\r\n        children: [\r\n            {\r\n                name: 'Menu',\r\n                link: '/management',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                // iconClassName: 'fas fa-database'\r\n            },\r\n            {\r\n                name: 'User',\r\n                link: '/management/users',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-users',\r\n            }, {\r\n                name: 'Bidang',\r\n                link: '/management/departements',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-object-group',\r\n            }]\r\n    }\r\n]\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport './SideBar.css'\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\n\r\nclass Header extends BaseMenus {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            showBurger: false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({ showBurger: !this.state.showBurger })\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link style={{ backgroundColor: '#fff' }} className=\"navbar-item\" to=\"/\">\r\n                            <img src=\"kiis-stroke.png\" width=\"38\" height=\"38\" />\r\n                        </Link>\r\n                        <div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"topNav\" className={this.state.showBurger ? \"is-active navbar-menu\" : \" navbar-menu\"}>\r\n                        <div className=\"navbar-start\">\r\n                            {MENUS.map((menu, i) => {\r\n                                const childs = this.extractChildren(menu.children);\r\n                                if (childs == null || childs.length == 0) { return null; }\r\n                                const isMenuListShown = this.isMenuListShown(menu.name);\r\n                                const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                                return (\r\n                                    <React.Fragment key={\"NavMenu_\" + menu.name}>\r\n                                        <p style={{ marginLeft: '10px' }} onClick={this.toggleMenuList} menu-name={menu.name} className=\"menu-label\">\r\n                                            <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                            {menu.name}  </p>\r\n                                        {isMenuListShown ?\r\n                                            <ul className=\"menu-list\">\r\n                                                {childs.map((linkProperty, j) => {\r\n                                                    return <AppLink key={\"header-link-\" + j + \"-\" + i} loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                                                })}\r\n                                            </ul> : null}\r\n                                    </React.Fragment>)\r\n                            })}\r\n                        </div>\r\n                        <div className=\"navbar-end\">\r\n                            <div className=\"navbar-item\">\r\n                                <div className=\"buttons has-addons\">\r\n\r\n                                    {this.props.loginStatus ?\r\n                                        <><Link className=\"button is-info\" to=\"/profile\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                        </Link>\r\n                                            <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                                <span className=\"icon\">\r\n                                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                                </span>\r\n                                                <span>Logout</span>\r\n                                            </a>\r\n                                        </> :\r\n                                        <Link className=\"button is-info\" to=\"/login\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>Login</span>\r\n                                        </Link>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    const iconClassName = linkProperty.iconClassName ? linkProperty.iconClassName : 'fas fa-folder';\r\n    if (null == linkProperty.link) {\r\n        return null;\r\n    }\r\n\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if (linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >\r\n            <span className=\"icon\"><i className={iconClassName} /></span>\r\n            <span>\r\n                {linkProperty.name}\r\n            </span>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header))\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            if (this.props.enableHidden){\r\n                this.setState({show:false});\r\n            }\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                    {this.props.children}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-5-desktop is-5-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const iconClassName = this.props.headerIconClassName;\r\n        const iconOnClick = this.props.headerIconOnClick;\r\n\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style }}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    {null == iconClassName ? null : <HeaderIcon className={iconClassName} onClick={iconOnClick} /> }\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst HeaderIcon = (props) => {\r\n    return (\r\n        <a className=\"card-header-icon\" aria-label=\"more options\" onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={props.className} aria-hidden=\"true\"></i>\r\n            </span>\r\n        </a>\r\n    );\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nconst PIE_W = 100, RAD = 2 * Math.PI;\r\nconst MAX_DEG = 360;\r\nconst PIE_CANVAS_SIZE = 300;\r\nconst circleX = 150, circleY = 150;\r\nexport default class PieChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            proportions: []\r\n        }\r\n        this.timeoutId = null;\r\n        this.accumulationDegree = 0;\r\n\r\n        this.updatePie = () => {\r\n            this.accumulationDegree = 0;\r\n            const proportions = this.state.proportions;\r\n\r\n            const canvas = document.getElementById(\"pie_chart_canvas\");\r\n            if (null == canvas) {\r\n                return;\r\n            }\r\n            const ctx = canvas.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.fillStyle = '#ccc';\r\n            let currentRad = RAD;\r\n            let currentDegree = 0;\r\n            let x = circleX + PIE_W, y = circleY;\r\n\r\n\r\n            for (let i = 0; i < proportions.length; i++) {\r\n\r\n                const element = proportions[i];\r\n\r\n                if (element.proportion <= 0) { continue; }\r\n\r\n                const endAngle = currentRad - element.proportion * RAD;\r\n                ctx.fillStyle = element.color;\r\n                ctx.strokeStyle = element.color;\r\n                ctx.beginPath();\r\n                ctx.arc(circleX, circleY, PIE_W, currentRad, endAngle, true);\r\n                // ctx.stroke();\r\n                ctx.fill();\r\n\r\n                currentDegree = element.proportion * MAX_DEG;\r\n                this.accumulationDegree += currentDegree;\r\n                const coord = this.calculatePosition(endAngle, element.proportion, ctx);\r\n\r\n                ctx.fillStyle = element.color;\r\n                //drawLine\r\n                if (element.proportion < 0.5) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(circleX, circleY);\r\n                    ctx.lineTo(x, y);\r\n\r\n                    ctx.lineTo(coord.x, coord.y);\r\n                    // ctx.stroke();\r\n                    ctx.fill();\r\n                }\r\n\r\n                //drawLabel\r\n                const labelCoord = coord.labelCoord;\r\n                ctx.font = \"15px Arial\";\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(element.label + \" \" + parseFloat(100 * element.proportion).toFixed(2) + \"%\", labelCoord.x, labelCoord.y);\r\n\r\n                x = coord.x;\r\n                y = coord.y;\r\n\r\n                currentRad = endAngle;\r\n            }\r\n        }\r\n\r\n        this.calculatePosition = (radians, value, ctx) => {\r\n            const mainCoord = this.calculateCoordinate(radians,\r\n                this.accumulationDegree, PIE_W);\r\n            //for label\r\n            const rad = value * RAD / 2;\r\n            const deg = value * MAX_DEG / 2;\r\n            const labelCoord = this.calculateCoordinate(radians - rad,\r\n                this.accumulationDegree - deg, PIE_W / 2);\r\n            return { ...mainCoord, labelCoord: labelCoord };\r\n        }\r\n\r\n        this.calculateCoordinate = (radians, accDegree, radius) => {\r\n\r\n            let newX = 0, newY = 0;\r\n            const quad = this.getQuadrant(accDegree);\r\n\r\n            const adjustedX = Math.abs(radius * Math.cos(radians));\r\n            const adjuxtedY = Math.abs(radius * Math.sin(radians));\r\n            if (quad == 1) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n\r\n            } else if (quad == 2) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n            } else if (quad == 3) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            } else if (quad == 4) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            }\r\n            // ctx.fillRect(newX-5, newY-5, 10, 10);\r\n            return { x: newX, y: newY }\r\n        }\r\n\r\n        this.getQuadrant = (value) => {\r\n            if (value <= 90) {\r\n                return 1;\r\n            }\r\n            if (value <= 180) {\r\n                return 2;\r\n            }\r\n            if (value <= 270) {\r\n                return 3;\r\n            }\r\n            return 4;\r\n        }\r\n\r\n        this.proportionIsFixed = () => {\r\n            const stateProp = this.state.proportions;\r\n            const prop = this.getPropsProportion();\r\n            const fixed = this.sumValues(stateProp) >= this.sumValues(prop);\r\n            return fixed;\r\n        }\r\n\r\n        this.proportionIsEmpty = () => {\r\n            const stateProp = this.state.proportions;\r\n            const prop = this.getPropsProportion();\r\n\r\n            return this.sumValues(prop) == 0 || 0==this.sumValues(stateProp);\r\n        }\r\n\r\n        this.getPropsProportion = () => {\r\n            const proportions = this.props.proportions;\r\n            proportions.sort(function (a, b) {\r\n                return b.proportion - a.proportion;\r\n            });\r\n            return proportions;\r\n        }\r\n\r\n        this.animate = () => {\r\n            const proportions = this.getPropsProportion();\r\n            // while (this.proportionIsFixed() == false) {\r\n\r\n            const stateProp = this.state.proportions;\r\n            for (let i = 0; i < proportions.length; i++) {\r\n                const element = proportions[i];\r\n                if (stateProp[i] == null) {\r\n                    stateProp.push({\r\n                        proportion: 0,\r\n                        value: element.value,\r\n                        label: element.label,\r\n                        color: element.color\r\n                    })\r\n                }\r\n                if (stateProp[i].proportion < element.proportion) {\r\n                    stateProp[i].proportion += 0.005;\r\n                }\r\n                if (stateProp[i].proportion >= element.proportion) {\r\n                    stateProp[i].proportion = element.proportion;\r\n                }\r\n            }\r\n            this.setState({ proportions: stateProp });\r\n            if (this.proportionIsFixed() == false) {\r\n                this.requestAnimation();\r\n            }\r\n        }\r\n        // }\r\n\r\n        this.requestAnimation = () => {\r\n            if (null != this.timeoutId) {\r\n                clearTimeout(this.timeoutId);\r\n            }\r\n            this.timeoutId = setTimeout(this.animate, 1);\r\n        }\r\n\r\n        this.resetProportion = () => {\r\n            this.setState({ proportions: [] });\r\n        }\r\n\r\n    }\r\n\r\n    sumValues(proportions) {\r\n        let val = 0;\r\n        for (let i = 0; i < proportions.length; i++) {\r\n            const element = proportions[i];\r\n            val += element.proportion;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n    componentDidUpdate() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div ><h3>{this.props.title ? this.props.title : \"Grafik\"}</h3>\r\n                <div style={{ height: 'auto' }} className=\"columns\">\r\n\r\n                    <div className=\"column has-text-centered \" style={{ overflowX: 'scroll' }}>\r\n                        {this.proportionIsEmpty() ? <h2 style={{height:PIE_CANVAS_SIZE}}>Tidak ada data</h2> :\r\n                            <canvas id=\"pie_chart_canvas\" className=\"has-background-light\" width={PIE_CANVAS_SIZE} height={PIE_CANVAS_SIZE}></canvas>\r\n                        }\r\n                    </div>\r\n                    <div className=\"column \">\r\n                        <DetailPie proportions={this.state.proportions} />\r\n                    </div>\r\n                </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DetailPie = (props) => {\r\n    return (<article className=\"message\">\r\n        <div className=\"message-body\" style={{ overflowX: 'scroll' }}>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Warna</th>\r\n                        <th>Keterangan</th>\r\n                        <th>Nilai</th>\r\n                        <th>Presentase</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.proportions.map((proportion, i) => {\r\n                        return (\r\n                            <tr key={\"PIE_PROP_\" + i}>\r\n                                <td style={{ width: '20px' }}>{i + 1}</td>\r\n                                <td style={{ padding: '5px', width: '50px' }}>\r\n                                    <div style={{ width: '40px', height: '40px', backgroundColor: proportion.color, }} />                            </td>\r\n                                <td>{proportion.label}</td>\r\n                                <td>{proportion.value}</td>\r\n                                <td>{parseFloat(100 * proportion.proportion).toFixed(2)}%</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </article>)\r\n}","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class RecordHistoriesService {\r\n    static instance = RecordHistoriesService.instance || new RecordHistoriesService();\r\n    getStatistic = (departement_id = null) => {\r\n        const request = {\r\n            filter:{ fieldsFilter:{}}\r\n        }\r\n\r\n        if (null != departement_id) {\r\n            request.filter.fieldsFilter['departement_id'] = departement_id;\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/histories/statistic\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","import  React  from 'react';\r\n\r\nexport const AnchorWithIcon = (props) => {\r\n    const className = props.className;\r\n    const iconClassName = props.iconClassName;\r\n    return (\r\n        <a className={\"button \" +className} style={props.style} onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={iconClassName}></i>\r\n            </span>\r\n            <spam>{props.children}</spam>\r\n        </a>\r\n    )\r\n}","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport const replaceString = (string, toReplace, replacement) => {\r\n\ttry {\r\n\t\tconst splitted = new String(string).split(toReplace);\r\n\t\treturn splitted.join(replacement);\r\n\t} catch (error) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n \r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst rawVal = parseInt(val);\r\n\tlet nominal =  Math.abs(val).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif(rawVal < 0){\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\nimport { replaceString } from '../../utils/StringUtil';\r\n\r\nexport const CapitalizeFirstLetter = (rawString) => {\r\n    if (null == rawString || rawString.length <= 1) {\r\n        return rawString;\r\n    }\r\n    const string = new String(rawString);\r\n    \r\n    let splitted = string.split(\"_\");\r\n    if (splitted.length > 1) {\r\n        let result = \"\";\r\n        for (let i = 0; i < splitted.length; i++) {\r\n            const element = splitted[i];\r\n            result+=CapitalizeFirstLetter(element)+ \" \";\r\n        }\r\n\r\n        return result;\r\n    }\r\n    let result = (string).substring(0,1).toUpperCase();\r\n    result+= (string).substring(1, string.length);\r\n\r\n    return result;\r\n}\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                const label = header.alias?header.alias:header.text;\r\n                return <th key={\"TH_\"+i}>{CapitalizeFirstLetter(label)}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field \"+props.className;\r\n    const orientation = props.orientation?props.orientation:\"horizontal\";\r\n    const label = props.label ? props.label : props.name;\r\n    return (\r\n        <div className={\"field is-\"+orientation}>\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{CapitalizeFirstLetter(label)}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option, i) => {\r\n        return <option key={\"select-option-\"+i} value={option.value} >{option.text}</option>\r\n    })\r\n    const label = props.label?props.label:props.name;\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{CapitalizeFirstLetter(label)}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? CapitalizeFirstLetter(props.label) : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.value}\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    const submitIconClassName = props.submitIconClassName ? props.submitIconClassName : \"fas fa-save\";\r\n    const submitButtonClassName = props.submitButtonClassName ? \"button \"+ props.submitButtonClassName : \"button is-link\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className={submitButtonClassName} type=\"submit\" style={{marginRight:'10px'}} >\r\n                        <span className=\"icon\"><i className={submitIconClassName}></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport PieChart from './PieChart';\r\nimport RecordHistoriesService from './../../../services/RecordHistoriesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport Message from './../../messages/Message';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nimport { SubmitResetButton, SelectField, LabelField } from '../../forms/commons';\r\nconst COLOR_CLOSED = 'rgb(180,230,30)';\r\nconst COLOR_NOT_CLOSED = 'rgb(255,170,200)';\r\n\r\n\r\nclass Statistic extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            errorLoadingStatistic: false\r\n        };\r\n        this.pieChartChild = React.createRef();\r\n        this.historiesService = RecordHistoriesService.instance;\r\n        this.statisticData = null;\r\n        this.departementList = [];\r\n\r\n        this.loadStatisticWithDepartement = (e) => {\r\n            e.preventDefault();\r\n            const input = document.getElementById(\"input-form-field-departement\");\r\n            const departement_id = input.value;\r\n            if (departement_id == 'all') {\r\n                this.loadStatistic(null);\r\n                return;\r\n            }\r\n            this.loadStatistic(departement_id);\r\n        }\r\n\r\n        this.statisticLoaded = (response) => {\r\n            this.statisticData = response;\r\n            if (this.pieChartChild.current) {\r\n                this.pieChartChild.current.resetProportion();\r\n            }\r\n\r\n            if (this.isLoggedUserAdmin()) {\r\n                this.departementList = response.statistic.departements;\r\n                this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n            }\r\n        }\r\n\r\n        this.statisticFailedToLoad = (e) => {\r\n            console.error(e);\r\n            this.setState({ errorLoadingStatistic: true });\r\n        }\r\n        this.loadStatistic = (departement_id = null) => {\r\n            this.setState({ errorLoadingStatistic: false });\r\n            this.commonAjax(\r\n                this.historiesService.getStatistic, departement_id,\r\n                this.statisticLoaded,\r\n                this.statisticFailedToLoad,\r\n            )\r\n        }\r\n    }\r\n\r\n    getDiscussionTopicProportion = () => {\r\n        if (this.statisticData == null) { return null }\r\n        const statistic = this.statisticData.statistic;\r\n        const total_topic = statistic.topic_count;\r\n        const proportions = [\r\n            {\r\n                proportion: statistic.topic_closed_count / total_topic,\r\n                label: 'Closed',\r\n                color: COLOR_CLOSED,\r\n                value: statistic.topic_closed_count\r\n            },\r\n            {\r\n                proportion: statistic.topic_not_closed_count / total_topic,\r\n                label: 'Not Closed',\r\n                color: COLOR_NOT_CLOSED,\r\n                value: statistic.topic_not_closed_count\r\n            }\r\n        ]\r\n        return proportions;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (null == this.state.statisticData) {\r\n            this.loadStatistic();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        if (this.state.errorLoadingStatistic) {\r\n            return (<Card title=\"Statistik\">\r\n                <ErrorInfo onClick={this.loadStatistic} /></Card>);\r\n        }\r\n        const discussionTopicProportions = this.getDiscussionTopicProportion();\r\n        if (null == discussionTopicProportions) {\r\n            return <Card title=\"Statistik\"><p>Please Wait</p></Card>\r\n        }\r\n        const departementListMapped = this.departementList.map(function (d) {\r\n            return {\r\n                value: d.id,\r\n                text: d.name\r\n            }\r\n        });\r\n        const departementOptions = [{ value: 'all', text: '-- Semua --' }, ...departementListMapped];\r\n        return (\r\n\r\n            <Card title=\"Statistik\">\r\n                <div id=\"pie_chart_discussion_topics\">\r\n                    <PieChart title=\"Tema Pembahasan\" ref={this.pieChartChild} proportions={discussionTopicProportions} />\r\n\r\n\r\n                    <form style={{ marginTop: '20px' }} onSubmit={\r\n                        this.isLoggedUserAdmin() ? (e) => this.loadStatisticWithDepartement(e) : (e) => {\r\n                            e.preventDefault();\r\n                            this.loadStatistic(null)\r\n                        }}>\r\n                        {this.isLoggedUserAdmin() ?\r\n                            <SelectField name=\"departement\" options={\r\n                                departementOptions} /> : null}\r\n                        <LabelField label=\"updated_at\" value={new Date(this.statisticData.date).toString()} />\r\n                        <SubmitResetButton submitButtonClassName=\"no\" submitIconClassName=\"fas fa-sync\" submitText=\"Reload\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nconst ErrorInfo = (props) => {\r\n\r\n    return (\r\n        <Message enableHidden={false} className=\"is-danger\" header=\"Gagal Memuat Data\">\r\n            <AnchorWithIcon onClick={props.onClick} iconClassName=\"fas fa-sync\">Muat Ulang</AnchorWithIcon>\r\n        </Message>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(actions.applicationAction.storeApplicationData(code, data)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Statistic));","export const DATA_KEY_DEPARTEMENTS = \"departements\";","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport PieChart from './PieChart';\r\nimport RecordHistoriesService from './../../../services/RecordHistoriesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport Message from './../../messages/Message';\r\nimport Statistic from './Statistic';\r\n\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n        };\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Dashboard\";\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Dashboard</CommonTitle>\r\n                <Card title=\"Welcome\" >\r\n                    <p>{this.getLoggedUser().display_name}</p>\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n               <Statistic app={this.props.app} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.getLoggedUser().role != 'admin') {\r\n            this.backToLogin();\r\n        }\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Master Data Menu</CommonTitle>\r\n                <Card title=\"Menu\">\r\n                    <div className=\"columns\">\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-object-group\"></i></p>\r\n                                <Link to=\"/management/departements\">Departements</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-users\"></i></p>\r\n                                <Link to=\"/management/users\">Users</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(ManagementMenu));\r\n","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    storeIssue = (issue) => {\r\n        const request = {\r\n            code: 'issue',\r\n            issue:issue\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    viewIssue = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"issue\"});\r\n    }\r\n\r\n    issueList = (filter) => {\r\n        return this.list({\r\n            code: 'issue',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )  \r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n            console.error(\"Error loading resource: \", e);\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link, withText = true) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        {withText?\r\n                        <span>Edit</span>\r\n                        :null}\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink, false)}\r\n                    {this.buttonDeleteRecord(id, false)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id, withText = true) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    {withText?\r\n                    <span>Delete</span>\r\n                    :null}\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.onSuccessDelete = (response) => {\r\n            this.removeDataFromStore(response.record_id);\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n        this.removeDataFromStore = (id) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) { return; }\r\n            const exist = departementList.find(dep => dep.id == id) != null;\r\n            if (!exist) return;\r\n\r\n            for (let i = 0; i < departementList.length; i++) {\r\n                const element = departementList[i];\r\n                if (element.id == id) {\r\n                    departementList.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', withFilter: true },\r\n                                        { text: 'name', withFilter: true },\r\n                                        { text: 'description', withFilter: true },\r\n                                        { text: 'action' }\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        return (<tr key={\"record_\" + i}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>\r\n                                                {this.buttonsModifyAndDelete(\r\n                                                    \"/management/departements/\" + item.id,\r\n                                                    item.id)}\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/users/\"+response.user.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.updateLocallyStoredDepartements = (departement) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) {return;}\r\n            const exist = departementList.find(dep => dep.id == departement.id) != null;\r\n            if (exist) {\r\n                for (let i = 0; i < departementList.length; i++) {\r\n                    const element = departementList[i];\r\n                    if (element.id == departement.id) {\r\n                        departementList[i] = departement;\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n                departementList.push(departement);\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            this.updateLocallyStoredDepartements(response.departement);\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/departements/\"+response.departement.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n               <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'notes',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/notes/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <ModalBackdrop>\r\n                    <form onSubmit={(e)=>e.preventDefault()}>\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly||this.props.isError?\"button\" : \"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </ModalBackdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport const ModalBackdrop = (props) => {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\n\r\nexport default class DiscussionTopicsService\r\n{\r\n    static instance = DiscussionTopicsService.instance || new DiscussionTopicsService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    store = (discussionTopic) => {\r\n\r\n        const request = {\r\n            discussion_topic: discussionTopic\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'discussion_topic',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    // delete = (id) => {\r\n    //     const endpoint = contextPath().concat(\"api/discussiontopics/delete/\"+id);\r\n    //     return commonAjaxPostCalls(endpoint, {});\r\n    // }\r\n    storeAction = (action) => {\r\n        const request = {\r\n            discussion_action: action\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/action\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { ModalBackdrop } from './../../messages/Alert';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LabelField } from './../../forms/commons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nconst TOPIC_PREFIX = \"discussion_topic_\";\r\nconst CLASS_INPUT_FIELD = \"input-form-field\";\r\n\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            discussionTopicCount: [1],\r\n            showFormDiscussionTopicInEditMode: false\r\n        }\r\n\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.form_temporary_inputs = {};\r\n        this.meetingNote = { discussion_topics: [] };\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.getMaxDiscussionTopicID = () => {\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let max = 0;\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element > max) {\r\n                    max = element;\r\n                }\r\n            }\r\n            return max;\r\n        }\r\n\r\n        this.addDiscussionTopic = () => {\r\n\r\n            if (this.getRecordId() != null && null != this.meetingNote) {\r\n                this.setState({ showFormDiscussionTopicInEditMode: true });\r\n                return;\r\n            }\r\n\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            this.saveFormTemporaryInputs();\r\n            discussionTopicCount.push(this.getMaxDiscussionTopicID() + 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n\r\n        }\r\n\r\n        this.isDiscussionTopicClosed = (id) => {\r\n            if (null == this.meetingNote || null == this.meetingNote.discussion_topics) {\r\n                return false;\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const element = this.meetingNote.discussion_topics[i];\r\n                if (element.id == id && element.is_closed) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.removeDiscussionTopic = (id) => {\r\n            this.saveFormTemporaryInputs();\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Remove discussion topic (\" + id + \")? \")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.doRemoveDiscussionTopic(id);\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.doRemoveDiscussionTopic = (id) => {\r\n            \r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let index = null;\r\n\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element == id) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if (null == index) {\r\n                return;\r\n            }\r\n            discussionTopicCount.splice(index, 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n            this.setFormTemporaryInputs();\r\n\r\n        }\r\n        this.setFormTemporaryInputs = () => {\r\n            console.debug(\"setTempDiscussionTopicValues: \", this.form_temporary_inputs);\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != this.form_temporary_inputs[element.name]) {\r\n                    element.value = this.form_temporary_inputs[element.name];\r\n                } else {\r\n                    element.value = null;\r\n                }\r\n\r\n                if (this.getRecordId() != null) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n        this.saveFormTemporaryInputs = () => {\r\n            this.form_temporary_inputs = {};\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.value == null || element.value == \"\") {\r\n                    continue;\r\n                }\r\n                this.form_temporary_inputs[element.name] = element.value;\r\n            }\r\n            console.debug(\"SAVED TEMP: \", this.form_temporary_inputs);\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (this.getRecordId() != null) {\r\n                return;\r\n            }\r\n            this.saveFormTemporaryInputs();\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });\r\n        }\r\n\r\n        this.onSubmitDiscussionTopic = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n\r\n            if (!window.confirm(\"Submit Data?\") || null == this.meetingNote) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            const discussionTopic = {\r\n                note_id: this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                discussionTopic[element.name] = element.value;\r\n            }\r\n            console.debug(\"SUBMIT:\", discussionTopic);\r\n            this.storeDiscussionTopic(discussionTopic);\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n\r\n            this.meetingNote = {\r\n                discussion_topics: []\r\n            };\r\n            let currentDiscussionTopicID = -1;\r\n            let currentDiscussionTopicIndex = -1;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                const elementName = element.name;\r\n                if (null == element.value || \"\" == element.value) {\r\n                    continue;\r\n                }\r\n                if (elementName.startsWith(TOPIC_PREFIX)) {\r\n                    const indexAndName = extractTopicDiscussionIndexAndName(elementName);\r\n                    if (indexAndName.index != currentDiscussionTopicID) {\r\n                        this.meetingNote.discussion_topics.push({});\r\n                        currentDiscussionTopicID = indexAndName.index;\r\n                        currentDiscussionTopicIndex++;\r\n                    }\r\n                    this.meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name] = element.value;\r\n                } else {\r\n                    this.meetingNote[elementName] = element.value;\r\n                }\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"meetingNote: \", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    \r\n                    this.props.history.push(\"/meetingnote/\" + response.meeting_note.id);\r\n                    this.handleSuccessGetRecord(response);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n             }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            const discussionTopics = this.meetingNote.discussion_topics;\r\n            let discussionTopicCount = [];\r\n            for (let i = 0; i < discussionTopics.length; i++) {\r\n                const element = discussionTopics[i];\r\n                discussionTopicCount.push(element.id);\r\n            }\r\n            this.form_temporary_inputs = {};\r\n\r\n            for (const key in this.meetingNote) {\r\n                if (this.meetingNote.hasOwnProperty(key)) {\r\n                    const element = this.meetingNote[key];\r\n                    if (key == (\"discussion_topics\")) {\r\n                        continue;\r\n                    }\r\n                    this.form_temporary_inputs[key] = element;\r\n                }\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const discussion_topic = this.meetingNote.discussion_topics[i];\r\n                for (const key in discussion_topic) {\r\n                    if (discussion_topic.hasOwnProperty(key)) {\r\n                        const element = discussion_topic[key];\r\n                        this.form_temporary_inputs[TOPIC_PREFIX + discussion_topic.id + \"_\" + key] = element;\r\n                    }\r\n                }\r\n            }\r\n            // console.debug(\"FORM INPUTS: \", this.form_temporary_inputs);\r\n            this.setState({ discussionTopicCount: discussionTopicCount, isLoadingRecord: false });\r\n            \r\n            // console.debug(\"FORM INPUTS == : \", this.form_temporary_inputs);\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        this.discussionTopicSaved = (response) => {\r\n            alert(\"SUCCESSS\");\r\n            this.setState({ showFormDiscussionTopicInEditMode: false });\r\n            this.loadRecord();\r\n\r\n        }\r\n        this.handleErrorSubmitDiscussionTopic = (e) => {\r\n            alert(\"Error Update Discussion Topic: \" + e);\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeDiscussionTopic = (discussionTopic) => {\r\n            this.commonAjax(this.discussionTopicService.store, discussionTopic,\r\n                this.discussionTopicSaved, this.handleErrorSubmitDiscussionTopic);\r\n        }\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.recordSaved, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Notulensi\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n\r\n        if (this.getRecordId() == null && this.meetingNote != null) {\r\n            this.meetingNote = null;\r\n            this.form_temporary_inputs = {};\r\n            this.setState({ discussionTopicCount: [1] });\r\n        }\r\n        this.setFormTemporaryInputs();\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n\r\n        const title = this.title(\"Notulensi Rapat\");\r\n        \r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        let notulis = \"\";\r\n        if (this.meetingNote != null && this.meetingNote.user != null) {\r\n            notulis = this.meetingNote.user.display_name;\r\n        } else {\r\n           notulis = this.getLoggedUser().display_name;\r\n        }\r\n        const formTitle = <>\r\n            <Link to=\"/meetingnote\">Notulensi</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n\r\n        return (\r\n            <div>\r\n                {title}\r\n                {this.state.showFormDiscussionTopicInEditMode ?\r\n                    <FormAddDiscussionTopic onSubmit={this.onSubmitDiscussionTopic}\r\n                        onClose={(e) => this.setState({ showFormDiscussionTopicInEditMode: false })}\r\n                    /> : null\r\n                }\r\n                <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                    <Card title={formTitle}>\r\n                        {this.getRecordId() != null && this.meetingNote != null ?\r\n                            <FormUpperTag meetingNote={this.meetingNote} /> : null}\r\n                        \r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <LabelField label=\"Tema Pembahasan\" >\r\n                            <span className=\"tag is-dark\">\r\n                                <b>{this.state.discussionTopicCount.length}</b></span>\r\n                        </LabelField>\r\n                        <LabelField label=\"Notulis\" >{notulis}</LabelField>\r\n                    </Card>\r\n\r\n                    {/* ---------- discussion topics forms ----------- */}\r\n                    {this.state.discussionTopicCount.map((id, i) => {\r\n                        const isClosed = this.isDiscussionTopicClosed(id);\r\n                        const title = \"Tema Pembahasan #\" + (i + 1);// +\", id:\"+id;\r\n                        return (\r\n                            <Card title={title} key={\"disc_topic_field_\" + i}\r\n                            >\r\n                                {isClosed ?\r\n                                    <span className=\"tag is-primary\"><i className=\"fas fa-check\" />&nbsp;Closed</span> :\r\n                                    null}\r\n                                {this.getRecordId() == null && this.state.discussionTopicCount.length > 1 ?\r\n                                    <ButtonRemoveTopic id={id} removeDiscussionTopic={\r\n                                        this.removeDiscussionTopic} /> : null}\r\n\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={TOPIC_PREFIX + id + \"_content\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={TOPIC_PREFIX + id + \"_decision\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={TOPIC_PREFIX + id + \"_deadline_date\"} type=\"date\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={TOPIC_PREFIX + id + \"_person_in_charge\"} />\r\n\r\n                                {this.getRecordId() != null ? <LinkEditAndAction id={id} /> : null}\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                    <ButtonAddTopic addDiscussionTopic={this.addDiscussionTopic} />\r\n                    {this.getRecordId() == null ?\r\n                    <Card title=\"Action\">\r\n                        <SubmitResetButton submitText={\"Create\"} withReset={true} />\r\n                    </Card>\r\n                        : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormAddDiscussionTopic = (props) => {\r\n    return (\r\n        <ModalBackdrop >\r\n            <div className=\"container\">\r\n                <Card title=\"Tambah Tema Pembahasan\"\r\n                    headerIconClassName=\"fas fa-times\"\r\n                    headerIconOnClick={props.onClose}\r\n                >\r\n                    <form onSubmit={props.onSubmit}>\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={\"content\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={\"decision\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={\"deadline_date\"} type=\"date\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={\"person_in_charge\"} />\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                    <div className=\"level\">\r\n                        <div className=\"level-left\">\r\n                        <a className=\"button\" onClick={props.onClose}>Close</a>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </Card>\r\n            </div>\r\n        </ModalBackdrop>\r\n    )\r\n}\r\n\r\nconst extractTopicDiscussionIndexAndName = (elementName) => {\r\n    const result = {\r\n        index: 0,\r\n        name: null,\r\n    }\r\n    let elementNameSplitKey = elementName.split(TOPIC_PREFIX);\r\n    let elementNameSplitIndex = elementNameSplitKey[1].split(\"_\");\r\n    result.index = parseInt(elementNameSplitIndex[0]);\r\n    result.name = elementName.split(TOPIC_PREFIX + result.index + \"_\")[1];\r\n    return result;\r\n}\r\n\r\nconst ButtonRemoveTopic = (props) => {\r\n\r\n    return (\r\n        <a className=\"button is-danger is-outlined\" onClick={(e) => props.removeDiscussionTopic(props.id)}>\r\n            <span className=\"icon\"><i className=\"fas fa-times\" /></span>\r\n            <span>Remove</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst DiscussionTopicStatusInfo = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    if (null == meetingNote) return null;\r\n    const discussion_topics = meetingNote.discussion_topics;\r\n    if (null == discussion_topics) return null;\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed) {\r\n            closed++;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table><tbody><tr >\r\n            <td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Closed</span>\r\n                    <span className=\"tag is-info\">{closed}</span>\r\n                </div>\r\n            </td><td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Not Closed</span>\r\n                    <span className=\"tag is-danger\">{discussion_topics.length - closed}</span>\r\n                </div></td>\r\n        </tr></tbody></table>\r\n    )\r\n}\r\n\r\nconst ButtonAddTopic = (props) => {\r\n    return (\r\n        <div className=\"has-text-centered\">\r\n            <a className=\"button is-primary is-outlined\" onClick={props.addDiscussionTopic}\r\n                style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>{\"Tambah Tema Pembahasan\"}</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    const id = props.id;\r\n    return (\r\n        <div className=\"buttons has-addons\">\r\n            <Link to={\"/discussiontopics/\" + id} className=\"button is-warning\">\r\n                <i className=\"fas fa-edit\" />&nbsp;Edit\r\n            </Link>\r\n            <Link to={\"/discussiontopics/\" + id + \"/action\"} className=\"button is-primary\">\r\n                <i className=\"fas fa-location-arrow\" />&nbsp;Konfirmasi\r\n            </Link></div>\r\n    )\r\n}\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\nconst FormUpperTag = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div className=\"level\">\r\n                <div className=\"level-left\" >\r\n                    <DiscussionTopicStatusInfo meetingNote={meetingNote} />\r\n                </div>\r\n                <div className=\"level-right\">\r\n                    <span className=\"tag is-primary is-medium\">{meetingNote.departement.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Profile</CommonTitle>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\nexport default class IssuesService\r\n{\r\n    static instance = IssuesService.instance || new IssuesService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    //public//\r\n    departementList = () => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/departements\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    storePublicIssue =(issue) => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/store\");\r\n        return commonAjaxPostCalls(endpoint, {\r\n            issue:issue\r\n        });\r\n    }\r\n\r\n    //authenticated//\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'issue',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    delete = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/delete/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    followUpIssue = (followUp) => {\r\n        const request = {\r\n            followed_up_issue: followUp\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/followup\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport Columns from './../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nclass IssuesList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Aduan\", \"issue\");\r\n        this.state = {}\r\n        this.issueService = IssuesService.instance;\r\n\r\n        //overrid\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.issueService.delete,\r\n                id,\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.issueService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Aduan\";\r\n    }\r\n\r\n    //overrid baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.isLoggedUserNull()) {return null;}\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Aduan</CommonTitle>\r\n                <Card title=\"Daftar Aduan\">\r\n                {!isAdmin?null:this.linkToFormCreate(\"/issues/create\", \"Tambah Aduan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'date', withFilter: true },\r\n                                    { text: 'place', withFilter: true },\r\n                                    { text: 'content', withFilter: true },\r\n                                    { text: 'issuer', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'issue_input', withFilter: true },\r\n                                    { text: 'is_closed', alias:'Status', withFilter: true},\r\n                                    { text: 'closed_date', alias:'Closed', withFilter: true},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.issuer}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.issue_input}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.closed_date}\r\n                                    </td>\r\n                                    <td>\r\n                                        {isAdmin?\r\n                                        <>\r\n                                        <Link to={\"/issues/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        {this.buttonDeleteRecord(item.id, false)}\r\n                                        </>\r\n                                        :null}\r\n                                        <Link to={\"/issues/\" + item.id+\"/followup\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesList));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\n\r\nexport const issue_sources = [\r\n    'Yayasan', 'Orang Tua', 'Santri', 'Pegawai', 'Tamu',\r\n]\r\n\r\nclass IssuesForm extends BaseAdminPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const issue = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    issue[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                issue.id = this.getRecordId();\r\n            }\r\n            this.store(issue);\r\n            console.debug(\"ISSUE: \", issue);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList= response.result_list;\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/issues/\" + response.issue.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (issue) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeIssue, issue,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n                this.commonAjax(\r\n                    this.masterDataService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    (error) => { }\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n               \r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.issue.departement_id;\r\n                } else {\r\n                    element.value = response.issue[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewIssue, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadDepartements();\r\n        document.title = \"Form Aduan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Aduan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Tanggal\" name=\"date\" type=\"date\" required={true} />\r\n                        <InputField label=\"Tempat\" name=\"place\" required={true} />\r\n                        <InputField label=\"Permasalahan\" name=\"content\" type=\"textarea\" required={true} />\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Sumber Aduan\" name=\"issue_input\" required={true} />\r\n                        <SelectField label=\"Pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"Departement\" options={this.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(IssuesForm));","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ClosedStatus extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const isClosed = this.props.closed == true;\r\n        return (\r\n            <div className=\"tags has-addons are-medium\">\r\n                <span className=\"tag is-dark\">Status</span>\r\n                <span className={\"tag \" + (isClosed ? \"is-info\" : \"is-warning\")}>{isClosed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-follow-up-issue\";\r\nclass IssuesFollowingUpForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailIssue: true,\r\n        }\r\n        this.issue = {};\r\n        this.issueService = IssuesService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({ showDetailIssue: false });\r\n        }\r\n        this.showDetailIssue = () => {\r\n            this.setState({ showDetailIssue: true });\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                issue_id: this.issue.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.issue.follow_up = response.followed_up_issue;\r\n            this.issue.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.issue = response.issue;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (followUp) => {\r\n            this.commonAjax(this.issueService.followUpIssue, followUp,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.issueService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.issue != null && this.issue.is_closed == true;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        const isClosed = this.issue.is_closed;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Tindak Lanjut Aduan</CommonTitle>\r\n\r\n                <Card title=\"Detail Aduan\">\r\n                    <ClosedStatus closed={isClosed} />\r\n                    {this.state.showDetailIssue ?\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Aduan</p>\r\n                                <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Waktu dan Tempat\">\r\n                                    <p>{this.issue.place}, {dateStringDayMonthYearFromText(this.issue.date)}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Bidang\">\r\n                                    <p>{this.issue.departement.name}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Permasalahan\">\r\n                                    <p>{this.issue.content}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Pengadu\">\r\n                                    <p>{this.issue.email}, {this.issue.issuer}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Sumber Input\">\r\n                                    <p>{this.issue.issue_input}</p>\r\n                                </LabelField>\r\n\r\n                            </div>\r\n                        </article>\r\n                        :\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-down\" onClick={this.showDetailIssue}>\r\n                            Detail Aduan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.issue.follow_up == null ?\r\n                        <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                        </form>\r\n                        :\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Tindak Lanjut</p>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Tanggal\">\r\n                                    <p>{this.issue.follow_up.date}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Keterangan\">\r\n                                    <p>{this.issue.follow_up.description}</p>\r\n                                </LabelField>\r\n                            </div>\r\n                        </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesFollowingUpForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport ClosedStatus from '../../messages/ClosedStatus';\r\n\r\nclass DiscussionTopicsForm extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const discussionTopic = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    discussionTopic[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                discussionTopic.id = this.getRecordId();\r\n            }\r\n            this.store(discussionTopic);\r\n            console.debug(\"discussionTopic: \", discussionTopic);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/discussiontopics/\" + response.discussion_topic.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (discussionTopic) => {\r\n            this.commonAjax(\r\n                this.discussionTopicService.store, discussionTopic,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.recordData = response;\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false });\r\n\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = this.discussionTopic[element.name];\r\n                if (this.isClosed() == false && element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed() == true) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n        document.title = \"Form Tema Pembahasan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const title = this.title(\"Form Tema Pembahasan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title={formTitle} >\r\n                    {this.getRecordId() != null && this.discussionTopic != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <ClosedStatus closed={isClosed} />\r\n                            </div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.discussionTopic.departement == null ? null : this.discussionTopic.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed() ? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkDetailMeetingNote = (props) => {\r\n    const note_id = props.note_id;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <Link to={\"/meetingnote/\" + props.note_id} className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-clipboard\"></i>\r\n                </span>\r\n                <span>Detail Notulensi</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DiscussionTopicsForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LinkDetailMeetingNote } from './DiscussionTopicsForm';\r\nimport { AnchorWithIcon } from '../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-discussion-action\";\r\nclass DiscussionActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailDiscussionTopic: true,\r\n        }\r\n        this.discussionTopic = {};\r\n        this.discussionTopicSerivce = DiscussionTopicsService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailDiscussionTopic:false});\r\n        }\r\n        this.showDetailDiscussionTopic = () => {\r\n            this.setState({showDetailDiscussionTopic:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                topic_id : this.discussionTopic.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.discussionTopic.action = response.discussion_action;\r\n            this.discussionTopic.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.discussionTopicSerivce.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicSerivce.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Konfirmasi Tema Pembahasan\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n    render() {\r\n        \r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return null;\r\n        }\r\n        \r\n        const title = this.title(\"Penyelesaian/Pelaksanaan Keputusan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title=\"Detail Tema Pembahasan\">\r\n                    <ClosedStatus closed={isClosed} />\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    {this.state.showDetailDiscussionTopic? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tema Pembahasan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                        <LabelField label=\"Waktu\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.discussionTopic.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.discussionTopic.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.discussionTopic.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.discussionTopic.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <AnchorWithIcon onClick={this.showDetailDiscussionTopic} iconClassName=\"fas fa-angle-down\">\r\n                        Detail Tema Pembahasan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Penyelesaian/Pelaksanaan Keputusan\">\r\n                    {this.discussionTopic.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <formComponent.InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <formComponent.InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.discussionTopic.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.discussionTopic.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionActionForm));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { getDiffDaysToNow } from './../../../utils/DateUtil';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass DiscussionTopicsList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Topik Pembahasan\", \"discussiontopic\");\r\n        this.state = {}\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => {\r\n            // this.commonAjax(\r\n            //     this.discussionTopicService.delete,\r\n            //     id,\r\n            //     this.onSuccessDelete,\r\n            //     this.onErrorDelete\r\n            // )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.discussionTopicService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Tema Pembahasan\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Tema Pembahasan</CommonTitle>\r\n                <Card title=\"Daftar Tema Pembahasan\">\r\n\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'content', alias: \"Pembahasan\", withFilter: true },\r\n                                        { text: 'decision', alias: \"Keputusan\", withFilter: true },\r\n                                        { text: 'deadline_date', alias: \"Deadline\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'is_closed', alias: 'Status', withFilter: true },\r\n                                        { text: 'closed_date', alias: 'Closed', withFilter: true },\r\n                                        { text: 'action' },\r\n                                        { text: 'opsi' },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record_\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                            <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                            <td>{item.deadline_date}</td>\r\n                                            <td>{item.departement.name}</td>\r\n                                            <td>\r\n                                                {item.is_closed == true ?\r\n                                                    <span className=\"tag is-info\">Closed</span>\r\n                                                    :\r\n                                                    <span className=\"tag is-warning\">Not Closed</span>}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.closed_date}\r\n                                            </td>\r\n                                            <td><LinkEditAndAction id={item.id} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={\"/meetingnote/\" + item.note_id}\r\n                                                    className=\"button is-light is-small\">\r\n                                                    <span className=\"icon\">\r\n                                                        <i className=\"fas fa-clipboard\" />\r\n                                                    </span>\r\n                                                    <span>Notulensi</span>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    return (\r\n        <>\r\n            <Link to={\"/discussiontopics/\" + props.id} className=\"button is-small\" >\r\n                <i className=\"fas fa-edit\"></i>\r\n            </Link>\r\n\r\n            <Link to={\"/discussiontopics/\" + props.id + \"/action\"} className=\"button is-primary is-small\" >\r\n                <i className=\"fas fa-location-arrow\"></i>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionTopicsList));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport { getDiffDaysToNow } from '../../../utils/DateUtil';\r\nimport MeetingNoteSerivce from './../../../services/MeetingNoteSerivce';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass MeetingNoteList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Notulensi\", \"notes\");\r\n        this.state = {}\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => { }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.meetingNoteService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Notulensi\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Notulensi</CommonTitle>\r\n                <Card title=\"Daftar Notulensi\">\r\n                    <LinkToFormCreate to=\"meetingnote/create\">Tambah Notulensi</LinkToFormCreate>\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table style={{}} className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'place', alias: \"Tempat\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'user', alias: \"Notulis\", withFilter: true },\r\n                                        { text: 'discussion_topics_count', alias:\"Topik\", withFilter:true},\r\n                                        { text: 'discussion_topics_closed_count', alias:\"closed\", withFilter:true},\r\n                                        { text: 'action', },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record-meeting-note-\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.place}</td>\r\n                                            <td>{item.departement ? item.departement.name : \"-\"}</td>\r\n                                            <td>{item.user ? item.user.name : \"-\"}</td>\r\n                                            <td>\r\n                                                {item.discussion_topics_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.discussion_topics_closed_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkEditPage id={item.id} />\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkToFormCreate = (props) => {\r\n    return (\r\n        <Link to={props.to} className=\"button is-primary\" style={{ marginBottom: '10px' }}>\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-plus\"></i>\r\n            </span>\r\n            <span>{props.children}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst LinkEditPage = (props) => {\r\n    return (\r\n        <Link to={\"/meetingnote/\" + props.id} className=\"button is-small\" >\r\n            <i className=\"fas fa-edit\"></i>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteList));","import React, { Component } from 'react';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Not Found\";\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/* <CommonTitle>404 Not Found</CommonTitle> */}\r\n                <article class=\"message is-warning\">\r\n                    <div class=\"message-header\">\r\n                        <p>404 Not Found</p>\r\n                        <button class=\"delete\" aria-label=\"delete\"></button>\r\n                    </div>\r\n                    <div class=\"message-body\">\r\n                        Halaman tidak ditemukan\r\n  </div>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport { InputField, SubmitResetButton } from '../../forms/commons';\r\nimport { issue_sources } from './IssuesForm';\r\nimport { SelectField } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nconst ADDITION = \"+\";\r\nconst SUBSTRACTION = \"-\";\r\nclass IssueFormPublic extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            captchaUpdate: new Date(),\r\n            recordSave: false,\r\n        }\r\n        this.issueService = IssuesService.instance;\r\n        this.departementList = [];\r\n        this.captcha = {\r\n            firstNumber: 1,\r\n            secordNumber: 2,\r\n            operator: ADDITION,\r\n            updatedAt: new Date()\r\n        };\r\n\r\n        this.resetCaptcha = () => {\r\n            this.captcha.firstNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.secordNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.operator = this.captcha.firstNumber % 2 == 0 ? ADDITION : SUBSTRACTION;\r\n            this.captcha.updatedAt = new Date();\r\n            this.setState({ captchaUpdate: this.captcha.updatedAt });\r\n        }\r\n\r\n        this.validateCaptcha = (value) => {\r\n            const number1 = this.captcha.firstNumber;\r\n            const number2 = this.captcha.secordNumber;\r\n            if (this.captcha.operator == ADDITION) {\r\n                return number1 + number2 == value;\r\n            } else if (this.captcha.operator == SUBSTRACTION) {\r\n                return number1 - number2 == value;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const capchaResult = document.getElementsByName(\"captcha_result\")[0].value;\r\n            const captchaValidated = this.validateCaptcha(capchaResult);\r\n            const app = this;\r\n            if (!captchaValidated) {\r\n\r\n                this.showError(\"Invalid Captcha\");\r\n                return;\r\n            }\r\n            this.showConfirmation(\"Submit Data?\").then(function (ok) {\r\n                if (ok) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const issue = {};\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                issue[element.name] = element.value\r\n            }\r\n            console.debug(\"Issue: \", issue);\r\n            this.storeIssue(issue);\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList = response.result_list;\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n        this.departementListNotLoaded = (error) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Error loading data.. please try or reload the page\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.loadDepartements();\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.resetCaptcha();\r\n            this.setState({ recordSaved: true });\r\n        }\r\n\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"Gagal menyimpan aduan: \" + e + \" Silakan muat ulang halaman dan coba lagi\");\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n\r\n                this.commonAjax(\r\n                    this.issueService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    this.departementListNotLoaded\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.storeIssue = (issue) => {\r\n            this.commonAjax(\r\n                this.issueService.storePublicIssue, issue,\r\n                this.recordSaved,\r\n                this.recordFailedToSave\r\n            );\r\n        }\r\n\r\n        this.showForm = () => {\r\n            this.setState({ recordSaved: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Aduan Publik\";\r\n        this.loadDepartements();\r\n        this.resetCaptcha();\r\n    }\r\n\r\n    componentDidUpdate() { }\r\n\r\n    render() {\r\n        const title = this.title(\"Form Aduan Publik\");\r\n        if (this.state.recordSaved == true) {\r\n\r\n            return (\r\n                <div>\r\n                    {title}\r\n                    <div className=\"box has-text-success\" style={{ textAlign: 'center', margin: '10px' }}>\r\n                        <span className=\"icon\" style={{ fontSize: '4em', marginTop: '30px' }}><i className=\"fas fa-check\" /></span>\r\n                        <h2>Terimakasih. Aduan Anda berhasil disimpan!</h2>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-right\" onClick={this.showForm} >Kirim Tanggapan Lain</AnchorWithIcon>\r\n                    </div>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                {title}\r\n                <Card title=\"Form\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <InputField name=\"date\" label=\"tanggal\" type=\"date\" required={true} />\r\n\r\n                        <InputField name=\"place\" label=\"tempat\" required={true} />\r\n                        <InputField name=\"content\" label=\"permasalahan\" type=\"textarea\" required={true} />\r\n                        <InputField name=\"email\" type=\"email\" note=\"Kosongkan jika berstatus anonim\" />\r\n                        <SelectField label=\"pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"bidang\" options={this.departementList.map(item => {\r\n                            return {\r\n                                value: item.id,\r\n                                text: item.name\r\n                            }\r\n                        })} name=\"departement_id\" required={true} />\r\n\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label\"></div>\r\n                            <div className=\"field-body\">\r\n                                <CaptCha reset={this.resetCaptcha} captcha={this.captcha} />\r\n                            </div>\r\n                        </div>\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass CaptCha extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas_id = \"captcha_canvas_\" + new Date().getTime();\r\n    }\r\n    getCaptchaText() {\r\n        const captcha = this.props.captcha;\r\n        const text = captcha.firstNumber + \" \" + captcha.operator + \" \" + captcha.secordNumber;\r\n        return text;\r\n    }\r\n    drawCanvas() {\r\n        const canvas = document.getElementById(this.canvas_id);\r\n        const context = canvas.getContext('2d');\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.fillStyle = '#000';\r\n        context.font = '70px Arial';\r\n        context.fillText(this.getCaptchaText(), 10, 50);\r\n    }\r\n    componentDidUpdate() {\r\n        this.drawCanvas();\r\n    }\r\n    componentDidMount() {\r\n        this.drawCanvas();\r\n    }\r\n    render() {\r\n        const captcha = this.props.captcha;\r\n        return (\r\n\r\n            <article style={{ width: '100%' }} className=\"message \">\r\n                <div className=\"message-header has-background-grey-lighter\">\r\n                    <p className=\"has-text-dark\">Captcha</p>\r\n                    <a onClick={this.props.reset} className=\"button\"><i className=\"fas fa-sync\" /></a>\r\n                </div>\r\n                <div className=\"message-body has-background-light\">\r\n                    <canvas id={this.canvas_id} className=\"has-background-light\" style={{ width: '100px', height: 'auto' }} />\r\n                    <input className=\"input\" name=\"captcha_result\" required />\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssueFormPublic));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/dashboard/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport Profile from '../pages/Profile';\r\nimport IssuesList from '../pages/issues/IssuesList';\r\nimport IssuesForm from '../pages/issues/IssuesForm';\r\nimport IssuesFollowingUpForm from '../pages/issues/IssuesFollowingUpForm';\r\nimport DiscussionActionForm from '../pages/discussiontopics/DiscussionActionForm';\r\nimport DiscussionTopicsForm from '../pages/discussiontopics/DiscussionTopicsForm';\r\nimport DiscussionTopicsList from '../pages/discussiontopics/DiscussionTopicsList';\r\nimport MeetingNoteList from '../pages/meetingnotes/MeetingNoteList';\r\nimport NotFound from './../pages/errors/NotFound';\r\nimport IssueFormPublic from './../pages/issues/IssueFormPublic';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          {/* ========= meeting notes ========= */}\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote\" render={\r\n            (props) =>\r\n              <MeetingNoteList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          {/* ======== issues ========= */}\r\n          <Route exact path=\"/issues\" render={\r\n            (props) =>\r\n              <IssuesList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/create\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues-public\" render={\r\n            (props) => <IssueFormPublic app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id/followup\" render={\r\n            (props) =>\r\n              <IssuesFollowingUpForm app={this.props.app} />\r\n          } />\r\n          {/* ======== discussiontopics ========= */}\r\n          <Route exact path=\"/discussiontopics\" render={\r\n            (props) =>\r\n              <DiscussionTopicsList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id/action\" render={\r\n            (props) =>\r\n              <DiscussionActionForm app={this.props.app} />\r\n          } />\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* ============== users management ============= */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* ================ departements management ============= */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n\r\n          {/* ////////////404///////////////// */}\r\n          <Route path=\"\" component={NotFound} />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      // <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000, color: '#ccc'}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\nclass SideBar extends BaseMenus {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <aside className=\"menu\">\r\n                    {MENUS.map((menu, i) => {\r\n                        const childs = this.extractChildren(menu.children);\r\n                        if (childs == null || childs.length == 0) { return null; }\r\n                        const isMenuListShown = this.isMenuListShown(menu.name);\r\n                        const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                        return (\r\n                            <React.Fragment key={\"menu_\" + menu.name}>\r\n                                <p key={menu.name} menu-name={menu.name} onClick={this.toggleMenuList} className=\"menu-label\">\r\n                                    <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                    {menu.name}\r\n                                </p>\r\n                                {isMenuListShown ?\r\n                                    <ul className=\"menu-list\">\r\n                                        {childs.map((menuChild, j) => {\r\n                                            return (<li key={\"sidebar-menu-child-\" + i + \"-\" + j}>\r\n                                                <Link to={menuChild.link}>\r\n                                                    <span className=\"icon\">\r\n                                                        <i className={menuChild.iconClassName ? menuChild.iconClassName : \"fas fa-folder\"} />\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        {menuChild.name}\r\n                                                    </span>\r\n                                                </Link>\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>\r\n                                    : null}\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))\r\n\r\n","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actions/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nimport SideBar from './components/layout/SideBar';\nimport './components/layout/SideBar.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      \n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert\n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section style={{ minHeight: '70vh' }}>\n          <div >\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\" style={{ minHeight: '70vh', marginBottom: '1px' }}>\n            <div style={{ paddingTop: '20px', paddingLeft: '20px', borderRight:'solid 2px #ccc' }}\n              className=\"menu-container column is-one-fifth has-background-water-ter\">\n              \n                <SideBar app={this} />\n               \n            </div>\n            <div className=\"column is-four-fifths\">\n\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    requestId: state.userState.requestId,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n    applicationData: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    const result = state;\r\n    switch (action.type) {\r\n        case types.STORE_APPLICTION_DATA:\r\n            const key = action.payload.key;\r\n            const data = action.payload.data;\r\n           \r\n            result.applicationData[key] = data\r\n\r\n            return result;\r\n        case types.REMOVE_APPLICTION_DATA:\r\n            \r\n            delete result[action.payload.key];\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as applicationReducer from \"./applicationReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        applicationState: applicationReducer.reducer,\r\n        \r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    applicationState: applicationReducer.initState,\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            }).catch((error)=>{\r\n                alert(\"Error requesting application: \"+error+\". Try to reload the page\");\r\n            });\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as types from '../redux/types'\r\n\r\n\r\nexport const storeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_APPLICTION_DATA) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nexport const removeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_APPLICTION_DATA) {\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport { storeApplicationData } from './../middlewares/ApplicationMiddleware';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            storeApplicationData\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}