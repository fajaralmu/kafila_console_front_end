{"version":3,"sources":["logo.svg","constant/Url.js","redux/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/BaseMenus.js","components/layout/SideBar.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","utils/StringUtil.js","components/forms/commons.js","components/buttons/NavButtons.js","components/container/Card.js","utils/DateUtil.js","components/pages/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","middlewares/Common.js","services/Promises.js","services/MasterDataService.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/pages/meetingnotes/MeetingNoteForm.js","components/pages/meetingnotes/MeetingNoteActionForm.js","services/UserService.js","components/pages/Profile.js","services/IssuesService.js","components/pages/issues/IssuesList.js","components/pages/issues/IssuesForm.js","components/pages/issues/IssuesFollowingUpForm.js","services/DiscussionTopicsService.js","components/pages/discussiontopics/DiscussionActionForm.js","components/pages/discussiontopics/DiscussionTopicsForm.js","components/pages/discussiontopics/DiscussionTopicsList.js","components/layout/Content.js","components/widget/Loader.js","components/messages/Alert.js","App.js","redux/userReducer.js","redux/managementReducer.js","redux/meetingNotesReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/CatalogMiddleware.js","middlewares/MeetingNoteMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","apiNotes","accountAction","app","startLoading","type","payload","meta","email","password","user","meetingNotesAction","request","filter","fieldsFilter","console","debug","limit","page","orderBy","orderType","Footer","className","href","Component","BaseComponent","props","authenticated","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","getLoggedUser","isLoggedUserNull","showConfirmation","body","Promise","resolve","reject","showAlert","e","showInfo","showError","showAlertError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","warn","commonAjax","commonAjaxWithProgress","this","CommonTitle","style","textAlign","children","BaseMenus","state","shownMenuList","id","setState","hideMenuList","isMenuListShown","toggleMenuList","menuName","target","getAttribute","menuChildren","i","length","element","role","MENUS","name","link","SideBar","map","menu","childs","extractChildren","iconClassName","Fragment","key","menu-name","onClick","marginRight","menuChild","j","to","withRouter","connect","userState","menus","requestId","applicationProfile","dispatch","Header","showBurger","toggleNavBurger","performLogout","accepted","backgroundColor","src","width","height","marginLeft","linkProperty","display_name","AppLink","actions","Message","show","hide","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","Date","handleSubmit","event","preventDefault","form","FormData","elements","performLogin","showLoginInfo","loginFailed","current","title","ref","marginTop","onSubmit","nam","placeholder","required","TableHeadWithFilter","headers","onButtonOrderClick","alias","string","toReplace","replacement","String","split","join","error","replaceString","text","toUpperCase","withFilter","fontSize","sort","data","InputFormFilter","ButtonApplyResetFilter","InputField","label","note","SelectField","options","option","LabelField","SubmitResetButton","submitValue","submitText","withReset","NavButtons","index","buttonValues","generateButtonValues","totalData","activeIndex","buttonsData","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","margin","aria-hidden","withButtonFooter","footerContent","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","getDiffDaysToNow","date","getTime","Dashboard","count","getMeetingNotesByPage","getMeetingNotes","readInputForm","initialize","hasFilter","meetingNoteData","inputs","getElementsByClassName","onSubmitClick","populateDefaultInputs","hasOwnProperty","meetingNoteList","result_list","navButtons","createNavButton","departement","formComponent","overflow","item","indexBegin","deadlineDate","parse","deadline_date","diffDay","is_closed","content","substring","decision","meetingNoteState","BaseAdminPage","ManagementMenu","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","indexOf","axios","require","commonAjaxPostCalls","endpoint","post","code","MasterManagementService","setUsersData","usersData","storeUser","userModel","storeIssue","issue","viewUser","userList","list","viewIssue","issueList","storeDepartement","viewDepartement","deleteRecord","departementList","departementsData","instance","BaseManagementPage","loadRecords","masterDataServce","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","buttonsModifyAndDelete","editLink","buttonDeleteRecord","withText","Columns","cells","cell","UsersManahement","masterDataService","showForm","recordList","DeparementManagement","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","match","departementListLoaded","loadRecord","recordSaved","handleSuccessGetRecord","recordFailedToSave","loadDepartements","departement_id","handleErrorGetRecord","formTitle","dep","DepartementManagementForm","MeetingNoteSerivce","meetingNote","meeting_note","view","storeAction","action","FORM_ID","MeetingNoteForm","isSubmitting","meetingNoteService","fillDataAndStore","tagName","storeMeetingNote","handleErrorSubmit","isClosed","setAttribute","enableInputs","removeAttribute","reset","MeetingNoteActionForm","showDetailNote","hideDetailNote","note_id","handleSuccessSubmit","place","person_in_charge","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","IssuesService","followUpIssue","followUp","followed_up_issue","IssuesList","issueService","isAdmin","issuer","issue_input","issue_sources","IssuesForm","source","IssuesFollowingUpForm","showDetailIssue","hideDetailIssue","issue_id","follow_up","DiscussionTopicsService","discussionTopic","discussion_topic","discussion_action","DiscussionActionForm","showDetailDiscussionTopic","discussionTopicSerivce","topic_id","DiscussionTopicsForm","discussionTopicService","DiscussionTopicsList","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","Home","Loader","opacity","position","zIndex","color","Backdrop","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","App","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","refresh","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","refreshLogin","additionalMenus","Array","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","paddingTop","paddingLeft","initState","loginKey","loginAttempt","reducer","result","api_token","entitiesData","entityConfig","managedEntity","entityProperty","managementMenus","entities","generalList","rootReducer","combineReducers","userReducer","managementState","managementReducer","meetingNotesReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","Object","assign","err","param","requestAppIdMiddleware","message","get","refreshLoginStatusMiddleware","performLogoutMiddleware","logoutSuccess","alert","removeEntityMiddleware","updateCartMiddleware","getMeetingNotesMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","meetingNoteMiddleware","Root","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d1b9cfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n \r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n} \r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n} \r\n  \r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const meetingNotesAction = {\r\n    store: (meetingNote, app) => {\r\n        app.startLoading();\r\n        let requested = {\r\n            type: types.STORE_MEETING_NOTES,\r\n            payload: {\r\n                meeting_note:meetingNote    \r\n            },\r\n            meta: {\r\n                type: types.STORE_MEETING_NOTES,\r\n                url: apiNotes.concat(\"store\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    list : (request, app) => {\r\n        app.startLoading();\r\n        \r\n        const filter =  request.fieldsFilter;\r\n        console.debug(\"request.fieldsFilter: \", filter);\r\n        let requested = {\r\n            type: types.GET_MEETING_NOTES,\r\n            payload: {\r\n                filter: {\r\n                    limit: request.limit,\r\n                    page: request.page,\r\n                    fieldsFilter: filter,\r\n                    orderBy: request.orderBy,\r\n                    orderType: request.orderType,\r\n                },\r\n            },\r\n            meta: {\r\n                type: types.GET_MEETING_NOTES,\r\n                url: apiNotes.concat(\"list\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    }\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const GET_MEETING_NOTES = \"GET_MEETING_NOTES\";\r\nexport const STORE_MEETING_NOTES = \"GET_MEETING_NOTES\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">Kafila International Islamic School</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import  React , {Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return true;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.getLoggedUser = () => {\r\n            return this.props.loggedUser;\r\n        }\r\n        this.isLoggedUserNull = () => {\r\n            return false == this.props.loginStatus || null == this.props.loggedUser;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n\r\nexport const CommonTitle = (props) => {\r\n    return <h2 style={{ textAlign: 'center' }}>{props.children}</h2>\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nexport default class BaseMenus extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            shownMenuList: {}\r\n        }\r\n\r\n        this.shownMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = true;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.hideMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = false;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.isMenuListShown = (id) => {\r\n            return this.state.shownMenuList[id] == true;\r\n        }\r\n        this.toggleMenuList = (e) => {\r\n            const menuName = e.target.getAttribute(\"menu-name\");\r\n            if (this.isMenuListShown(menuName)) {\r\n                this.hideMenuList(menuName);\r\n            } else {\r\n                this.shownMenuList(menuName);\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    extractChildren(menuChildren) {\r\n        const children = [];\r\n        for (let i = 0; i < menuChildren.length; i++) {\r\n            const element = menuChildren[i];\r\n            if (element.authenticated && this.isLoggedUserNull()) {\r\n                continue;\r\n            }\r\n            if (this.isLoggedUserNull() == false && element.role != null && this.getLoggedUser().role != element.role) {\r\n                continue;\r\n            }\r\n            children.push(element);\r\n        }\r\n\r\n        return children;\r\n    }\r\n    \r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nimport BaseMenus from './BaseMenus';\r\n\r\nexport const MENUS = [\r\n    {\r\n        name: 'Umum',\r\n        children: [\r\n            {\r\n                name: 'Home',\r\n                link: '/home'\r\n            }, {\r\n                name: 'Dashboard',\r\n                link: '/dashboard',\r\n                authenticated: true,\r\n            }]\r\n    }, {\r\n        name: 'Notulensi',\r\n        children: [{\r\n            name: 'Tambah Notulensi',\r\n            link: '/meetingnote/create',\r\n            authenticated: true,\r\n        }]\r\n    }, {\r\n        name: 'Aduan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/issues',\r\n            authenticated: true,\r\n        },\r\n        {\r\n            name: 'Tambah',\r\n            link: '/issues/create',\r\n            authenticated: true,\r\n            role: 'admin'\r\n        }]\r\n    }, {\r\n        name: 'Tema Pembahasan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/discussiontopics',\r\n            authenticated: true,\r\n        }, {\r\n            name: 'Tambah',\r\n            link: '/discussiontopics/create',\r\n            authenticated: true,\r\n        }]\r\n    }, {\r\n        name: 'Master Data',\r\n        children: [\r\n            {\r\n                name: 'Menu',\r\n                link: '/management',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            },\r\n            {\r\n                name: 'User',\r\n                link: '/management/users',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            }, {\r\n                name: 'Bidang',\r\n                link: '/management/departements',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            }]\r\n    }\r\n]\r\n\r\nclass SideBar extends BaseMenus {\r\n    constructor(props) {\r\n        super(props); \r\n        \r\n    } \r\n\r\n    render() {\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div  >\r\n                <aside className=\"menu\">\r\n                    {MENUS.map((menu, i) => {\r\n                        const childs = this.extractChildren(menu.children);\r\n                        if (childs == null || childs.length == 0) { return null; }\r\n                        const isMenuListShown = this.isMenuListShown(menu.name);\r\n                        const iconClassName  = isMenuListShown?\"fas fa-angle-up\":\"fas fa-angle-down\";\r\n\r\n                        return (\r\n                            <React.Fragment key={\"menu_\"+menu.name}>\r\n                                <p key={menu.name} menu-name={menu.name} onClick={this.toggleMenuList} className=\"menu-label\"> \r\n                                    <i style={{marginRight:'10px'}} className={iconClassName}    />                         \r\n                                    {menu.name}\r\n                                </p>\r\n                                {isMenuListShown ?\r\n                                    <ul className=\"menu-list\">\r\n                                        {childs.map((menuChild, j) => {\r\n                                            return (<li key={\"sidebar-menu-child-\"+i+\"-\"+j}>\r\n                                                <Link to={menuChild.link}>\r\n                                                    {menuChild.name}\r\n                                                </Link>\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>\r\n                                    :null}\r\n                           </React.Fragment>\r\n                        )\r\n                    })}\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n        menus: state.userState.menus,\r\n        requestId: state.userState.requestId,\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from './../BaseComponent';\r\nimport './SideBar.css'\r\nimport { MENUS } from './SideBar';\r\nimport BaseMenus from './BaseMenus';\r\n\r\n\r\nclass Header extends BaseMenus {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            showBurger: false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({ showBurger: !this.state.showBurger })\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    } \r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link style={{ backgroundColor: '#fff' }} className=\"navbar-item\" to=\"/\">\r\n                            <img src=\"kiis-stroke.png\" width=\"38\" height=\"38\" />\r\n                        </Link>\r\n                        <div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"topNav\" className={this.state.showBurger ? \"is-active navbar-menu\" : \" navbar-menu\"}>\r\n                        <div className=\"navbar-start\">\r\n                            {MENUS.map((menu, i) => {\r\n                                const childs = this.extractChildren(menu.children);\r\n                                if (childs == null || childs.length == 0) { return null; }\r\n                                const isMenuListShown = this.isMenuListShown(menu.name);\r\n                                const iconClassName  = isMenuListShown?\"fas fa-angle-up\":\"fas fa-angle-down\";\r\n\r\n                                return (\r\n                                    <React.Fragment key={\"NavMenu_\"+menu.name}>\r\n                                        <p style={{ marginLeft: '10px' }} onClick={this.toggleMenuList} menu-name={menu.name} className=\"menu-label\"> \r\n                                        <i style={{marginRight:'10px'}} className={iconClassName}    />  \r\n                                        {menu.name}  </p>\r\n                                        {isMenuListShown ?\r\n                                        <ul className=\"menu-list\">\r\n                                            {childs.map((linkProperty, j) => {\r\n                                                return <AppLink key={\"header-link-\" + j +\"-\"+i} loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                                            })}\r\n                                        </ul>: null}\r\n                                    </React.Fragment>)\r\n                            })}\r\n                        </div>\r\n                        <div className=\"navbar-end\">\r\n                            <div className=\"navbar-item\">\r\n                                <div className=\"buttons has-addons\">\r\n\r\n                                    {this.props.loginStatus ?\r\n                                        <><Link className=\"button is-info\" to=\"/profile\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                        </Link>\r\n                                            <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                                <span className=\"icon\">\r\n                                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                                </span>\r\n                                                <span>Logout</span>\r\n                                            </a>\r\n                                        </> :\r\n                                        <Link className=\"button is-info\" to=\"/login\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>Login</span>\r\n                                        </Link>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    if (null == linkProperty.link) {\r\n        return null;\r\n    }\r\n\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if (linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >{linkProperty.name}</Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n        menus: state.userState.menus,\r\n        requestId: state.userState.requestId,\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header))\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            this.setState({show:false});\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport const replaceString = (string, toReplace, replacement) => {\r\n\ttry {\r\n\t\tconst splitted = new String(string).split(toReplace);\r\n\t\treturn splitted.join(replacement);\r\n\t} catch (error) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n \r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst rawVal = parseInt(val);\r\n\tlet nominal =  Math.abs(val).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif(rawVal < 0){\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\nimport { replaceString } from '../../utils/StringUtil';\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                \r\n                return <th key={\"TH_\"+i}>{header.alias == null ?replaceString(header.text.toUpperCase(), \"_\", \" \") : header.alias}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{props.label ? props.label : \"Input\"}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option, i) => {\r\n        return <option key={\"select-option-\"+i} value={option.value} >{option.text}</option>\r\n    })\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Select\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className=\"button is-link\" type=\"submit\" >\r\n                        <span className=\"icon\"><i className=\"fas fa-save\"></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style}}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    <a className=\"card-header-icon\" aria-label=\"more options\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </a>\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as formComponent from '../forms/commons';\r\nimport NavButtons from './../buttons/NavButtons';\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport Card from '../container/Card';\r\nimport { getDiffDaysToNow } from './../../utils/DateUtil';\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n\r\n        this.getMeetingNotesByPage = (page) => {\r\n            this.page = page;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.getMeetingNotes = () => {\r\n            this.readInputForm();\r\n\r\n            const request = {\r\n                page: this.page,\r\n                limit: this.limit,\r\n                orderBy: this.orderBy,\r\n                orderType: this.orderType,\r\n                fieldsFilter: this.fieldsFilter\r\n            };\r\n\r\n            this.props.getMeetingNotes(request, this.props.app);\r\n        }\r\n\r\n        this.initialize = () => {\r\n            const hasFilter = this.props.meetingNoteData != null && this.props.meetingNoteData.filter != null;\r\n            const filter = hasFilter ? this.props.meetingNoteData.filter : null;\r\n            this.page = hasFilter ? filter.page : 1;\r\n            this.limit = hasFilter ? filter.limit : 5;\r\n            this.count = hasFilter ? filter.count : 0;\r\n            this.orderBy = hasFilter ? filter.orderBy : null;\r\n            this.orderType = hasFilter ? filter.orderType : null;\r\n        }\r\n\r\n        this.readInputForm = () => {\r\n            const form = document.getElementById('list-form');\r\n            if (form == null) return;\r\n            const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n            this.fieldsFilter = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.fieldsFilter[element.name] = element.value;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filter = (form) => {\r\n\r\n            this.page = 1;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            console.debug(e.target, \"by \", this.orderBy, this.orderType);\r\n            e.preventDefault();\r\n            \r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onSubmitClick = (e) => {\r\n            e.preventDefault();\r\n            this.filter(document.getElementById(\"list-form\"));\r\n        }\r\n\r\n        this.populateDefaultInputs = () => {\r\n            if (null == this.props.meetingNoteData || null == this.props.meetingNoteData.filter) {\r\n                return;\r\n            }\r\n            const fieldsFilter = this.props.meetingNoteData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n        this.initialize();\r\n    }\r\n    componentDidMount() {\r\n        if (null == this.props.meetingNoteData) {\r\n            this.getMeetingNotes();\r\n        }\r\n        document.title = \"Dashboard\";\r\n        this.populateDefaultInputs();\r\n    }\r\n\r\n    createNavButton() {\r\n\r\n        if (null == this.props.meetingNoteData) {\r\n\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.getMeetingNotesByPage} limit={this.limit}\r\n            totalData={this.props.meetingNoteData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n\r\n        const meetingNoteData = this.props.meetingNoteData;\r\n        const meetingNoteList = meetingNoteData && meetingNoteData.result_list ? meetingNoteData.result_list : [];\r\n        const navButtons = this.createNavButton();\r\n\r\n        return (\r\n            <div>\r\n                <CommonTitle>Dashboard</CommonTitle>\r\n                <Card title={this.props.loggedUser.display_name} >\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n\r\n                <Card title=\"Daftar Notulen Rapat\">\r\n\r\n                    {/* record list */}\r\n                    {navButtons}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        {formComponent.ButtonApplyResetFilter()}\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table style={{   }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', alias:\"Id\", withFilter: true },\r\n                                    { text: 'date', alias:\"Tanggal\", withFilter: true },\r\n                                    { text: 'content', alias:\"Pembahasan\", withFilter: true },\r\n                                    { text: 'decision', alias:\"Keputusan\", withFilter: true },\r\n                                    { text: 'deadline_date', alias:\"Deadline\", withFilter: true },\r\n                                    { text: 'departement', alias:\"Bidang\", withFilter: true },\r\n                                    { text: 'user', alias:\"Notulis\", withFilter: true },\r\n                                    { text: 'status', },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            <tbody>\r\n                            {meetingNoteList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                const deadlineDate = Date.parse(item.deadline_date);\r\n                                const style = {};\r\n                                try {\r\n                                    const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n                                    \r\n                                    if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                        style.backgroundColor = 'orange';\r\n                                    } else if (item.is_closed == false && diffDay < 0) {\r\n                                        style.backgroundColor = 'red';\r\n                                    }\r\n                                } catch (e) {\r\n                                    //\r\n                                }\r\n                                return (<tr key={\"record-meeting-note-\"+i} style={style}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                    <td>{item.deadline_date}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.user.name}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                        <Link to={\"/meetingnote/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        <Link to={\"/meetingnote/\" + item.id+\"/action\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        meetingNoteData: state.meetingNoteState.meetingNoteData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.isLoggedUserNull() ||\r\n        this.props.loggedUser.role != 'admin'\r\n        ) {\r\n        this.backToLogin();\r\n    }\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Master Data Menu</CommonTitle>\r\n                <Card title=\"Menu\">\r\n                        <div  className=\"columns\">\r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                    <p><i style={{fontSize:'50px'}} className=\"fas fa-puzzle-piece\"></i></p>\r\n                                    <Link to=\"/management/departements\">Departements</Link>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                <p><i style={{fontSize:'50px'}} className=\"fas fa-users\"></i></p>\r\n                                    <Link to=\"/management/users\">Users</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(ManagementMenu);","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    storeIssue = (issue) => {\r\n        const request = {\r\n            code: 'issue',\r\n            issue:issue\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    viewIssue = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"issue\"});\r\n    }\r\n\r\n    issueList = (filter) => {\r\n        return this.list({\r\n            code: 'issue',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n            console.error(\"Error loading resource: \", e);\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmation(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        <span>Edit</span>\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink)}\r\n                    {this.buttonDeleteRecord(id)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id, withText = true) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    {withText?\r\n                    <span>Delete</span>\r\n                    :null}\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n        \r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Departement Management</CommonTitle>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'name', withFilter: true },\r\n                                    { text: 'description', withFilter: true },\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/departements/\"+item.id,\r\n                                            item.id)}    \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/users/\"+response.user.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/departements/\"+response.departement.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n               <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n\r\n    storeAction = (action) => {\r\n\r\n        const request = {\r\n            action: action\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/action/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true\r\n        }\r\n        this.meetingNote = {};\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            this.meetingNote = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.meetingNote[element.name] = element.value;\r\n                    console.debug(\"this.meetingNote[element.name]\", this.meetingNote[element.name], \"element.value\", element.value);\r\n                }\r\n                console.debug(\"inputs: \", element.tagName, element.value);\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"inputs size:\", inputs.length, \"meetingNote>>\", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    this.handleSuccessGetRecord(response);\r\n                    this.props.history.push(\"/meetingnote/\"+response.meeting_note.id);\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.meeting_note[element.name];\r\n\r\n                if (this.isClosed() == false &&\r\n                    element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed()) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.recordSaved, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Meeting Note Form\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Notulensi Rapat Departemen {this.props.loggedUser.departement.name}</CommonTitle>\r\n                <Card title=\"Formulir Notulensi\">\r\n                    {this.getRecordId() != null && this.meetingNote != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <div className=\"tags has-addons are-medium\">\r\n                                    <span className=\"tag is-dark\">Status</span>\r\n                                    <span className=\"tag is-info\">{this.meetingNote.is_closed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n                                </div></div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.meetingNote.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed() ? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                    <Link to={\"/discussiontopics/create\"} className=\"button is-primary\" style={{marginTop:'10px', marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{\"Tambah Tema Pembahasan\"}</span>\r\n                    </Link>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from './../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from './../../../utils/DateUtil';\r\n\r\nconst FORM_ID = \"form-input-meeting-note-action\";\r\nclass MeetingNoteActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailNote: true,\r\n        }\r\n        this.meetingNote = {};\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailNote = () => {\r\n            this.setState({showDetailNote:false});\r\n        }\r\n        this.showDetailNote = () => {\r\n            this.setState({showDetailNote:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                note_id : this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"meetingNote action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.meetingNote.action = response.action;\r\n            this.meetingNote.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.meetingNoteService.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Action Form\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n               <CommonTitle>Konfirmasi Rapat Departemen {this.props.loggedUser.departement.name}</CommonTitle>\r\n                <Card title=\"Detail Notulen\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.meetingNote.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailNote? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Notulen</p>\r\n                            <button onClick={this.hideDetailNote} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Waktu dan Tempat\">\r\n                                <p>{this.meetingNote.place}, {dateStringDayMonthYearFromText(this.meetingNote.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.meetingNote.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.meetingNote.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.meetingNote.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.meetingNote.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.meetingNote.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailNote}>Tampilkan Detail Notulen</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Penyelesaian/Pelaksanaan Kuputusan\">\r\n                    {this.meetingNote.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Penyelesaian/Pelaksanaan Kuputusan</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.meetingNote.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.meetingNote.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteActionForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Profile</CommonTitle>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\nexport default class IssuesService\r\n{\r\n    static instance = IssuesService.instance || new IssuesService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'issue',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    delete = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/delete/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    followUpIssue = (followUp) => {\r\n        const request = {\r\n            followed_up_issue: followUp\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/followup\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport Columns from './../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nclass IssuesList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Aduan\", \"issue\");\r\n        this.state = {}\r\n        this.issueService = IssuesService.instance;\r\n\r\n        //overrid\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.issueService.delete,\r\n                id,\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.issueService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Aduan\";\r\n    }\r\n\r\n    //overrid baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.isLoggedUserNull()) {return null;}\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Aduan</CommonTitle>\r\n                <Card title=\"Daftar Aduan\">\r\n                {!isAdmin?null:this.linkToFormCreate(\"/issues/create\", \"Tambah Aduan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'date', withFilter: true },\r\n                                    { text: 'place', withFilter: true },\r\n                                    { text: 'content', withFilter: true },\r\n                                    { text: 'issuer', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'issue_input', withFilter: true },\r\n                                    { text: 'status'},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.content}</td>\r\n                                    <td>{item.issuer}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.issue_input}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {isAdmin?\r\n                                        <>\r\n                                        <Link to={\"/issues/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        {this.buttonDeleteRecord(item.id, false)}\r\n                                        </>\r\n                                        :null}\r\n                                        <Link to={\"/issues/\" + item.id+\"/followup\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesList));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\n\r\nconst issue_sources = [\r\n    'Yayasan', 'Orang Tua', 'Santri', 'Tamu'\r\n]\r\n\r\nclass IssuesForm extends BaseAdminPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const issue = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    issue[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                issue.id = this.getRecordId();\r\n            }\r\n            this.store(issue);\r\n            console.debug(\"ISSUE: \", issue);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/issues/\"+response.issue.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (issue) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeIssue, issue,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.issue.departement_id;\r\n                } else {\r\n                    element.value = response.issue[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewIssue, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadDepartements();\r\n        document.title = \"Form Aduan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Aduan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Tanggal\" name=\"date\" type=\"date\" required={true} />\r\n                        <InputField label=\"Tempat\" name=\"place\" required={true} />\r\n                        <InputField label=\"Permasalahan\" name=\"content\" type=\"textarea\" required={true} />\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Sumber Aduan\" name=\"issue_input\" required={true} />\r\n                        <SelectField label=\"Pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(IssuesForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nconst FORM_ID = \"form-input-follow-up-issue\";\r\nclass IssuesFollowingUpForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailIssue: true,\r\n        }\r\n        this.issue = {};\r\n        this.issueService = IssuesService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailIssue:false});\r\n        }\r\n        this.showDetailIssue = () => {\r\n            this.setState({showDetailIssue:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                issue_id : this.issue.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.issue.follow_up = response.followed_up_issue;\r\n            this.issue.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.issue = response.issue;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (followUp) => {\r\n            this.commonAjax(this.issueService.followUpIssue, followUp,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.issueService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.issue != null && this.issue.is_closed == true;\r\n        }\r\n    } \r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        if(this.isLoggedUserNull()){\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Tindak Lanjut Aduan</CommonTitle>\r\n                \r\n                <Card title=\"Detail Aduan\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.issue.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailIssue? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Aduan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Waktu dan Tempat\">\r\n                                <p>{this.issue.place}, {dateStringDayMonthYearFromText(this.issue.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.issue.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Permasalahan\">\r\n                                <p>{this.issue.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pengadu\">\r\n                                <p>{this.issue.email}, {this.issue.issuer}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Sumber Input\">\r\n                                <p>{this.issue.issue_input}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailIssue}>Tampilkan Detail Aduan</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.issue.follow_up == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.issue.follow_up.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.issue.follow_up.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesFollowingUpForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\n\r\nexport default class DiscussionTopicsService\r\n{\r\n    static instance = DiscussionTopicsService.instance || new DiscussionTopicsService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    store = (discussionTopic) => {\r\n\r\n        const request = {\r\n            discussion_topic: discussionTopic\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'discussion_topic',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    // delete = (id) => {\r\n    //     const endpoint = contextPath().concat(\"api/discussiontopics/delete/\"+id);\r\n    //     return commonAjaxPostCalls(endpoint, {});\r\n    // }\r\n    storeAction = (action) => {\r\n        const request = {\r\n            discussion_action: action\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/action\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\n\r\nconst FORM_ID = \"form-input-discussion-action\";\r\nclass DiscussionActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailDiscussionTopic: true,\r\n        }\r\n        this.discussionTopic = {};\r\n        this.discussionTopicSerivce = DiscussionTopicsService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailDiscussionTopic:false});\r\n        }\r\n        this.showDetailDiscussionTopic = () => {\r\n            this.setState({showDetailDiscussionTopic:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                topic_id : this.discussionTopic.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.discussionTopic.action = response.discussion_action;\r\n            this.discussionTopic.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.discussionTopicSerivce.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicSerivce.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Konfirmasi Tema Pembahasan</CommonTitle>\r\n                <Card title=\"Detail Tema Pembahasan\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.discussionTopic.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailDiscussionTopic? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tema Pembahasan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                        <LabelField label=\"Waktu\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.discussionTopic.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.discussionTopic.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.discussionTopic.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.discussionTopic.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailDiscussionTopic}>Tampilkan Detail Tema Pembahasan</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.discussionTopic.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.discussionTopic.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.discussionTopic.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionActionForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\n\r\nclass DiscussionTopicsForm extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const discussionTopic = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    discussionTopic[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                discussionTopic.id = this.getRecordId();\r\n            }\r\n            this.store(discussionTopic);\r\n            console.debug(\"discussionTopic: \", discussionTopic);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/discussiontopics/\"+response.discussion_topic.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (discussionTopic) => {\r\n            this.commonAjax(\r\n                this.discussionTopicService.store, discussionTopic,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.recordData = response;\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false });\r\n            \r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = this.discussionTopic[element.name];\r\n                if (this.isClosed() == false && element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed() == true) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = ()=> {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n        document.title = \"Form Tema Pembahasan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Tema Pembahasan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                {this.getRecordId() != null && this.discussionTopic != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <div className=\"tags has-addons are-medium\">\r\n                                    <span className=\"tag is-dark\">Status</span>\r\n                                    <span className=\"tag is-info\">{this.discussionTopic.is_closed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n                                </div></div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.discussionTopic.departement==null?null:this.discussionTopic.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                    <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed()? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DiscussionTopicsForm));","import React,{ Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { getDiffDaysToNow } from './../../../utils/DateUtil';\r\n\r\nclass DiscussionTopicsList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Topik Pembahasan\", \"discussiontopic\");\r\n        this.state = {}\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => {\r\n            // this.commonAjax(\r\n            //     this.discussionTopicService.delete,\r\n            //     id,\r\n            //     this.onSuccessDelete,\r\n            //     this.onErrorDelete\r\n            // )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.discussionTopicService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Tema Pembahasan\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Daftar Tema Pembahasan</h2>\r\n                <Card title=\"Daftar Tema Pembahasan\">\r\n                {this.linkToFormCreate(\"/discussiontopics/create\", \"Tambah Tema Pembahasan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', alias:\"Id\", withFilter: true },\r\n                                    { text: 'date', alias:\"Tanggal\", withFilter: true },\r\n                                    { text: 'content', alias:\"Pembahasan\", withFilter: true },\r\n                                    { text: 'decision', alias:\"Keputusan\", withFilter: true },\r\n                                    { text: 'deadline_date', alias:\"Deadline\", withFilter: true },\r\n                                    { text: 'departement', alias:\"Bidang\", withFilter: true },\r\n                                    { text: 'user', alias:\"User\", withFilter: true },\r\n                                    { text: 'status'},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                const deadlineDate = Date.parse(item.deadline_date);\r\n                                const style = {};\r\n                                try {\r\n                                    const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n                                    \r\n                                    if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                        style.backgroundColor = 'orange';\r\n                                    } else if (item.is_closed == false && diffDay < 0) {\r\n                                        style.backgroundColor = 'red';\r\n                                    }\r\n                                } catch (e) {\r\n                                    //\r\n                                }\r\n                                return (<tr key={\"record_\"+i} style={style}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                    <td>{item.deadline_date}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.user.name}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                        <Link to={\"/discussiontopics/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        \r\n                                        <Link to={\"/discussiontopics/\" + item.id+\"/action\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionTopicsList));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport MeetingNoteActionForm from '../pages/meetingnotes/MeetingNoteActionForm';\r\nimport Profile from '../pages/Profile';\r\nimport IssuesList from '../pages/issues/IssuesList';\r\nimport IssuesForm from '../pages/issues/IssuesForm';\r\nimport IssuesFollowingUpForm from '../pages/issues/IssuesFollowingUpForm';\r\nimport DiscussionActionForm from '../pages/discussiontopics/DiscussionActionForm';\r\nimport DiscussionTopicsForm from '../pages/discussiontopics/DiscussionTopicsForm';\r\nimport DiscussionTopicsList from '../pages/discussiontopics/DiscussionTopicsList';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id/action\" render={\r\n            (props) =>\r\n              <MeetingNoteActionForm app={this.props.app} />\r\n          } />\r\n          {/* ======== issues ========= */}\r\n          <Route exact path=\"/issues\" render={\r\n            (props) =>\r\n              <IssuesList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/create\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id/followup\" render={\r\n            (props) =>\r\n              <IssuesFollowingUpForm app={this.props.app} />\r\n          } />\r\n          {/* ======== discussiontopics ========= */}\r\n          <Route exact path=\"/discussiontopics\" render={\r\n            (props) =>\r\n              <DiscussionTopicsList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/create\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id/action\" render={\r\n            (props) =>\r\n              <DiscussionActionForm app={this.props.app} />\r\n          } />\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* ============== users management ============= */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* ================ departements management ============= */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      // <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000, color: '#ccc'}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    )\r\n  }\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <Backdrop>\r\n                    <form onSubmit=\"return false;\">\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly?\"button\":\"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </Backdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nimport SideBar from './components/layout/SideBar';\nimport './components/layout/SideBar.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert\n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section style={{ minHeight: '70vh' }}>\n          <div >\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\" style={{ minHeight: '70vh', marginBottom: '1px' }}>\n            <div style={{ paddingTop: '20px', paddingLeft: '20px' }}\n              className=\"menu-container column is-one-fifth has-background-water-ter\">\n              \n                <SideBar app={this} />\n               \n            </div>\n            <div className=\"column is-four-fifths\">\n\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    meetingNoteData: null,\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) { \r\n        case types.GET_MEETING_NOTES:\r\n            let result = {\r\n                ...state,\r\n                meetingNoteData: action.payload\r\n            };\r\n            console.debug(\"action.meetingNoteData: \", result.meetingNoteData);\r\n            return result;\r\n        \r\n        default:\r\n            return { ...state };\r\n             \r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as meetingNotesReducer from \"./meetingNotesReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        managementState: managementReducer.reducer,\r\n        meetingNoteState: meetingNotesReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    managementState: managementReducer.initState,\r\n    meetingNoteState: meetingNotesReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    } \r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const getMeetingNotesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MEETING_NOTES) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        // .then(response => response.json())\r\n        .then(result => {\r\n            const response = result.data;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    ...response\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const storeMeetingNote = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n         headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json()]); })\r\n        .then(response => {\r\n            alert(\"Success storeMeetingNote\");\r\n        })\r\n        .catch(err => { alert(\"Error storeMeetingNote\");console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as meetingNoteMiddleware from '../middlewares/MeetingNoteMiddleware'\r\nimport * as common from '../middlewares/Common';\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            meetingNoteMiddleware.getMeetingNotesMiddleware, \r\n\r\n            /*enntity management*/\r\n            // managementMiddleware.getEntityListMiddleware,\r\n            // managementMiddleware.getEntityByIdMiddleware,\r\n            // managementMiddleware.updateEntityMiddleware,\r\n            // managementMiddleware.removeManagedEntityMiddleware, \r\n            // managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            // managementMiddleware.getEntityPropertyMiddleware,\r\n            // managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            // realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            // realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}