{"version":3,"sources":["logo.svg","constant/Url.js","redux/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","components/forms/commons.js","components/buttons/NavButtons.js","components/container/Card.js","utils/DateUtil.js","components/pages/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","middlewares/Common.js","services/Promises.js","services/MasterDataService.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/pages/meetingnotes/MeetingNoteForm.js","components/pages/meetingnotes/MeetingNoteActionForm.js","services/UserService.js","components/pages/Profile.js","components/layout/Content.js","components/widget/Loader.js","components/messages/Alert.js","App.js","redux/userReducer.js","redux/managementReducer.js","redux/meetingNotesReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/CatalogMiddleware.js","middlewares/MeetingNoteMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","apiNotes","accountAction","app","startLoading","type","payload","meta","email","password","user","meetingNotesAction","request","filter","fieldsFilter","console","debug","limit","page","orderBy","orderType","Footer","className","href","Component","BaseComponent","props","authenticated","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","showConfirmation","body","Promise","resolve","reject","showAlert","e","showInfo","showError","showAlertError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","warn","commonAjax","commonAjaxWithProgress","this","menus","name","link","role","Header","state","showBurger","toggleNavBurger","setState","performLogout","accepted","style","backgroundColor","to","src","width","height","onClick","id","map","linkProperty","i","key","display_name","AppLink","withRouter","connect","userState","requestId","applicationProfile","dispatch","actions","Message","show","hide","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","Date","handleSubmit","event","preventDefault","form","target","FormData","elements","performLogin","showLoginInfo","loginFailed","current","title","ref","marginTop","onSubmit","nam","placeholder","required","TableHeadWithFilter","headers","onButtonOrderClick","alias","text","toUpperCase","replaceAll","withFilter","fontSize","sort","data","InputFormFilter","ButtonApplyResetFilter","InputField","label","note","SelectField","options","option","LabelField","children","SubmitResetButton","submitValue","submitText","withReset","NavButtons","index","buttonValues","generateButtonValues","totalData","activeIndex","buttonsData","length","element","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","margin","aria-hidden","withButtonFooter","footerContent","MONTHS","dateStringDayMonthYearFromText","raw","split","day","month","year","Dashboard","count","getMeetingNotesByPage","getMeetingNotes","readInputForm","initialize","hasFilter","meetingNoteData","inputs","getElementsByClassName","getAttribute","onSubmitClick","populateDefaultInputs","hasOwnProperty","error","meetingNoteList","result_list","navButtons","createNavButton","textAlign","departement","formComponent","overflow","item","indexBegin","deadlineDate","parse","deadline_date","diffDay","getTime","is_closed","date","content","substring","decision","meetingNoteState","BaseAdminPage","ManagementMenu","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","indexOf","axios","require","commonAjaxPostCalls","endpoint","post","code","MasterManagementService","setUsersData","usersData","storeUser","userModel","viewUser","userList","list","storeDepartement","viewDepartement","deleteRecord","departementList","departementsData","instance","BaseManagementPage","loadRecords","masterDataServce","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","recordList","DeparementManagement","tableLayout","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","match","departementListLoaded","loadRecord","recordSaved","recordFailedToSave","loadDepartements","handleSuccessGetRecord","departement_id","handleErrorGetRecord","formTitle","dep","DepartementManagementForm","MeetingNoteSerivce","meetingNote","meeting_note","view","storeAction","action","FORM_ID","MeetingNoteForm","isSubmitting","meetingNoteService","fillDataAndStore","tagName","storeMeetingNote","handleSuccessSubmit","reset","handleErrorSubmit","isClosed","setAttribute","enableInputs","removeAttribute","MeetingNoteActionForm","showDetailNote","hideDetailNote","note_id","place","person_in_charge","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","Home","Loader","opacity","color","position","zIndex","Backdrop","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","App","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","refresh","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","refreshLogin","additionalMenus","Array","menu","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","initState","loginKey","loginAttempt","reducer","result","api_token","entitiesData","entityConfig","managedEntity","entityProperty","managementMenus","entities","generalList","rootReducer","combineReducers","userReducer","managementState","managementReducer","meetingNotesReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","Object","assign","err","param","requestAppIdMiddleware","message","get","refreshLoginStatusMiddleware","performLogoutMiddleware","logoutSuccess","alert","removeEntityMiddleware","updateCartMiddleware","getMeetingNotesMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","meetingNoteMiddleware","Root","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fff485f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n \r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n} \r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n} \r\n  \r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const meetingNotesAction = {\r\n    store: (meetingNote, app) => {\r\n        app.startLoading();\r\n        let requested = {\r\n            type: types.STORE_MEETING_NOTES,\r\n            payload: {\r\n                meeting_note:meetingNote    \r\n            },\r\n            meta: {\r\n                type: types.STORE_MEETING_NOTES,\r\n                url: apiNotes.concat(\"store\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    list : (request, app) => {\r\n        app.startLoading();\r\n        \r\n        const filter =  request.fieldsFilter;\r\n        console.debug(\"request.fieldsFilter: \", filter);\r\n        let requested = {\r\n            type: types.GET_MEETING_NOTES,\r\n            payload: {\r\n                filter: {\r\n                    limit: request.limit,\r\n                    page: request.page,\r\n                    fieldsFilter: filter,\r\n                    orderBy: request.orderBy,\r\n                    orderType: request.orderType,\r\n                },\r\n            },\r\n            meta: {\r\n                type: types.GET_MEETING_NOTES,\r\n                url: apiNotes.concat(\"list\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    }\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const GET_MEETING_NOTES = \"GET_MEETING_NOTES\";\r\nexport const STORE_MEETING_NOTES = \"GET_MEETING_NOTES\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">Kafila International Islamic School</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import { React , Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n            }\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from './../BaseComponent';\r\nconst menus = [\r\n    {\r\n        name:'Home',\r\n        link:'/home'\r\n    }, {\r\n        name:'Dashboard',\r\n        link:'/dashboard',\r\n        authenticated: true,\r\n    }, {\r\n        name:'Tambah Notulensi',\r\n        link:'/meetingnote/create',\r\n        authenticated: true,\r\n    }, {\r\n        name:'Management',\r\n        link:'/management',\r\n        authenticated: true,\r\n        role:'admin'\r\n    }\r\n]\r\n\r\nclass Header extends BaseComponent{\r\n    constructor(props){\r\n        super(props, false);\r\n        this.state = {\r\n            showBurger:false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({showBurger:!this.state.showBurger})\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function(accepted){\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render(){\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"navbar-brand\">\r\n\t\t\t\t\t<Link style={{backgroundColor:'#fff'}} className=\"navbar-item\" to=\"/\">\r\n\t\t\t\t\t\t<img src=\"kiis-stroke.png\" width=\"38\" height=\"38\"/>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"topNav\" className={this.state.showBurger? \"is-active navbar-menu\":\" navbar-menu\"}>\r\n\t\t\t\t\t<div className=\"navbar-start\">\r\n                        {\r\n                            menus.map((linkProperty, i)=>{\r\n                                return <AppLink key={\"header-link-\"+i}loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                            })\r\n                        }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"navbar-end\">\r\n\t\t\t\t\t\t<div className=\"navbar-item\">\r\n\t\t\t\t\t\t\t<div className=\"buttons has-addons\">\r\n\t\t\t\t\t\t\t\t \r\n                                    {this.props.loginStatus? \r\n                                    <><Link className=\"button is-info\" to=\"/profile\">\r\n                                        <span className=\"icon\">\r\n                                            <i className=\"fas fa-user\"></i>\r\n                                        </span>\r\n                                        <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                    </Link>\r\n                                    <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                        <span className=\"icon\">\r\n                                            <i className=\"fas fa-sign-out-alt\"></i>\r\n                                        </span>\r\n                                        <span>Logout</span>\r\n                                    </a>\r\n                                    </>:\r\n                                    <Link className=\"button is-info\" to=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span>Login</span>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n                                    }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if(linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role ) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >{linkProperty.name}</Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n      //user\r\n      loginStatus: state.userState.loginStatus,\r\n      loggedUser: state.userState.loggedUser,\r\n      menus: state.userState.menus,\r\n      requestId: state.userState.requestId,\r\n      applicationProfile: state.userState.applicationProfile,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n  })\r\n  \r\n  export default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Header))\r\n  ","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            this.setState({show:false});\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                return <th key={\"TH_\"+i}>{header.alias == null ? header.text.toUpperCase().replaceAll(\"_\", \" \") : header.alias}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{props.label ? props.label : \"Input\"}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option) => {\r\n        return <option value={option.value} >{option.text}</option>\r\n    })\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Select\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className=\"button is-link\" type=\"submit\" >\r\n                        <span className=\"icon\"><i className=\"fas fa-save\"></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style}}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    <a className=\"card-header-icon\" aria-label=\"more options\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </a>\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as formComponent from '../forms/commons';\r\nimport NavButtons from './../buttons/NavButtons';\r\nimport BaseComponent from './../BaseComponent';\r\nimport Card from '../container/Card';\r\nimport { getDiffDaysToNow } from './../../utils/DateUtil';\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n\r\n        this.getMeetingNotesByPage = (page) => {\r\n            this.page = page;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.getMeetingNotes = () => {\r\n            this.readInputForm();\r\n\r\n            const request = {\r\n                page: this.page,\r\n                limit: this.limit,\r\n                orderBy: this.orderBy,\r\n                orderType: this.orderType,\r\n                fieldsFilter: this.fieldsFilter\r\n            };\r\n\r\n            this.props.getMeetingNotes(request, this.props.app);\r\n        }\r\n\r\n        this.initialize = () => {\r\n            const hasFilter = this.props.meetingNoteData != null && this.props.meetingNoteData.filter != null;\r\n            const filter = hasFilter ? this.props.meetingNoteData.filter : null;\r\n            this.page = hasFilter ? filter.page : 1;\r\n            this.limit = hasFilter ? filter.limit : 5;\r\n            this.count = hasFilter ? filter.count : 0;\r\n            this.orderBy = hasFilter ? filter.orderBy : null;\r\n            this.orderType = hasFilter ? filter.orderType : null;\r\n        }\r\n\r\n        this.readInputForm = () => {\r\n            const form = document.getElementById('list-form');\r\n            if (form == null) return;\r\n            const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n            this.fieldsFilter = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.fieldsFilter[element.name] = element.value;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filter = (form) => {\r\n\r\n            this.page = 1;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            console.debug(e.target, \"by \", this.orderBy, this.orderType);\r\n            e.preventDefault();\r\n            \r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onSubmitClick = (e) => {\r\n            e.preventDefault();\r\n            this.filter(document.getElementById(\"list-form\"));\r\n        }\r\n\r\n        this.populateDefaultInputs = () => {\r\n            if (null == this.props.meetingNoteData || null == this.props.meetingNoteData.filter) {\r\n                return;\r\n            }\r\n            const fieldsFilter = this.props.meetingNoteData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n        this.initialize();\r\n    }\r\n    componentDidMount() {\r\n        if (null == this.props.meetingNoteData) {\r\n            this.getMeetingNotes();\r\n        }\r\n        document.title = \"Dashboard\";\r\n        this.populateDefaultInputs();\r\n    }\r\n\r\n    createNavButton() {\r\n\r\n        if (null == this.props.meetingNoteData) {\r\n\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.getMeetingNotesByPage} limit={this.limit}\r\n            totalData={this.props.meetingNoteData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n\r\n        const meetingNoteData = this.props.meetingNoteData;\r\n        const meetingNoteList = meetingNoteData && meetingNoteData.result_list ? meetingNoteData.result_list : [];\r\n        const navButtons = this.createNavButton();\r\n\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Dashboard</h2>\r\n                <Card title={this.props.loggedUser.display_name} >\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n\r\n                <Card title=\"Daftar Notulen Rapat\">\r\n\r\n                    {/* record list */}\r\n                    {navButtons}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        {formComponent.ButtonApplyResetFilter()}\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table style={{   }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', alias:\"Id\", withFilter: true },\r\n                                    { text: 'date', alias:\"Tanggal\", withFilter: true },\r\n                                    { text: 'content', alias:\"Pembahasan\", withFilter: true },\r\n                                    { text: 'decision', alias:\"Keputusan\", withFilter: true },\r\n                                    { text: 'deadline_date', alias:\"Deadline\", withFilter: true },\r\n                                    { text: 'departement', alias:\"Bidang\", withFilter: true },\r\n                                    { text: 'user', alias:\"Notulis\", withFilter: true },\r\n                                    { text: 'status', },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            <tbody>\r\n                            {meetingNoteList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                const deadlineDate = Date.parse(item.deadline_date);\r\n                                const style = {};\r\n                                try {\r\n                                    const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n                                    \r\n                                    if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                        style.backgroundColor = 'orange';\r\n                                    } else if (item.is_closed == false && diffDay < 0) {\r\n                                        style.backgroundColor = 'red';\r\n                                    }\r\n                                } catch (e) {\r\n                                    //\r\n                                }\r\n                                return (<tr key={\"record-meeting-note-\"+i} style={style}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                    <td>{item.deadline_date}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.user.name}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                        <Link to={\"/meetingnote/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        <Link to={\"/meetingnote/\" + item.id+\"/action\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        meetingNoteData: state.meetingNoteState.meetingNoteData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false ||\r\n            this.props.loggedUser == null ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Master Data Menu</h2>\r\n                <Card title=\"Menu\">\r\n                        <div  className=\"columns\">\r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                    <p><i style={{fontSize:'50px'}} className=\"fas fa-puzzle-piece\"></i></p>\r\n                                    <Link to=\"/management/departements\">Departements</Link>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                <p><i style={{fontSize:'50px'}} className=\"fas fa-users\"></i></p>\r\n                                    <Link to=\"/management/users\">Users</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(ManagementMenu);","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmation(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        <span>Edit</span>\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink)}\r\n                    {this.buttonDeleteRecord(id)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    <span>Delete</span>\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n        \r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departement Management</h2>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table style={{ tableLayout: 'fixed' }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'name', withFilter: true },\r\n                                    { text: 'description', withFilter: true },\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/departements/\"+item.id,\r\n                                            item.id)}    \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n\r\n        const request = {\r\n            code: 'meeting_note'\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    storeAction = (action) => {\r\n\r\n        const request = {\r\n            action: action\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/action/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true\r\n        }\r\n        this.meetingNote = {};\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });            \r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            this.meetingNote = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.meetingNote[element.name] = element.value;\r\n                    console.debug(\"this.meetingNote[element.name]\",this.meetingNote[element.name], \"element.value\", element.value);\r\n                }\r\n                console.debug(\"inputs: \", element.tagName, element.value);\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"inputs size:\", inputs.length, \"meetingNote>>\", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.meeting_note[element.name];\r\n\r\n                if (this.isClosed() == false && \r\n                    element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed()) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = ()=> {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Meeting Note Form\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Notulensi Rapat Departemen {this.props.loggedUser.departement.name}</h2>\r\n                <Card title=\"Formulir Notulensi\">\r\n                    {this.getRecordId() != null && this.meetingNote != null? \r\n                        <div className=\"tags has-addons are-medium\">\r\n                            <span className=\"tag is-dark\">Status</span>\r\n                            <span className=\"tag is-info\">{this.meetingNote.is_closed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n                        </div>\r\n                    \r\n                    :\r\n                    null}\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed()? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from './../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from './../../../utils/DateUtil';\r\n\r\nconst FORM_ID = \"form-input-meeting-note-action\";\r\nclass MeetingNoteActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailNote: true,\r\n        }\r\n        this.meetingNote = {};\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailNote = () => {\r\n            this.setState({showDetailNote:false});\r\n        }\r\n        this.showDetailNote = () => {\r\n            this.setState({showDetailNote:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                note_id : this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"meetingNote action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.meetingNote.action = response.action;\r\n            this.meetingNote.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.meetingNoteService.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Action Form\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Konfirmasi Rapat Departemen {this.props.loggedUser.departement.name}</h2>\r\n                <Card title=\"Detail Notulen\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.meetingNote.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailNote? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Notulen</p>\r\n                            <button onClick={this.hideDetailNote} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Waktu dan Tempat\">\r\n                                <p>{this.meetingNote.place}, {dateStringDayMonthYearFromText(this.meetingNote.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.meetingNote.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.meetingNote.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.meetingNote.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.meetingNote.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailNote}>Tampilkan Detail Notulen</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Konfirmasi\">\r\n                    {this.meetingNote.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Konfirmasi</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.meetingNote.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.meetingNote.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteActionForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Profile</h2>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport MeetingNoteActionForm from '../pages/meetingnotes/MeetingNoteActionForm';\r\nimport Profile from '../pages/Profile';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id/action\" render={\r\n            (props) =>\r\n              <MeetingNoteActionForm app={this.props.app} />\r\n          } />\r\n\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* users */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* departements */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <Backdrop>\r\n                    <form onSubmit=\"return false;\">\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly?\"button\":\"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </Backdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nconst blankFunc = function (e) { };\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert \n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section className=\"container\" style={{minHeight:'70vh'}}>\n          <div style={{height:'50px'}}>\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    meetingNoteData: null,\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) { \r\n        case types.GET_MEETING_NOTES:\r\n            let result = {\r\n                ...state,\r\n                meetingNoteData: action.payload\r\n            };\r\n            console.debug(\"action.meetingNoteData: \", result.meetingNoteData);\r\n            return result;\r\n        \r\n        default:\r\n            return { ...state };\r\n             \r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as meetingNotesReducer from \"./meetingNotesReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        managementState: managementReducer.reducer,\r\n        meetingNoteState: meetingNotesReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    managementState: managementReducer.initState,\r\n    meetingNoteState: meetingNotesReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    } \r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst axios = require('axios');\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const getMeetingNotesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MEETING_NOTES) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        // .then(response => response.json())\r\n        .then(result => {\r\n            const response = result.data;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    ...response\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const storeMeetingNote = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n         headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json()]); })\r\n        .then(response => {\r\n            alert(\"Success storeMeetingNote\");\r\n        })\r\n        .catch(err => { alert(\"Error storeMeetingNote\");console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as meetingNoteMiddleware from '../middlewares/MeetingNoteMiddleware'\r\nimport * as common from '../middlewares/Common';\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            meetingNoteMiddleware.getMeetingNotesMiddleware, \r\n\r\n            /*enntity management*/\r\n            // managementMiddleware.getEntityListMiddleware,\r\n            // managementMiddleware.getEntityByIdMiddleware,\r\n            // managementMiddleware.updateEntityMiddleware,\r\n            // managementMiddleware.removeManagedEntityMiddleware, \r\n            // managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            // managementMiddleware.getEntityPropertyMiddleware,\r\n            // managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            // realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            // realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}