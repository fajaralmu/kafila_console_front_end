{"version":3,"sources":["logo.svg","constant/Url.js","redux/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","components/forms/commons.js","components/buttons/NavButtons.js","components/container/Card.js","utils/DateUtil.js","components/pages/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","middlewares/Common.js","services/Promises.js","services/MasterDataService.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/pages/meetingnotes/MeetingNoteForm.js","components/pages/meetingnotes/MeetingNoteActionForm.js","services/UserService.js","components/pages/Profile.js","components/layout/Content.js","components/widget/Loader.js","components/messages/Alert.js","App.js","redux/userReducer.js","redux/managementReducer.js","redux/meetingNotesReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/CatalogMiddleware.js","middlewares/MeetingNoteMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","apiNotes","accountAction","app","startLoading","type","payload","meta","email","password","user","meetingNotesAction","request","filter","fieldsFilter","console","debug","limit","page","orderBy","orderType","Footer","react_default","a","createElement","className","href","Component","BaseComponent","props","_this","authenticated","arguments","length","undefined","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","showConfirmation","body","Promise","resolve","reject","showAlert","e","showInfo","showError","showAlertError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","assertThisInitialized","then","response","catch","finally","warn","commonAjax","commonAjaxWithProgress","menus","name","link","role","Header","state","showBurger","toggleNavBurger","setState","performLogout","accepted","_this2","Link","style","backgroundColor","to","src","width","height","onClick","id","map","linkProperty","i","Header_AppLink","key","Fragment","display_name","AppLink","withRouter","connect","userState","requestId","applicationProfile","dispatch","actions","Message","show","hide","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","Date","handleSubmit","event","preventDefault","form","target","FormData","elements","performLogin","showLoginInfo","loginFailed","current","title","components_messages_Message","ref","class","marginTop","onSubmit","for","nam","placeholder","required","TableHeadWithFilter","headers","onButtonOrderClick","alias","text","toUpperCase","replaceAll","withFilter","commons_InputFormFilter","fontSize","sort","data","InputFormFilter","ButtonApplyResetFilter","InputField","label","note","SelectField","options","option","LabelField","children","SubmitResetButton","submitValue","submitText","withReset","NavButtons","index","buttonValues","generateButtonValues","totalData","activeIndex","buttonsData","element","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","objectSpread","margin","aria-hidden","withButtonFooter","footerContent","MONTHS","dateStringDayMonthYearFromText","raw","split","day","month","year","Dashboard","count","getMeetingNotesByPage","getMeetingNotes","readInputForm","initialize","hasFilter","meetingNoteData","inputs","getElementsByClassName","getAttribute","onSubmitClick","populateDefaultInputs","hasOwnProperty","error","buttons_NavButtons","meetingNoteList","result_list","navButtons","createNavButton","textAlign","Card_Card","departement","formComponent","overflow","Dashboard_TableHeadWithFilter","item","indexBegin","deadlineDate","parse","deadline_date","diffDay","getTime","is_closed","date","content","substring","decision","meetingNoteState","BaseAdminPage","ManagementMenu","commonAuthorizedHeader","Content-Type","Authorization","getLoginKey","getCookie","setApiToken","token","log","setCookie","cname","cvalue","exdays","d","setTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","indexOf","commonAjaxPostCalls","endpoint","fetch","JSON","stringify","json","code","MasterManagementService","setUsersData","usersData","storeUser","userModel","viewUser","userList","list","storeDepartement","viewDepartement","deleteRecord","departementList","departementsData","instance","BaseManagementPage","loadRecords","masterDataServce","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","set","prototype","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","recordList","Columns_Columns","UsersManagement_TableHeadWithFilter","DeparementManagement","tableLayout","DepartementManagement_TableHeadWithFilter","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","match","departementListLoaded","loadRecord","recordSaved","recordFailedToSave","loadDepartements","handleSuccessGetRecord","departement_id","handleErrorGetRecord","formTitle","commons_InputField","commons_SelectField","dep","commons_SubmitResetButton","DepartementManagementForm","MeetingNoteSerivce","meetingNote","meeting_note","view","storeAction","action","FORM_ID","MeetingNoteForm","isSubmitting","meetingNoteService","fillDataAndStore","tagName","storeMeetingNote","handleSuccessSubmit","reset","handleErrorSubmit","isClosed","setAttribute","enableInputs","removeAttribute","MeetingNoteForm_InputField","MeetingNoteActionForm","showDetailNote","hideDetailNote","note_id","commons_LabelField","place","person_in_charge","MeetingNoteActionForm_InputField","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","Content","Switch","Route","exact","path","render","Content_Home","pages_Dashboard","meetingnotes_MeetingNoteForm","meetingnotes_MeetingNoteActionForm","management_ManagementMenu","UsersManagement","UsersManagementForm","DepartementManagement","management_DepartementManagementForm","pages_Login","pages_Profile","Home","Loader","opacity","color","position","zIndex","Backdrop","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","App","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","refresh","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","refreshLogin","additionalMenus","Array","menu","isNotAuthenticated","isShoppingDisabled","enableShopping","messages_Alert","layout_Header","minHeight","Loader_Loader","layout_Content","layout_Footer","initState","loginKey","loginAttempt","reducer","result","api_token","entitiesData","entityConfig","managedEntity","entityProperty","managementMenus","entities","generalList","rootReducer","combineReducers","userReducer","managementState","managementReducer","meetingNotesReducer","initialState","performLoginMiddleware","next","common","all","_ref","_ref2","slicedToArray","responseJson","newAction","assign","err","param","requestAppIdMiddleware","_ref3","_ref4","message","refreshLoginStatusMiddleware","performLogoutMiddleware","_ref5","_ref6","logoutSuccess","alert","removeEntityMiddleware","updateCartMiddleware","getMeetingNotesMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","meetingNoteMiddleware","Root","es","HashRouter","src_App","Boolean","window","location","hostname","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a189991.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n \r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n} \r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n} \r\n  \r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const meetingNotesAction = {\r\n    store: (meetingNote, app) => {\r\n        app.startLoading();\r\n        let requested = {\r\n            type: types.STORE_MEETING_NOTES,\r\n            payload: {\r\n                meeting_note:meetingNote    \r\n            },\r\n            meta: {\r\n                type: types.STORE_MEETING_NOTES,\r\n                url: apiNotes.concat(\"store\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    list : (request, app) => {\r\n        app.startLoading();\r\n        \r\n        const filter =  request.fieldsFilter;\r\n        console.debug(\"request.fieldsFilter: \", filter);\r\n        let requested = {\r\n            type: types.GET_MEETING_NOTES,\r\n            payload: {\r\n                filter: {\r\n                    limit: request.limit,\r\n                    page: request.page,\r\n                    fieldsFilter: filter,\r\n                    orderBy: request.orderBy,\r\n                    orderType: request.orderType,\r\n                },\r\n            },\r\n            meta: {\r\n                type: types.GET_MEETING_NOTES,\r\n                url: apiNotes.concat(\"list\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    }\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const GET_MEETING_NOTES = \"GET_MEETING_NOTES\";\r\nexport const STORE_MEETING_NOTES = \"GET_MEETING_NOTES\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">Kafila International Islamic School</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import { React , Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n            }\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from './../BaseComponent';\r\nconst menus = [\r\n    {\r\n        name:'Home',\r\n        link:'/home'\r\n    }, {\r\n        name:'Dashboard',\r\n        link:'/dashboard',\r\n        authenticated: true,\r\n    }, {\r\n        name:'Tambah Notulensi',\r\n        link:'/meetingnote/create',\r\n        authenticated: true,\r\n    }, {\r\n        name:'Management',\r\n        link:'/management',\r\n        authenticated: true,\r\n        role:'admin'\r\n    }\r\n]\r\n\r\nclass Header extends BaseComponent{\r\n    constructor(props){\r\n        super(props, false);\r\n        this.state = {\r\n            showBurger:false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({showBurger:!this.state.showBurger})\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function(accepted){\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render(){\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"navbar-brand\">\r\n\t\t\t\t\t<Link style={{backgroundColor:'#fff'}} className=\"navbar-item\" to=\"/\">\r\n\t\t\t\t\t\t<img src=\"kiis-stroke.png\" width=\"38\" height=\"38\"/>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"topNav\" className={this.state.showBurger? \"is-active navbar-menu\":\" navbar-menu\"}>\r\n\t\t\t\t\t<div className=\"navbar-start\">\r\n                        {\r\n                            menus.map((linkProperty, i)=>{\r\n                                return <AppLink key={\"header-link-\"+i}loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                            })\r\n                        }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"navbar-end\">\r\n\t\t\t\t\t\t<div className=\"navbar-item\">\r\n\t\t\t\t\t\t\t<div className=\"buttons has-addons\">\r\n\t\t\t\t\t\t\t\t \r\n                                    {this.props.loginStatus? \r\n                                    <><Link className=\"button is-info\" to=\"/profile\">\r\n                                        <span className=\"icon\">\r\n                                            <i className=\"fas fa-user\"></i>\r\n                                        </span>\r\n                                        <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                    </Link>\r\n                                    <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                        <span className=\"icon\">\r\n                                            <i className=\"fas fa-sign-out-alt\"></i>\r\n                                        </span>\r\n                                        <span>Logout</span>\r\n                                    </a>\r\n                                    </>:\r\n                                    <Link className=\"button is-info\" to=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span>Login</span>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n                                    }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if(linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role ) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >{linkProperty.name}</Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n      //user\r\n      loginStatus: state.userState.loginStatus,\r\n      loggedUser: state.userState.loggedUser,\r\n      menus: state.userState.menus,\r\n      requestId: state.userState.requestId,\r\n      applicationProfile: state.userState.applicationProfile,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n  })\r\n  \r\n  export default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Header))\r\n  ","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            this.setState({show:false});\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div class=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label for=\"\" className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label for=\"\" className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                return <th key={\"TH_\"+i}>{header.alias == null ? header.text.toUpperCase().replaceAll(\"_\", \" \") : header.alias}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{props.label ? props.label : \"Input\"}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option) => {\r\n        return <option value={option.value} >{option.text}</option>\r\n    })\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Select\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className=\"button is-link\" type=\"submit\" >\r\n                        <span className=\"icon\"><i className=\"fas fa-save\"></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map(data=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style}}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    <a className=\"card-header-icon\" aria-label=\"more options\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </a>\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as formComponent from '../forms/commons';\r\nimport NavButtons from './../buttons/NavButtons';\r\nimport BaseComponent from './../BaseComponent';\r\nimport Card from '../container/Card';\r\nimport { getDiffDaysToNow } from './../../utils/DateUtil';\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n\r\n        this.getMeetingNotesByPage = (page) => {\r\n            this.page = page;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.getMeetingNotes = () => {\r\n            this.readInputForm();\r\n\r\n            const request = {\r\n                page: this.page,\r\n                limit: this.limit,\r\n                orderBy: this.orderBy,\r\n                orderType: this.orderType,\r\n                fieldsFilter: this.fieldsFilter\r\n            };\r\n\r\n            this.props.getMeetingNotes(request, this.props.app);\r\n        }\r\n\r\n        this.initialize = () => {\r\n            const hasFilter = this.props.meetingNoteData != null && this.props.meetingNoteData.filter != null;\r\n            const filter = hasFilter ? this.props.meetingNoteData.filter : null;\r\n            this.page = hasFilter ? filter.page : 1;\r\n            this.limit = hasFilter ? filter.limit : 5;\r\n            this.count = hasFilter ? filter.count : 0;\r\n            this.orderBy = hasFilter ? filter.orderBy : null;\r\n            this.orderType = hasFilter ? filter.orderType : null;\r\n        }\r\n\r\n        this.readInputForm = () => {\r\n            const form = document.getElementById('list-form');\r\n            if (form == null) return;\r\n            const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n            this.fieldsFilter = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.fieldsFilter[element.name] = element.value;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filter = (form) => {\r\n\r\n            this.page = 1;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            console.debug(e.target, \"by \", this.orderBy, this.orderType);\r\n            e.preventDefault();\r\n            \r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onSubmitClick = (e) => {\r\n            e.preventDefault();\r\n            this.filter(document.getElementById(\"list-form\"));\r\n        }\r\n\r\n        this.populateDefaultInputs = () => {\r\n            if (null == this.props.meetingNoteData || null == this.props.meetingNoteData.filter) {\r\n                return;\r\n            }\r\n            const fieldsFilter = this.props.meetingNoteData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n        this.initialize();\r\n    }\r\n    componentDidMount() {\r\n        if (null == this.props.meetingNoteData) {\r\n            this.getMeetingNotes();\r\n        }\r\n        document.title = \"Dashboard\";\r\n        this.populateDefaultInputs();\r\n    }\r\n\r\n    createNavButton() {\r\n\r\n        if (null == this.props.meetingNoteData) {\r\n\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.getMeetingNotesByPage} limit={this.limit}\r\n            totalData={this.props.meetingNoteData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n\r\n        const meetingNoteData = this.props.meetingNoteData;\r\n        const meetingNoteList = meetingNoteData && meetingNoteData.result_list ? meetingNoteData.result_list : [];\r\n        const navButtons = this.createNavButton();\r\n\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Dashboard</h2>\r\n                <Card title={this.props.loggedUser.display_name} >\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n\r\n                <Card title=\"Daftar Notulen Rapat\">\r\n\r\n                    {/* record list */}\r\n                    {navButtons}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        {formComponent.ButtonApplyResetFilter()}\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table style={{   }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', alias:\"Id\", withFilter: true },\r\n                                    { text: 'date', alias:\"Tanggal\", withFilter: true },\r\n                                    { text: 'content', alias:\"Pembahasan\", withFilter: true },\r\n                                    { text: 'decision', alias:\"Keputusan\", withFilter: true },\r\n                                    { text: 'deadline_date', alias:\"Deadline\", withFilter: true },\r\n                                    { text: 'departement', alias:\"Bidang\", withFilter: true },\r\n                                    { text: 'user', alias:\"Notulis\", withFilter: true },\r\n                                    { text: 'status', },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            {meetingNoteList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                const deadlineDate = Date.parse(item.deadline_date);\r\n                                const style = {};\r\n                                try {\r\n                                    const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n                                    \r\n                                    if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                        style.backgroundColor = 'orange';\r\n                                    } else if (item.is_closed == false && diffDay < 0) {\r\n                                        style.backgroundColor = 'red';\r\n                                    }\r\n                                } catch (e) {\r\n                                    //\r\n                                }\r\n                                return (<tr style={style}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                    <td>{item.deadline_date}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.user.name}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                        <Link to={\"/meetingnote/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        <Link to={\"/meetingnote/\" + item.id+\"/action\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        meetingNoteData: state.meetingNoteState.meetingNoteData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false ||\r\n            this.props.loggedUser == null ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Master Data Menu</h2>\r\n                <Card title=\"Menu\">\r\n                        <div  className=\"columns\">\r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                    <p><i style={{fontSize:'50px'}} className=\"fas fa-puzzle-piece\"></i></p>\r\n                                    <Link to=\"/management/departements\">Departements</Link>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                <p><i style={{fontSize:'50px'}} className=\"fas fa-users\"></i></p>\r\n                                    <Link to=\"/management/users\">Users</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(ManagementMenu);","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        fetch(endpoint, {\r\n            method: 'POST',\r\n            body: JSON.stringify(request),\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.json())\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmation(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        <span>Edit</span>\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink)}\r\n                    {this.buttonDeleteRecord(id)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    <span>Delete</span>\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map(cell=>{\r\n                    return <div className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                        </table>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n        \r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departement Management</h2>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <table style={{ tableLayout: 'fixed' }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'name', withFilter: true },\r\n                                    { text: 'description', withFilter: true },\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/departements/\"+item.id,\r\n                                            item.id)}    \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                        </table>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n\r\n        const request = {\r\n            code: 'meeting_note'\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    storeAction = (action) => {\r\n\r\n        const request = {\r\n            action: action\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/action/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true\r\n        }\r\n        this.meetingNote = {};\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });            \r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            this.meetingNote = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.meetingNote[element.name] = element.value;\r\n                    console.debug(\"this.meetingNote[element.name]\",this.meetingNote[element.name], \"element.value\", element.value);\r\n                }\r\n                console.debug(\"inputs: \", element.tagName, element.value);\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"inputs size:\", inputs.length, \"meetingNote>>\", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.meeting_note[element.name];\r\n\r\n                if (this.isClosed() == false && \r\n                    element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed()) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = ()=> {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Meeting Note Form\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Notulensi Rapat Departemen {this.props.loggedUser.departement.name}</h2>\r\n                <Card title=\"Formulir Notulensi\">\r\n                    {this.getRecordId() != null && this.meetingNote != null? \r\n                        <div className=\"tags has-addons are-medium\">\r\n                            <span className=\"tag is-dark\">Status</span>\r\n                            <span className=\"tag is-info\">{this.meetingNote.is_closed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n                        </div>\r\n                    \r\n                    :\r\n                    null}\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed()? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from './../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from './../../../utils/DateUtil';\r\n\r\nconst FORM_ID = \"form-input-meeting-note-action\";\r\nclass MeetingNoteActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailNote: true,\r\n        }\r\n        this.meetingNote = {};\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailNote = () => {\r\n            this.setState({showDetailNote:false});\r\n        }\r\n        this.showDetailNote = () => {\r\n            this.setState({showDetailNote:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                note_id : this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"meetingNote action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.meetingNote.action = response.action;\r\n            this.meetingNote.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.meetingNoteService.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Action Form\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Konfirmasi Rapat Departemen {this.props.loggedUser.departement.name}</h2>\r\n                <Card title=\"Detail Notulen\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.meetingNote.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailNote? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Notulen</p>\r\n                            <button onClick={this.hideDetailNote} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Waktu dan Tempat\">\r\n                                <p>{this.meetingNote.place}, {dateStringDayMonthYearFromText(this.meetingNote.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.meetingNote.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.meetingNote.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.meetingNote.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.meetingNote.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailNote}>Tampilkan Detail Notulen</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Konfirmasi\">\r\n                    {this.meetingNote.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Konfirmasi</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.meetingNote.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.meetingNote.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteActionForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Profile</h2>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport MeetingNoteActionForm from '../pages/meetingnotes/MeetingNoteActionForm';\r\nimport Profile from '../pages/Profile';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id/action\" render={\r\n            (props) =>\r\n              <MeetingNoteActionForm app={this.props.app} />\r\n          } />\r\n\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* users */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* departements */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <Backdrop>\r\n                    <form onSubmit=\"return false;\">\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly?\"button\":\"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </Backdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nconst blankFunc = function (e) { };\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert \n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section className=\"container\" style={{minHeight:'70vh'}}>\n          <div style={{height:'50px'}}>\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n            let result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            setApiToken(result.loginKey);\r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    meetingNoteData: null,\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) { \r\n        case types.GET_MEETING_NOTES:\r\n            let result = {\r\n                ...state,\r\n                meetingNoteData: action.payload\r\n            };\r\n            console.debug(\"action.meetingNoteData: \", result.meetingNoteData);\r\n            return result;\r\n        \r\n        default:\r\n            return { ...state };\r\n             \r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as meetingNotesReducer from \"./meetingNotesReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        managementState: managementReducer.reducer,\r\n        meetingNoteState: meetingNotesReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    managementState: managementReducer.initState,\r\n    meetingNoteState: meetingNotesReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => { return Promise.all([response.json(), response]); })\r\n    .then(([responseJson, response]) => {\r\n\r\n            console.debug(\"Request App Id Middleware Response:\", responseJson);\r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: loginStatus, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.error(\"ERROR Get Request ID: \", err); })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    } \r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const getMeetingNotesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    ...response\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const storeMeetingNote = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json()]); })\r\n        .then(response => {\r\n            alert(\"Success storeMeetingNote\");\r\n        })\r\n        .catch(err => { alert(\"Error storeMeetingNote\");console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as meetingNoteMiddleware from '../middlewares/MeetingNoteMiddleware'\r\nimport * as common from '../middlewares/Common';\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            meetingNoteMiddleware.getMeetingNotesMiddleware, \r\n\r\n            /*enntity management*/\r\n            // managementMiddleware.getEntityListMiddleware,\r\n            // managementMiddleware.getEntityByIdMiddleware,\r\n            // managementMiddleware.updateEntityMiddleware,\r\n            // managementMiddleware.removeManagedEntityMiddleware, \r\n            // managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            // managementMiddleware.getEntityPropertyMiddleware,\r\n            // managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            // realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            // realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}