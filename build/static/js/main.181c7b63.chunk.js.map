{"version":3,"sources":["logo.svg","constant/Url.js","redux/actions/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/BaseMenus.js","constant/Menus.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","components/container/Card.js","components/pages/dashboard/PieChart.js","middlewares/Common.js","services/Promises.js","services/RecordHistoriesService.js","components/buttons/buttons.js","components/pages/dashboard/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","utils/StringUtil.js","components/forms/commons.js","services/MasterDataService.js","components/buttons/NavButtons.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","constant/ApplicationDataKeys.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/messages/Alert.js","services/DiscussionTopicsService.js","components/pages/meetingnotes/MeetingNoteForm.js","services/UserService.js","components/pages/Profile.js","services/IssuesService.js","components/pages/issues/IssuesList.js","components/pages/issues/IssuesForm.js","utils/DateUtil.js","components/messages/ClosedStatus.js","components/pages/issues/IssuesFollowingUpForm.js","components/pages/discussiontopics/DiscussionTopicsForm.js","components/pages/discussiontopics/DiscussionActionForm.js","components/pages/discussiontopics/DiscussionTopicsList.js","components/pages/meetingnotes/MeetingNoteList.js","components/pages/errors/NotFound.js","components/pages/issues/IssueFormPublic.js","components/layout/Content.js","components/widget/Loader.js","components/layout/SideBar.js","App.js","redux/userReducer.js","redux/applicationReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/ApplicationMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","accountAction","app","startLoading","type","payload","meta","email","password","user","applicationAction","key","data","Footer","className","href","Component","BaseComponent","props","authenticated","state","updated","Date","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","getLoggedUser","getLoggedUserDepartementName","isLoggedUserNull","departement","name","showConfirmation","body","Promise","resolve","reject","showAlert","e","showConfirmationDanger","showAlertError","showInfo","showError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","console","warn","commonAjax","commonAjaxWithProgress","title","refresh","setState","this","CommonTitle","style","textAlign","marginLeft","children","BaseMenus","shownMenuList","id","hideMenuList","isMenuListShown","toggleMenuList","menuName","target","getAttribute","menuChildren","i","length","element","role","MENUS","link","iconClassName","Header","showBurger","toggleNavBurger","performLogout","accepted","backgroundColor","to","src","width","height","onClick","map","menu","childs","extractChildren","Fragment","menu-name","marginRight","linkProperty","j","display_name","AppLink","withRouter","connect","userState","dispatch","actions","Message","show","hide","enableHidden","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","handleSubmit","event","preventDefault","form","FormData","elements","performLogin","showLoginInfo","loginFailed","current","ref","marginTop","onSubmit","nam","placeholder","required","requestId","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","headerIconClassName","iconOnClick","headerIconOnClick","margin","withButtonFooter","footerContent","HeaderIcon","aria-hidden","RAD","Math","PI","PieChart","proportions","sort","a","b","proportion","timeoutId","accumulationDegree","updatePie","canvas","ctx","getContext","clearRect","fillStyle","currentRad","currentDegree","x","circleX","y","endAngle","color","strokeStyle","beginPath","arc","fill","coord","calculatePosition","moveTo","lineTo","labelCoord","font","fillText","label","parseFloat","toFixed","radians","mainCoord","calculateCoordinate","rad","deg","PIE_W","accDegree","radius","newX","newY","quad","getQuadrant","adjustedX","abs","cos","adjuxtedY","sin","proportionIsFixed","stateProp","prop","sumValues","animate","requestAnimation","clearTimeout","setTimeout","resetProportion","val","overflowX","DetailPie","padding","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","split","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","headers","code","error","RecordHistoriesService","getStatistic","instance","AnchorWithIcon","Dashboard","getProportionData","statisticData","statistic","total_topic","topic_count","topic_closed_count","topic_not_closed_count","errorLoadingStatistic","pieChartChild","historiesService","statisticLoaded","statisticFailedToLoad","loadStatistic","date","ErrorInfo","BaseAdminPage","ManagementMenu","fontSize","CapitalizeFirstLetter","rawString","string","String","splitted","result","toUpperCase","TableHeadWithFilter","onButtonOrderClick","alias","text","withFilter","InputFormFilter","ButtonApplyResetFilter","InputField","orientation","note","SelectField","options","option","LabelField","SubmitResetButton","submitValue","submitText","withReset","MasterManagementService","setUsersData","usersData","storeUser","userModel","storeIssue","issue","viewUser","userList","filter","list","viewIssue","issueList","storeDepartement","viewDepartement","deleteRecord","departementList","departementsData","NavButtons","index","buttonValues","generateButtonValues","limit","totalData","activeIndex","buttonsData","currentPage","displayed_buttons","buttonCount","ceil","min","max","BaseManagementPage","loadRecords","readInputForm","inputs","getElementsByClassName","fieldsFilter","masterDataServce","page","count","orderBy","orderType","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","withText","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","populateDefaultInputs","hasOwnProperty","navButtons","createNavButton","recordList","result_list","formComponent","overflow","item","indexBegin","DeparementManagement","removeDataFromStore","record_id","applicationData","find","dep","splice","storeApplicationData","description","applicationState","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","debug","match","departementListLoaded","loadRecord","recordSaved","handleSuccessGetRecord","recordFailedToSave","loadDepartements","departement_id","handleErrorGetRecord","formTitle","DepartementManagementForm","updateLocallyStoredDepartements","MeetingNoteSerivce","meetingNote","meeting_note","view","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","ModalBackdrop","DiscussionTopicsService","discussionTopic","discussion_topic","storeAction","action","discussion_action","FORM_ID","TOPIC_PREFIX","MeetingNoteForm","discussionTopicCount","showFormDiscussionTopicInEditMode","discussionTopicService","form_temporary_inputs","discussion_topics","isSubmitting","meetingNoteService","getMaxDiscussionTopicID","addDiscussionTopic","saveFormTemporaryInputs","isDiscussionTopicClosed","is_closed","removeDiscussionTopic","ok","doRemoveDiscussionTopic","setFormTemporaryInputs","setAttribute","fillDataAndStore","onSubmitDiscussionTopic","window","confirm","note_id","storeDiscussionTopic","currentDiscussionTopicID","currentDiscussionTopicIndex","elementName","startsWith","indexAndName","extractTopicDiscussionIndexAndName","storeMeetingNote","handleErrorSubmit","discussionTopics","enableInputs","removeAttribute","reset","discussionTopicSaved","alert","handleErrorSubmitDiscussionTopic","notulis","isClosed","FormAddDiscussionTopic","elementNameSplitIndex","parseInt","ButtonRemoveTopic","DiscussionTopicStatusInfo","closed","border","ButtonAddTopic","LinkEditAndAction","FormUpperTag","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","IssuesService","storePublicIssue","followUpIssue","followUp","followed_up_issue","IssuesList","issueService","isAdmin","place","content","issuer","issue_input","closed_date","issue_sources","IssuesForm","appData","source","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","getDiffDaysToNow","ClosedStatus","IssuesFollowingUpForm","showDetailIssue","hideDetailIssue","issue_id","handleSuccessSubmit","follow_up","DiscussionTopicsForm","LinkDetailMeetingNote","DiscussionActionForm","showDetailDiscussionTopic","discussionTopicSerivce","topic_id","decision","deadline_date","person_in_charge","DiscussionTopicsList","deadlineDate","parse","diffDay","MeetingNoteList","discussion_topics_count","discussion_topics_closed_count","LinkToFormCreate","LinkEditPage","NotFound","class","IssueFormPublic","captchaUpdate","recordSave","captcha","firstNumber","secordNumber","operator","updatedAt","resetCaptcha","floor","random","validateCaptcha","number1","number2","capchaResult","getElementsByName","captchaValidated","departementListNotLoaded","CaptCha","canvas_id","context","getCaptchaText","drawCanvas","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","component","Home","Loader","opacity","position","zIndex","SideBar","menuChild","App","menus","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","additionalMenus","Array","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","paddingTop","paddingLeft","borderRight","initState","loginKey","loginAttempt","applicationProfile","reducer","api_token","rootReducer","combineReducers","userReducer","applicationReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","Object","assign","err","param","requestAppIdMiddleware","message","get","performLogoutMiddleware","logoutSuccess","configureStore","createStore","applyMiddleware","userMiddleware","Root","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.181c7b63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from '../types'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n\r\n \r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const applicationAction = {\r\n    /**\r\n     * @param {String} key\r\n     * @param {*} data\r\n     */\r\n    storeApplicationData: (key, data) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                data:data,\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.STORE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    removeApplicationData: (key) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.REMOVE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n export const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const STORE_APPLICTION_DATA = \"store-app-data\";\r\nexport const REMOVE_APPLICTION_DATA = \"remove-app-data\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">KIIS Jakarta</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import  React , {Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.state = {\r\n            updated:new Date()\r\n        }\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return true;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.getLoggedUser = () => {\r\n            return this.props.loggedUser;\r\n        }\r\n        this.getLoggedUserDepartementName = () => {\r\n            if (this.isLoggedUserNull()) return null;\r\n            return this.getLoggedUser().departement.name;\r\n        }\r\n        this.isLoggedUserNull = () => {\r\n            return false == this.props.loginStatus || null == this.props.loggedUser;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showConfirmationDanger = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n\r\n        this.title = (title) => {\r\n            return <CommonTitle>{title}</CommonTitle>\r\n        }\r\n        this.refresh = () => {\r\n            this.setState({updated:new Date()});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated && null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n\r\nexport const CommonTitle = (props) => {\r\n    return <h2 style={{ textAlign: 'left', marginLeft:'10px' }}>{props.children}</h2>\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nexport default class BaseMenus extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            shownMenuList: {}\r\n        }\r\n\r\n        this.shownMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = true;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.hideMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = false;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.isMenuListShown = (id) => {\r\n            return this.state.shownMenuList[id] == true;\r\n        }\r\n        this.toggleMenuList = (e) => {\r\n            const menuName = e.target.getAttribute(\"menu-name\");\r\n            if (this.isMenuListShown(menuName)) {\r\n                this.hideMenuList(menuName);\r\n            } else {\r\n                this.shownMenuList(menuName);\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    extractChildren(menuChildren) {\r\n        const children = [];\r\n        for (let i = 0; i < menuChildren.length; i++) {\r\n            const element = menuChildren[i];\r\n            if (element.authenticated && this.isLoggedUserNull()) {\r\n                continue;\r\n            }\r\n            if (this.isLoggedUserNull() == false && element.role != null && this.getLoggedUser().role != element.role) {\r\n                continue;\r\n            }\r\n            children.push(element);\r\n        }\r\n\r\n        return children;\r\n    }\r\n    \r\n\r\n}\r\n","\r\nexport const MENUS = [\r\n    {\r\n        name: 'Umum',\r\n        children: [\r\n            {\r\n                name: 'Home',\r\n                link: '/home',\r\n                iconClassName: 'fas fa-home',\r\n            }, {\r\n                name: 'Dashboard',\r\n                link: '/dashboard',\r\n                iconClassName: 'fas fa-tachometer-alt',\r\n                authenticated: true,\r\n\r\n            }, {\r\n                name: 'Aduan',\r\n                link: '/issues-public',\r\n                iconClassName: 'fas fa-envelope-open-text',\r\n                // authenticated: true,\r\n            }]\r\n    }, {\r\n        name: 'Notulensi',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/meetingnote',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        }, {\r\n            name: 'Tambah Notulensi',\r\n            link: '/meetingnote/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n        }]\r\n    }, {\r\n        name: 'Aduan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/issues',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        },\r\n        {\r\n            name: 'Tambah',\r\n            link: '/issues/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n            role: 'admin'\r\n        }]\r\n    }, {\r\n        name: 'Tema Pembahasan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/discussiontopics',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        }]\r\n    }, {\r\n        name: 'Master Data',\r\n        children: [\r\n            {\r\n                name: 'Menu',\r\n                link: '/management',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                // iconClassName: 'fas fa-database'\r\n            },\r\n            {\r\n                name: 'User',\r\n                link: '/management/users',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-users',\r\n            }, {\r\n                name: 'Bidang',\r\n                link: '/management/departements',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-object-group',\r\n            }]\r\n    }\r\n]\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport './SideBar.css'\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\n\r\nclass Header extends BaseMenus {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            showBurger: false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({ showBurger: !this.state.showBurger })\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link style={{ backgroundColor: '#fff' }} className=\"navbar-item\" to=\"/\">\r\n                            <img src=\"kiis-stroke.png\" width=\"38\" height=\"38\" />\r\n                        </Link>\r\n                        <div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"topNav\" className={this.state.showBurger ? \"is-active navbar-menu\" : \" navbar-menu\"}>\r\n                        <div className=\"navbar-start\">\r\n                            {MENUS.map((menu, i) => {\r\n                                const childs = this.extractChildren(menu.children);\r\n                                if (childs == null || childs.length == 0) { return null; }\r\n                                const isMenuListShown = this.isMenuListShown(menu.name);\r\n                                const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                                return (\r\n                                    <React.Fragment key={\"NavMenu_\" + menu.name}>\r\n                                        <p style={{ marginLeft: '10px' }} onClick={this.toggleMenuList} menu-name={menu.name} className=\"menu-label\">\r\n                                            <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                            {menu.name}  </p>\r\n                                        {isMenuListShown ?\r\n                                            <ul className=\"menu-list\">\r\n                                                {childs.map((linkProperty, j) => {\r\n                                                    return <AppLink key={\"header-link-\" + j + \"-\" + i} loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                                                })}\r\n                                            </ul> : null}\r\n                                    </React.Fragment>)\r\n                            })}\r\n                        </div>\r\n                        <div className=\"navbar-end\">\r\n                            <div className=\"navbar-item\">\r\n                                <div className=\"buttons has-addons\">\r\n\r\n                                    {this.props.loginStatus ?\r\n                                        <><Link className=\"button is-info\" to=\"/profile\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                        </Link>\r\n                                            <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                                <span className=\"icon\">\r\n                                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                                </span>\r\n                                                <span>Logout</span>\r\n                                            </a>\r\n                                        </> :\r\n                                        <Link className=\"button is-info\" to=\"/login\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>Login</span>\r\n                                        </Link>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    const iconClassName = linkProperty.iconClassName ? linkProperty.iconClassName : 'fas fa-folder';\r\n    if (null == linkProperty.link) {\r\n        return null;\r\n    }\r\n\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if (linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >\r\n            <span className=\"icon\"><i className={iconClassName} /></span>\r\n            <span>\r\n                {linkProperty.name}\r\n            </span>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header))\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            if (this.props.enableHidden){\r\n                this.setState({show:false});\r\n            }\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                    {this.props.children}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-5-desktop is-5-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const iconClassName = this.props.headerIconClassName;\r\n        const iconOnClick = this.props.headerIconOnClick;\r\n\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style }}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    {null == iconClassName ? null : <HeaderIcon className={iconClassName} onClick={iconOnClick} /> }\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst HeaderIcon = (props) => {\r\n    return (\r\n        <a className=\"card-header-icon\" aria-label=\"more options\" onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={props.className} aria-hidden=\"true\"></i>\r\n            </span>\r\n        </a>\r\n    );\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nconst PIE_W = 100, RAD = 2 * Math.PI;\r\nconst MAX_DEG = 360;\r\nconst PIE_CANVAS_SIZE = 300;\r\nconst circleX = 150, circleY = 150;\r\nexport default class PieChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.proportions = this.props.proportions ? this.props.proportions : [];\r\n        this.\r\n            proportions.sort(function (a, b) {\r\n                return b.proportion - a.proportion;\r\n            });\r\n        this.state = {\r\n            proportions: []\r\n        }\r\n        this.timeoutId = null;\r\n        this.accumulationDegree = 0;\r\n\r\n        this.updatePie = () => {\r\n            this.accumulationDegree = 0;\r\n            const proportions = this.state.proportions;\r\n\r\n            const canvas = document.getElementById(\"pie_chart_canvas\");\r\n            const ctx = canvas.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.fillStyle = '#ccc';\r\n            let currentRad = RAD;\r\n            let currentDegree = 0;\r\n            let x = circleX + PIE_W, y = circleY;\r\n\r\n\r\n            for (let i = 0; i < proportions.length; i++) {\r\n\r\n                const element = proportions[i];\r\n                const endAngle = currentRad - element.proportion * RAD;\r\n                ctx.fillStyle = element.color;\r\n                ctx.strokeStyle = element.color;\r\n                ctx.beginPath();\r\n                ctx.arc(circleX, circleY, PIE_W, currentRad, endAngle, true);\r\n                // ctx.stroke();\r\n                ctx.fill();\r\n\r\n                currentDegree = element.proportion * MAX_DEG;\r\n                this.accumulationDegree += currentDegree;\r\n                const coord = this.calculatePosition(endAngle, element.proportion, ctx);\r\n\r\n                ctx.fillStyle = element.color;\r\n                //drawLine\r\n                if (element.proportion < 0.5) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(circleX, circleY);\r\n                    ctx.lineTo(x, y);\r\n\r\n                    ctx.lineTo(coord.x, coord.y);\r\n                    // ctx.stroke();\r\n                    ctx.fill();\r\n                }\r\n\r\n                //drawLabel\r\n                const labelCoord = coord.labelCoord;\r\n                ctx.font = \"15px Arial\";\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(element.label + \" \" + parseFloat(100 * element.proportion).toFixed(2) + \"%\", labelCoord.x, labelCoord.y);\r\n\r\n                x = coord.x;\r\n                y = coord.y;\r\n\r\n                currentRad = endAngle;\r\n            }\r\n        }\r\n\r\n        this.calculatePosition = (radians, value, ctx) => {\r\n            const mainCoord = this.calculateCoordinate(radians,\r\n                this.accumulationDegree, PIE_W);\r\n            //for label\r\n            const rad = value * RAD / 2;\r\n            const deg = value * MAX_DEG / 2;\r\n            const labelCoord = this.calculateCoordinate(radians - rad,\r\n                this.accumulationDegree - deg, PIE_W / 2);\r\n            return { ...mainCoord, labelCoord: labelCoord };\r\n        }\r\n\r\n        this.calculateCoordinate = (radians, accDegree, radius) => {\r\n\r\n            let newX = 0, newY = 0;\r\n            const quad = this.getQuadrant(accDegree);\r\n\r\n            const adjustedX = Math.abs(radius * Math.cos(radians));\r\n            const adjuxtedY = Math.abs(radius * Math.sin(radians));\r\n            if (quad == 1) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n\r\n            } else if (quad == 2) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n            } else if (quad == 3) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            } else if (quad == 4) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            }\r\n            // ctx.fillRect(newX-5, newY-5, 10, 10);\r\n            return { x: newX, y: newY }\r\n        }\r\n\r\n        this.getQuadrant = (value) => {\r\n            if (value <= 90) {\r\n                return 1;\r\n            }\r\n            if (value <= 180) {\r\n                return 2;\r\n            }\r\n            if (value <= 270) {\r\n                return 3;\r\n            }\r\n            return 4;\r\n        }\r\n\r\n        this.proportionIsFixed = () => {\r\n            const stateProp = this.state.proportions;\r\n            const prop = this.proportions;\r\n            const fixed = this.sumValues(stateProp) >= this.sumValues(prop);\r\n            return fixed;\r\n        }\r\n\r\n        this.animate = () => {\r\n            const proportions = this.proportions;\r\n            // while (this.proportionIsFixed() == false) {\r\n\r\n            const stateProp = this.state.proportions;\r\n            for (let i = 0; i < proportions.length; i++) {\r\n                const element = proportions[i];\r\n                if (stateProp[i] == null) {\r\n                    stateProp.push({\r\n                        proportion: 0,\r\n                        value: element.value,\r\n                        label: element.label,\r\n                        color: element.color\r\n                    })\r\n                }\r\n                if (stateProp[i].proportion < element.proportion) {\r\n                    stateProp[i].proportion += 0.005;\r\n                }\r\n                if (stateProp[i].proportion >= element.proportion) {\r\n                    stateProp[i].proportion = element.proportion;\r\n                }\r\n            }\r\n            this.setState({ proportions: stateProp });\r\n            if (this.proportionIsFixed() == false) {\r\n                this.requestAnimation();\r\n            }\r\n        }\r\n        // }\r\n\r\n        this.requestAnimation = () => {\r\n            if (null != this.timeoutId) {\r\n                clearTimeout(this.timeoutId);\r\n            }\r\n            this.timeoutId = setTimeout(this.animate, 5);\r\n        }\r\n\r\n        this.resetProportion = () => {\r\n            this.setState({proportions:[]});\r\n        }\r\n\r\n    }\r\n\r\n    sumValues(proportions) {\r\n        let val = 0;\r\n        for (let i = 0; i < proportions.length; i++) {\r\n            const element = proportions[i];\r\n            val += element.proportion;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n    componentDidUpdate() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div ><h3>{this.props.title? this.props.title:\"Grafik\"}</h3>\r\n            <div style={{ height: 'auto' }} className=\"columns\">\r\n\r\n                <div className=\"column has-text-centered \"  style={{overflowX:'scroll'}}>\r\n                    <canvas id=\"pie_chart_canvas\" className=\"has-background-light\" width={PIE_CANVAS_SIZE} height={PIE_CANVAS_SIZE}></canvas>\r\n                    \r\n                </div>\r\n                <div className=\"column \">\r\n                    <DetailPie proportions={this.state.proportions} />\r\n                </div>\r\n            </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DetailPie = (props) => {\r\n    return (<article className=\"message\">\r\n        <div className=\"message-body\" style={{overflowX:'scroll'}}>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Warna</th>\r\n                        <th>Keterangan</th>\r\n                        <th>Nilai</th>\r\n                        <th>Presentase</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.proportions.map((proportion, i) => {\r\n                        return (\r\n                            <tr key={\"PIE_PROP_\"+i}>\r\n                                <td style={{ width: '20px' }}>{i + 1}</td>\r\n                                <td style={{ padding: '5px', width: '50px' }}>\r\n                                    <div style={{ width: '40px', height: '40px', backgroundColor: proportion.color, }} />                            </td>\r\n                                <td>{proportion.label}</td>\r\n                                <td>{proportion.value}</td>\r\n                                <td>{parseFloat(100 * proportion.proportion).toFixed(2)}%</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </article>)\r\n}","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class RecordHistoriesService {\r\n    static instance = RecordHistoriesService.instance || new RecordHistoriesService();\r\n    getStatistic = () => {\r\n        const request = {}\r\n\r\n        const endpoint = contextPath().concat(\"api/histories/statistic\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","import  React  from 'react';\r\n\r\nexport const AnchorWithIcon = (props) => {\r\n    const className = props.className;\r\n    const iconClassName = props.iconClassName;\r\n    return (\r\n        <a className={\"button \" +className} style={props.style} onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={iconClassName}></i>\r\n            </span>\r\n            <spam>{props.children}</spam>\r\n        </a>\r\n    )\r\n}","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport PieChart from './PieChart';\r\nimport RecordHistoriesService from './../../../services/RecordHistoriesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport Message from './../../messages/Message';\r\n\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            errorLoadingStatistic: false\r\n        };\r\n        this.pieChartChild = React.createRef();\r\n        this.historiesService = RecordHistoriesService.instance;\r\n        this.statisticData = null;\r\n\r\n        this.statisticLoaded = (response) => {\r\n            this.statisticData = response;\r\n            if (this.pieChartChild.current){\r\n                this.pieChartChild.current.resetProportion();\r\n            }\r\n        }\r\n\r\n        this.statisticFailedToLoad = (e) => {\r\n            console.error(e);\r\n            this.setState({ errorLoadingStatistic: true });\r\n        }\r\n        this.loadStatistic = () => {\r\n            this.setState({ errorLoadingStatistic: false });\r\n            this.commonAjax(\r\n                this.historiesService.getStatistic, null,\r\n                this.statisticLoaded,\r\n                this.statisticFailedToLoad,\r\n            )\r\n        }\r\n    }\r\n\r\n    getProportionData = () => {\r\n        if (this.statisticData == null) { return null }\r\n        const statistic = this.statisticData.statistic;\r\n        const total_topic = statistic.topic_count;\r\n        const proportions = [\r\n            {\r\n                proportion: statistic.topic_closed_count / total_topic,\r\n                label: 'Closed',\r\n                color: 'green',\r\n                value: statistic.topic_closed_count\r\n            },\r\n            {\r\n                proportion: statistic.topic_not_closed_count / total_topic,\r\n                label: 'Not Closed',\r\n                color: 'orange',\r\n                value: statistic.topic_not_closed_count \r\n            }\r\n        ]\r\n        return proportions;\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Dashboard\";\r\n        if (null == this.state.statisticData) {\r\n            this.loadStatistic();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        const proportions = this.getProportionData();\r\n        return (\r\n            <div>\r\n                <CommonTitle>Dashboard</CommonTitle>\r\n                <Card title=\"Welcome\" >\r\n                    <p>{this.getLoggedUser().display_name}</p>\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n                <Card title=\"Statistik\">\r\n                    {this.state.errorLoadingStatistic ?\r\n                        <ErrorInfo onClick={(e) => this.loadStatistic()} />\r\n                        : null == proportions ? <p>Please wait..</p> :\r\n                            <div>\r\n                                <PieChart title=\"Tema Pembahasan\" ref={this.pieChartChild}  proportions={proportions} />\r\n                                <AnchorWithIcon style={{marginTop:'20px'}} iconClassName=\"fas fa-sync\" onClick={this.loadStatistic}>\r\n                                    Reload\r\n                                </AnchorWithIcon>\r\n                                <p>updated at: {this.statisticData.date}</p>\r\n                            </div>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst ErrorInfo = (props) => {\r\n\r\n    return (\r\n        <Message enableHidden={false} className=\"is-danger\" header=\"Gagal Memuat Data\">\r\n            <AnchorWithIcon onClick={props.onClick} iconClassName=\"fas fa-sync\">Muat Ulang</AnchorWithIcon>\r\n        </Message>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.getLoggedUser().role != 'admin') {\r\n            this.backToLogin();\r\n        }\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Master Data Menu</CommonTitle>\r\n                <Card title=\"Menu\">\r\n                    <div className=\"columns\">\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-object-group\"></i></p>\r\n                                <Link to=\"/management/departements\">Departements</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-users\"></i></p>\r\n                                <Link to=\"/management/users\">Users</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(ManagementMenu));\r\n","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport const replaceString = (string, toReplace, replacement) => {\r\n\ttry {\r\n\t\tconst splitted = new String(string).split(toReplace);\r\n\t\treturn splitted.join(replacement);\r\n\t} catch (error) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n \r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst rawVal = parseInt(val);\r\n\tlet nominal =  Math.abs(val).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif(rawVal < 0){\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\nimport { replaceString } from '../../utils/StringUtil';\r\n\r\nexport const CapitalizeFirstLetter = (rawString) => {\r\n    if (null == rawString || rawString.length <= 1) {\r\n        return rawString;\r\n    }\r\n    const string = new String(rawString);\r\n    \r\n    let splitted = string.split(\"_\");\r\n    if (splitted.length > 1) {\r\n        let result = \"\";\r\n        for (let i = 0; i < splitted.length; i++) {\r\n            const element = splitted[i];\r\n            result+=CapitalizeFirstLetter(element)+ \" \";\r\n        }\r\n\r\n        return result;\r\n    }\r\n    let result = (string).substring(0,1).toUpperCase();\r\n    result+= (string).substring(1, string.length);\r\n\r\n    return result;\r\n}\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                const label = header.alias?header.alias:header.text;\r\n                return <th key={\"TH_\"+i}>{CapitalizeFirstLetter(label)}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field \"+props.className;\r\n    const orientation = props.orientation?props.orientation:\"horizontal\";\r\n    const label = props.label ? props.label : props.name;\r\n    return (\r\n        <div className={\"field is-\"+orientation}>\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{CapitalizeFirstLetter(label)}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option, i) => {\r\n        return <option key={\"select-option-\"+i} value={option.value} >{option.text}</option>\r\n    })\r\n    const label = props.label?props.label:props.name;\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{CapitalizeFirstLetter(label)}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className=\"button is-link\" type=\"submit\" style={{marginRight:'10px'}} >\r\n                        <span className=\"icon\"><i className=\"fas fa-save\"></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    storeIssue = (issue) => {\r\n        const request = {\r\n            code: 'issue',\r\n            issue:issue\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    viewIssue = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"issue\"});\r\n    }\r\n\r\n    issueList = (filter) => {\r\n        return this.list({\r\n            code: 'issue',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )  \r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n            console.error(\"Error loading resource: \", e);\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link, withText = true) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        {withText?\r\n                        <span>Edit</span>\r\n                        :null}\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink, false)}\r\n                    {this.buttonDeleteRecord(id, false)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id, withText = true) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    {withText?\r\n                    <span>Delete</span>\r\n                    :null}\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.onSuccessDelete = (response) => {\r\n            this.removeDataFromStore(response.record_id);\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n        this.removeDataFromStore = (id) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) { return; }\r\n            const exist = departementList.find(dep => dep.id == id) != null;\r\n            if (!exist) return;\r\n\r\n            for (let i = 0; i < departementList.length; i++) {\r\n                const element = departementList[i];\r\n                if (element.id == id) {\r\n                    departementList.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', withFilter: true },\r\n                                        { text: 'name', withFilter: true },\r\n                                        { text: 'description', withFilter: true },\r\n                                        { text: 'action' }\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        return (<tr key={\"record_\" + i}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>\r\n                                                {this.buttonsModifyAndDelete(\r\n                                                    \"/management/departements/\" + item.id,\r\n                                                    item.id)}\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DeparementManagement));","export const DATA_KEY_DEPARTEMENTS = \"departements\";","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/users/\"+response.user.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.updateLocallyStoredDepartements = (departement) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) {return;}\r\n            const exist = departementList.find(dep => dep.id == departement.id) != null;\r\n            if (exist) {\r\n                for (let i = 0; i < departementList.length; i++) {\r\n                    const element = departementList[i];\r\n                    if (element.id == departement.id) {\r\n                        departementList[i] = departement;\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n                departementList.push(departement);\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            this.updateLocallyStoredDepartements(response.departement);\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/departements/\"+response.departement.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n               <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'notes',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/notes/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <ModalBackdrop>\r\n                    <form onSubmit={(e)=>e.preventDefault()}>\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly||this.props.isError?\"button\" : \"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </ModalBackdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport const ModalBackdrop = (props) => {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\n\r\nexport default class DiscussionTopicsService\r\n{\r\n    static instance = DiscussionTopicsService.instance || new DiscussionTopicsService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    store = (discussionTopic) => {\r\n\r\n        const request = {\r\n            discussion_topic: discussionTopic\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'discussion_topic',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    // delete = (id) => {\r\n    //     const endpoint = contextPath().concat(\"api/discussiontopics/delete/\"+id);\r\n    //     return commonAjaxPostCalls(endpoint, {});\r\n    // }\r\n    storeAction = (action) => {\r\n        const request = {\r\n            discussion_action: action\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/action\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { ModalBackdrop } from './../../messages/Alert';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LabelField } from './../../forms/commons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nconst TOPIC_PREFIX = \"discussion_topic_\";\r\nconst CLASS_INPUT_FIELD = \"input-form-field\";\r\n\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            discussionTopicCount: [1],\r\n            showFormDiscussionTopicInEditMode: false\r\n        }\r\n\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.form_temporary_inputs = {};\r\n        this.meetingNote = { discussion_topics: [] };\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.getMaxDiscussionTopicID = () => {\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let max = 0;\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element > max) {\r\n                    max = element;\r\n                }\r\n            }\r\n            return max;\r\n        }\r\n\r\n        this.addDiscussionTopic = () => {\r\n\r\n            if (this.getRecordId() != null && null != this.meetingNote) {\r\n                this.setState({ showFormDiscussionTopicInEditMode: true });\r\n                return;\r\n            }\r\n\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            this.saveFormTemporaryInputs();\r\n            discussionTopicCount.push(this.getMaxDiscussionTopicID() + 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n\r\n        }\r\n\r\n        this.isDiscussionTopicClosed = (id) => {\r\n            if (null == this.meetingNote || null == this.meetingNote.discussion_topics) {\r\n                return false;\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const element = this.meetingNote.discussion_topics[i];\r\n                if (element.id == id && element.is_closed) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.removeDiscussionTopic = (id) => {\r\n            this.saveFormTemporaryInputs();\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Remove discussion topic (\" + id + \")? \")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.doRemoveDiscussionTopic(id);\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.doRemoveDiscussionTopic = (id) => {\r\n            \r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let index = null;\r\n\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element == id) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if (null == index) {\r\n                return;\r\n            }\r\n            discussionTopicCount.splice(index, 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n            this.setFormTemporaryInputs();\r\n\r\n        }\r\n        this.setFormTemporaryInputs = () => {\r\n            console.debug(\"setTempDiscussionTopicValues: \", this.form_temporary_inputs);\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != this.form_temporary_inputs[element.name]) {\r\n                    element.value = this.form_temporary_inputs[element.name];\r\n                } else {\r\n                    element.value = null;\r\n                }\r\n\r\n                if (this.getRecordId() != null) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n        this.saveFormTemporaryInputs = () => {\r\n            this.form_temporary_inputs = {};\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.value == null || element.value == \"\") {\r\n                    continue;\r\n                }\r\n                this.form_temporary_inputs[element.name] = element.value;\r\n            }\r\n            console.debug(\"SAVED TEMP: \", this.form_temporary_inputs);\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (this.getRecordId() != null) {\r\n                return;\r\n            }\r\n            this.saveFormTemporaryInputs();\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });\r\n        }\r\n\r\n        this.onSubmitDiscussionTopic = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n\r\n            if (!window.confirm(\"Submit Data?\") || null == this.meetingNote) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            const discussionTopic = {\r\n                note_id: this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                discussionTopic[element.name] = element.value;\r\n            }\r\n            console.debug(\"SUBMIT:\", discussionTopic);\r\n            this.storeDiscussionTopic(discussionTopic);\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n\r\n            this.meetingNote = {\r\n                discussion_topics: []\r\n            };\r\n            let currentDiscussionTopicID = -1;\r\n            let currentDiscussionTopicIndex = -1;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                const elementName = element.name;\r\n                if (null == element.value || \"\" == element.value) {\r\n                    continue;\r\n                }\r\n                if (elementName.startsWith(TOPIC_PREFIX)) {\r\n                    const indexAndName = extractTopicDiscussionIndexAndName(elementName);\r\n                    if (indexAndName.index != currentDiscussionTopicID) {\r\n                        this.meetingNote.discussion_topics.push({});\r\n                        currentDiscussionTopicID = indexAndName.index;\r\n                        currentDiscussionTopicIndex++;\r\n                    }\r\n                    this.meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name] = element.value;\r\n                } else {\r\n                    this.meetingNote[elementName] = element.value;\r\n                }\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"meetingNote: \", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    \r\n                    this.props.history.push(\"/meetingnote/\" + response.meeting_note.id);\r\n                    this.handleSuccessGetRecord(response);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n             }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            const discussionTopics = this.meetingNote.discussion_topics;\r\n            let discussionTopicCount = [];\r\n            for (let i = 0; i < discussionTopics.length; i++) {\r\n                const element = discussionTopics[i];\r\n                discussionTopicCount.push(element.id);\r\n            }\r\n            this.form_temporary_inputs = {};\r\n\r\n            for (const key in this.meetingNote) {\r\n                if (this.meetingNote.hasOwnProperty(key)) {\r\n                    const element = this.meetingNote[key];\r\n                    if (key == (\"discussion_topics\")) {\r\n                        continue;\r\n                    }\r\n                    this.form_temporary_inputs[key] = element;\r\n                }\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const discussion_topic = this.meetingNote.discussion_topics[i];\r\n                for (const key in discussion_topic) {\r\n                    if (discussion_topic.hasOwnProperty(key)) {\r\n                        const element = discussion_topic[key];\r\n                        this.form_temporary_inputs[TOPIC_PREFIX + discussion_topic.id + \"_\" + key] = element;\r\n                    }\r\n                }\r\n            }\r\n            // console.debug(\"FORM INPUTS: \", this.form_temporary_inputs);\r\n            this.setState({ discussionTopicCount: discussionTopicCount, isLoadingRecord: false });\r\n            \r\n            // console.debug(\"FORM INPUTS == : \", this.form_temporary_inputs);\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        this.discussionTopicSaved = (response) => {\r\n            alert(\"SUCCESSS\");\r\n            this.setState({ showFormDiscussionTopicInEditMode: false });\r\n            this.loadRecord();\r\n\r\n        }\r\n        this.handleErrorSubmitDiscussionTopic = (e) => {\r\n            alert(\"Error Update Discussion Topic: \" + e);\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeDiscussionTopic = (discussionTopic) => {\r\n            this.commonAjax(this.discussionTopicService.store, discussionTopic,\r\n                this.discussionTopicSaved, this.handleErrorSubmitDiscussionTopic);\r\n        }\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.recordSaved, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Notulensi\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n\r\n        if (this.getRecordId() == null && this.meetingNote != null) {\r\n            this.meetingNote = null;\r\n            this.form_temporary_inputs = {};\r\n            this.setState({ discussionTopicCount: [1] });\r\n        }\r\n        this.setFormTemporaryInputs();\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n\r\n        const title = this.title(\"Notulensi Rapat\");\r\n        \r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        let notulis = \"\";\r\n        if (this.meetingNote != null && this.meetingNote.user != null) {\r\n            notulis = this.meetingNote.user.display_name;\r\n        } else {\r\n           notulis = this.getLoggedUser().display_name;\r\n        }\r\n        const formTitle = <>\r\n            <Link to=\"/meetingnote\">Notulensi</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n\r\n        return (\r\n            <div>\r\n                {title}\r\n                {this.state.showFormDiscussionTopicInEditMode ?\r\n                    <FormAddDiscussionTopic onSubmit={this.onSubmitDiscussionTopic}\r\n                        onClose={(e) => this.setState({ showFormDiscussionTopicInEditMode: false })}\r\n                    /> : null\r\n                }\r\n                <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                    <Card title={formTitle}>\r\n                        {this.getRecordId() != null && this.meetingNote != null ?\r\n                            <FormUpperTag meetingNote={this.meetingNote} /> : null}\r\n                        \r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <LabelField label=\"Tema Pembahasan\" >\r\n                            <span className=\"tag is-dark\">\r\n                                <b>{this.state.discussionTopicCount.length}</b></span>\r\n                        </LabelField>\r\n                        <LabelField label=\"Notulis\" >{notulis}</LabelField>\r\n                    </Card>\r\n\r\n                    {/* ---------- discussion topics forms ----------- */}\r\n                    {this.state.discussionTopicCount.map((id, i) => {\r\n                        const isClosed = this.isDiscussionTopicClosed(id);\r\n                        const title = \"Tema Pembahasan #\" + (i + 1);// +\", id:\"+id;\r\n                        return (\r\n                            <Card title={title} key={\"disc_topic_field_\" + i}\r\n                            >\r\n                                {isClosed ?\r\n                                    <span className=\"tag is-primary\"><i className=\"fas fa-check\" />&nbsp;Closed</span> :\r\n                                    null}\r\n                                {this.getRecordId() == null && this.state.discussionTopicCount.length > 1 ?\r\n                                    <ButtonRemoveTopic id={id} removeDiscussionTopic={\r\n                                        this.removeDiscussionTopic} /> : null}\r\n\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={TOPIC_PREFIX + id + \"_content\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={TOPIC_PREFIX + id + \"_decision\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={TOPIC_PREFIX + id + \"_deadline_date\"} type=\"date\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={TOPIC_PREFIX + id + \"_person_in_charge\"} />\r\n\r\n                                {this.getRecordId() != null ? <LinkEditAndAction id={id} /> : null}\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                    <ButtonAddTopic addDiscussionTopic={this.addDiscussionTopic} />\r\n                    {this.getRecordId() == null ?\r\n                    <Card title=\"Action\">\r\n                        <SubmitResetButton submitText={\"Create\"} withReset={true} />\r\n                    </Card>\r\n                        : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormAddDiscussionTopic = (props) => {\r\n    return (\r\n        <ModalBackdrop >\r\n            <div className=\"container\">\r\n                <Card title=\"Tambah Tema Pembahasan\"\r\n                    headerIconClassName=\"fas fa-times\"\r\n                    headerIconOnClick={props.onClose}\r\n                >\r\n                    <form onSubmit={props.onSubmit}>\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={\"content\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={\"decision\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={\"deadline_date\"} type=\"date\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={\"person_in_charge\"} />\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                    <div className=\"level\">\r\n                        <div className=\"level-left\">\r\n                        <a className=\"button\" onClick={props.onClose}>Close</a>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </Card>\r\n            </div>\r\n        </ModalBackdrop>\r\n    )\r\n}\r\n\r\nconst extractTopicDiscussionIndexAndName = (elementName) => {\r\n    const result = {\r\n        index: 0,\r\n        name: null,\r\n    }\r\n    let elementNameSplitKey = elementName.split(TOPIC_PREFIX);\r\n    let elementNameSplitIndex = elementNameSplitKey[1].split(\"_\");\r\n    result.index = parseInt(elementNameSplitIndex[0]);\r\n    result.name = elementName.split(TOPIC_PREFIX + result.index + \"_\")[1];\r\n    return result;\r\n}\r\n\r\nconst ButtonRemoveTopic = (props) => {\r\n\r\n    return (\r\n        <a className=\"button is-danger is-outlined\" onClick={(e) => props.removeDiscussionTopic(props.id)}>\r\n            <span className=\"icon\"><i className=\"fas fa-times\" /></span>\r\n            <span>Remove</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst DiscussionTopicStatusInfo = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    if (null == meetingNote) return null;\r\n    const discussion_topics = meetingNote.discussion_topics;\r\n    if (null == discussion_topics) return null;\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed) {\r\n            closed++;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table><tbody><tr >\r\n            <td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Closed</span>\r\n                    <span className=\"tag is-info\">{closed}</span>\r\n                </div>\r\n            </td><td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Not Closed</span>\r\n                    <span className=\"tag is-danger\">{discussion_topics.length - closed}</span>\r\n                </div></td>\r\n        </tr></tbody></table>\r\n    )\r\n}\r\n\r\nconst ButtonAddTopic = (props) => {\r\n    return (\r\n        <div className=\"has-text-centered\">\r\n            <a className=\"button is-primary is-outlined\" onClick={props.addDiscussionTopic}\r\n                style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>{\"Tambah Tema Pembahasan\"}</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    const id = props.id;\r\n    return (\r\n        <div className=\"buttons has-addons\">\r\n            <Link to={\"/discussiontopics/\" + id} className=\"button is-warning\">\r\n                <i className=\"fas fa-edit\" />&nbsp;Edit\r\n            </Link>\r\n            <Link to={\"/discussiontopics/\" + id + \"/action\"} className=\"button is-primary\">\r\n                <i className=\"fas fa-location-arrow\" />&nbsp;Konfirmasi\r\n            </Link></div>\r\n    )\r\n}\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\nconst FormUpperTag = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div className=\"level\">\r\n                <div className=\"level-left\" >\r\n                    <DiscussionTopicStatusInfo meetingNote={meetingNote} />\r\n                </div>\r\n                <div className=\"level-right\">\r\n                    <span className=\"tag is-primary is-medium\">{meetingNote.departement.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Profile</CommonTitle>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\nexport default class IssuesService\r\n{\r\n    static instance = IssuesService.instance || new IssuesService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    //public//\r\n    departementList = () => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/departements\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    storePublicIssue =(issue) => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/store\");\r\n        return commonAjaxPostCalls(endpoint, {\r\n            issue:issue\r\n        });\r\n    }\r\n\r\n    //authenticated//\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'issue',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    delete = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/delete/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    followUpIssue = (followUp) => {\r\n        const request = {\r\n            followed_up_issue: followUp\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/followup\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport Columns from './../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nclass IssuesList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Aduan\", \"issue\");\r\n        this.state = {}\r\n        this.issueService = IssuesService.instance;\r\n\r\n        //overrid\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.issueService.delete,\r\n                id,\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.issueService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Aduan\";\r\n    }\r\n\r\n    //overrid baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.isLoggedUserNull()) {return null;}\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Aduan</CommonTitle>\r\n                <Card title=\"Daftar Aduan\">\r\n                {!isAdmin?null:this.linkToFormCreate(\"/issues/create\", \"Tambah Aduan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'date', withFilter: true },\r\n                                    { text: 'place', withFilter: true },\r\n                                    { text: 'content', withFilter: true },\r\n                                    { text: 'issuer', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'issue_input', withFilter: true },\r\n                                    { text: 'is_closed', alias:'Status', withFilter: true},\r\n                                    { text: 'closed_date', alias:'Closed', withFilter: true},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.issuer}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.issue_input}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.closed_date}\r\n                                    </td>\r\n                                    <td>\r\n                                        {isAdmin?\r\n                                        <>\r\n                                        <Link to={\"/issues/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        {this.buttonDeleteRecord(item.id, false)}\r\n                                        </>\r\n                                        :null}\r\n                                        <Link to={\"/issues/\" + item.id+\"/followup\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesList));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\n\r\nexport const issue_sources = [\r\n    'Yayasan', 'Orang Tua', 'Santri', 'Pegawai', 'Tamu',\r\n]\r\n\r\nclass IssuesForm extends BaseAdminPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const issue = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    issue[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                issue.id = this.getRecordId();\r\n            }\r\n            this.store(issue);\r\n            console.debug(\"ISSUE: \", issue);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList= response.result_list;\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/issues/\" + response.issue.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (issue) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeIssue, issue,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n                this.commonAjax(\r\n                    this.masterDataService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    (error) => { }\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n               \r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.issue.departement_id;\r\n                } else {\r\n                    element.value = response.issue[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewIssue, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadDepartements();\r\n        document.title = \"Form Aduan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Aduan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Tanggal\" name=\"date\" type=\"date\" required={true} />\r\n                        <InputField label=\"Tempat\" name=\"place\" required={true} />\r\n                        <InputField label=\"Permasalahan\" name=\"content\" type=\"textarea\" required={true} />\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Sumber Aduan\" name=\"issue_input\" required={true} />\r\n                        <SelectField label=\"Pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"Departement\" options={this.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(IssuesForm));","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ClosedStatus extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const isClosed = this.props.closed == true;\r\n        return (\r\n            <div className=\"tags has-addons are-medium\">\r\n                <span className=\"tag is-dark\">Status</span>\r\n                <span className={\"tag \" + (isClosed ? \"is-info\" : \"is-warning\")}>{isClosed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-follow-up-issue\";\r\nclass IssuesFollowingUpForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailIssue: true,\r\n        }\r\n        this.issue = {};\r\n        this.issueService = IssuesService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({ showDetailIssue: false });\r\n        }\r\n        this.showDetailIssue = () => {\r\n            this.setState({ showDetailIssue: true });\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                issue_id: this.issue.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.issue.follow_up = response.followed_up_issue;\r\n            this.issue.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.issue = response.issue;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (followUp) => {\r\n            this.commonAjax(this.issueService.followUpIssue, followUp,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.issueService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.issue != null && this.issue.is_closed == true;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        const isClosed = this.issue.is_closed;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Tindak Lanjut Aduan</CommonTitle>\r\n\r\n                <Card title=\"Detail Aduan\">\r\n                    <ClosedStatus closed={isClosed} />\r\n                    {this.state.showDetailIssue ?\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Aduan</p>\r\n                                <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Waktu dan Tempat\">\r\n                                    <p>{this.issue.place}, {dateStringDayMonthYearFromText(this.issue.date)}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Bidang\">\r\n                                    <p>{this.issue.departement.name}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Permasalahan\">\r\n                                    <p>{this.issue.content}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Pengadu\">\r\n                                    <p>{this.issue.email}, {this.issue.issuer}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Sumber Input\">\r\n                                    <p>{this.issue.issue_input}</p>\r\n                                </LabelField>\r\n\r\n                            </div>\r\n                        </article>\r\n                        :\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-down\" onClick={this.showDetailIssue}>\r\n                            Detail Aduan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.issue.follow_up == null ?\r\n                        <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                        </form>\r\n                        :\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Tindak Lanjut</p>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Tanggal\">\r\n                                    <p>{this.issue.follow_up.date}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Keterangan\">\r\n                                    <p>{this.issue.follow_up.description}</p>\r\n                                </LabelField>\r\n                            </div>\r\n                        </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesFollowingUpForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport ClosedStatus from '../../messages/ClosedStatus';\r\n\r\nclass DiscussionTopicsForm extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const discussionTopic = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    discussionTopic[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                discussionTopic.id = this.getRecordId();\r\n            }\r\n            this.store(discussionTopic);\r\n            console.debug(\"discussionTopic: \", discussionTopic);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/discussiontopics/\" + response.discussion_topic.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (discussionTopic) => {\r\n            this.commonAjax(\r\n                this.discussionTopicService.store, discussionTopic,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.recordData = response;\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false });\r\n\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = this.discussionTopic[element.name];\r\n                if (this.isClosed() == false && element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed() == true) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n        document.title = \"Form Tema Pembahasan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const title = this.title(\"Form Tema Pembahasan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title={formTitle} >\r\n                    {this.getRecordId() != null && this.discussionTopic != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <ClosedStatus closed={isClosed} />\r\n                            </div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.discussionTopic.departement == null ? null : this.discussionTopic.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed() ? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkDetailMeetingNote = (props) => {\r\n    const note_id = props.note_id;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <Link to={\"/meetingnote/\" + props.note_id} className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-clipboard\"></i>\r\n                </span>\r\n                <span>Detail Notulensi</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DiscussionTopicsForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LinkDetailMeetingNote } from './DiscussionTopicsForm';\r\nimport { AnchorWithIcon } from '../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-discussion-action\";\r\nclass DiscussionActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailDiscussionTopic: true,\r\n        }\r\n        this.discussionTopic = {};\r\n        this.discussionTopicSerivce = DiscussionTopicsService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailDiscussionTopic:false});\r\n        }\r\n        this.showDetailDiscussionTopic = () => {\r\n            this.setState({showDetailDiscussionTopic:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                topic_id : this.discussionTopic.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.discussionTopic.action = response.discussion_action;\r\n            this.discussionTopic.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.discussionTopicSerivce.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicSerivce.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Konfirmasi Tema Pembahasan\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n    render() {\r\n        \r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return null;\r\n        }\r\n        \r\n        const title = this.title(\"Penyelesaian/Pelaksanaan Keputusan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title=\"Detail Tema Pembahasan\">\r\n                    <ClosedStatus closed={isClosed} />\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    {this.state.showDetailDiscussionTopic? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tema Pembahasan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                        <LabelField label=\"Waktu\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.discussionTopic.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.discussionTopic.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.discussionTopic.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.discussionTopic.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <AnchorWithIcon onClick={this.showDetailDiscussionTopic} iconClassName=\"fas fa-angle-down\">\r\n                        Detail Tema Pembahasan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Penyelesaian/Pelaksanaan Keputusan\">\r\n                    {this.discussionTopic.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <formComponent.InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <formComponent.InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.discussionTopic.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.discussionTopic.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionActionForm));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { getDiffDaysToNow } from './../../../utils/DateUtil';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass DiscussionTopicsList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Topik Pembahasan\", \"discussiontopic\");\r\n        this.state = {}\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => {\r\n            // this.commonAjax(\r\n            //     this.discussionTopicService.delete,\r\n            //     id,\r\n            //     this.onSuccessDelete,\r\n            //     this.onErrorDelete\r\n            // )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.discussionTopicService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Tema Pembahasan\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Tema Pembahasan</CommonTitle>\r\n                <Card title=\"Daftar Tema Pembahasan\">\r\n\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'content', alias: \"Pembahasan\", withFilter: true },\r\n                                        { text: 'decision', alias: \"Keputusan\", withFilter: true },\r\n                                        { text: 'deadline_date', alias: \"Deadline\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'is_closed', alias: 'Status', withFilter: true },\r\n                                        { text: 'closed_date', alias: 'Closed', withFilter: true },\r\n                                        { text: 'action' },\r\n                                        { text: 'opsi' },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record_\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                            <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                            <td>{item.deadline_date}</td>\r\n                                            <td>{item.departement.name}</td>\r\n                                            <td>\r\n                                                {item.is_closed == true ?\r\n                                                    <span className=\"tag is-info\">Closed</span>\r\n                                                    :\r\n                                                    <span className=\"tag is-warning\">Not Closed</span>}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.closed_date}\r\n                                            </td>\r\n                                            <td><LinkEditAndAction id={item.id} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={\"/meetingnote/\" + item.note_id}\r\n                                                    className=\"button is-light is-small\">\r\n                                                    <span className=\"icon\">\r\n                                                        <i className=\"fas fa-clipboard\" />\r\n                                                    </span>\r\n                                                    <span>Notulensi</span>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    return (\r\n        <>\r\n            <Link to={\"/discussiontopics/\" + props.id} className=\"button is-small\" >\r\n                <i className=\"fas fa-edit\"></i>\r\n            </Link>\r\n\r\n            <Link to={\"/discussiontopics/\" + props.id + \"/action\"} className=\"button is-primary is-small\" >\r\n                <i className=\"fas fa-location-arrow\"></i>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionTopicsList));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport { getDiffDaysToNow } from '../../../utils/DateUtil';\r\nimport MeetingNoteSerivce from './../../../services/MeetingNoteSerivce';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass MeetingNoteList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Notulensi\", \"notes\");\r\n        this.state = {}\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => { }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.meetingNoteService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Notulensi\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Notulensi</CommonTitle>\r\n                <Card title=\"Daftar Notulensi\">\r\n                    <LinkToFormCreate to=\"meetingnote/create\">Tambah Notulensi</LinkToFormCreate>\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table style={{}} className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'place', alias: \"Tempat\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'user', alias: \"Notulis\", withFilter: true },\r\n                                        { text: 'discussion_topics_count', alias:\"Topik\", withFilter:true},\r\n                                        { text: 'discussion_topics_closed_count', alias:\"closed\", withFilter:true},\r\n                                        { text: 'action', },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record-meeting-note-\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.place}</td>\r\n                                            <td>{item.departement ? item.departement.name : \"-\"}</td>\r\n                                            <td>{item.user ? item.user.name : \"-\"}</td>\r\n                                            <td>\r\n                                                {item.discussion_topics_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.discussion_topics_closed_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkEditPage id={item.id} />\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkToFormCreate = (props) => {\r\n    return (\r\n        <Link to={props.to} className=\"button is-primary\" style={{ marginBottom: '10px' }}>\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-plus\"></i>\r\n            </span>\r\n            <span>{props.children}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst LinkEditPage = (props) => {\r\n    return (\r\n        <Link to={\"/meetingnote/\" + props.id} className=\"button is-small\" >\r\n            <i className=\"fas fa-edit\"></i>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteList));","import React, { Component } from 'react';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Not Found\";\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/* <CommonTitle>404 Not Found</CommonTitle> */}\r\n                <article class=\"message is-warning\">\r\n                    <div class=\"message-header\">\r\n                        <p>404 Not Found</p>\r\n                        <button class=\"delete\" aria-label=\"delete\"></button>\r\n                    </div>\r\n                    <div class=\"message-body\">\r\n                        Halaman tidak ditemukan\r\n  </div>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport { InputField, SubmitResetButton } from '../../forms/commons';\r\nimport { issue_sources } from './IssuesForm';\r\nimport { SelectField } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nconst ADDITION = \"+\";\r\nconst SUBSTRACTION = \"-\";\r\nclass IssueFormPublic extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            captchaUpdate: new Date(),\r\n            recordSave: false,\r\n        }\r\n        this.issueService = IssuesService.instance;\r\n        this.departementList = [];\r\n        this.captcha = {\r\n            firstNumber: 1,\r\n            secordNumber: 2,\r\n            operator: ADDITION,\r\n            updatedAt: new Date()\r\n        };\r\n\r\n        this.resetCaptcha = () => {\r\n            this.captcha.firstNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.secordNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.operator = this.captcha.firstNumber % 2 == 0 ? ADDITION : SUBSTRACTION;\r\n            this.captcha.updatedAt = new Date();\r\n            this.setState({ captchaUpdate: this.captcha.updatedAt });\r\n        }\r\n\r\n        this.validateCaptcha = (value) => {\r\n            const number1 = this.captcha.firstNumber;\r\n            const number2 = this.captcha.secordNumber;\r\n            if (this.captcha.operator == ADDITION) {\r\n                return number1 + number2 == value;\r\n            } else if (this.captcha.operator == SUBSTRACTION) {\r\n                return number1 - number2 == value;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const capchaResult = document.getElementsByName(\"captcha_result\")[0].value;\r\n            const captchaValidated = this.validateCaptcha(capchaResult);\r\n            const app = this;\r\n            if (!captchaValidated) {\r\n\r\n                this.showError(\"Invalid Captcha\");\r\n                return;\r\n            }\r\n            this.showConfirmation(\"Submit Data?\").then(function (ok) {\r\n                if (ok) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const issue = {};\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                issue[element.name] = element.value\r\n            }\r\n            console.debug(\"Issue: \", issue);\r\n            this.storeIssue(issue);\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList = response.result_list;\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n        this.departementListNotLoaded = (error) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Error loading data.. please try or reload the page\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.loadDepartements();\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.resetCaptcha();\r\n            this.setState({ recordSaved: true });\r\n        }\r\n\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"Gagal menyimpan aduan: \" + e + \" Silakan muat ulang halaman dan coba lagi\");\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n\r\n                this.commonAjax(\r\n                    this.issueService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    this.departementListNotLoaded\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.storeIssue = (issue) => {\r\n            this.commonAjax(\r\n                this.issueService.storePublicIssue, issue,\r\n                this.recordSaved,\r\n                this.recordFailedToSave\r\n            );\r\n        }\r\n\r\n        this.showForm = () => {\r\n            this.setState({ recordSaved: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Aduan Publik\";\r\n        this.loadDepartements();\r\n        this.resetCaptcha();\r\n    }\r\n\r\n    componentDidUpdate() { }\r\n\r\n    render() {\r\n        const title = this.title(\"Form Aduan Publik\");\r\n        if (this.state.recordSaved == true) {\r\n\r\n            return (\r\n                <div>\r\n                    {title}\r\n                    <div className=\"box has-text-success\" style={{ textAlign: 'center', margin: '10px' }}>\r\n                        <span className=\"icon\" style={{ fontSize: '4em', marginTop: '30px' }}><i className=\"fas fa-check\" /></span>\r\n                        <h2>Terimakasih. Aduan Anda berhasil disimpan!</h2>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-right\" onClick={this.showForm} >Kirim Tanggapan Lain</AnchorWithIcon>\r\n                    </div>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                {title}\r\n                <Card title=\"Form\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <InputField name=\"date\" label=\"tanggal\" type=\"date\" required={true} />\r\n\r\n                        <InputField name=\"place\" label=\"tempat\" required={true} />\r\n                        <InputField name=\"content\" label=\"permasalahan\" type=\"textarea\" required={true} />\r\n                        <InputField name=\"email\" type=\"email\" note=\"Kosongkan jika berstatus anonim\" />\r\n                        <SelectField label=\"pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"bidang\" options={this.departementList.map(item => {\r\n                            return {\r\n                                value: item.id,\r\n                                text: item.name\r\n                            }\r\n                        })} name=\"departement_id\" required={true} />\r\n\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label\"></div>\r\n                            <div className=\"field-body\">\r\n                                <CaptCha reset={this.resetCaptcha} captcha={this.captcha} />\r\n                            </div>\r\n                        </div>\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass CaptCha extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas_id = \"captcha_canvas_\" + new Date().getTime();\r\n    }\r\n    getCaptchaText() {\r\n        const captcha = this.props.captcha;\r\n        const text = captcha.firstNumber + \" \" + captcha.operator + \" \" + captcha.secordNumber;\r\n        return text;\r\n    }\r\n    drawCanvas() {\r\n        const canvas = document.getElementById(this.canvas_id);\r\n        const context = canvas.getContext('2d');\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.fillStyle = '#000';\r\n        context.font = '70px Arial';\r\n        context.fillText(this.getCaptchaText(), 10, 50);\r\n    }\r\n    componentDidUpdate() {\r\n        this.drawCanvas();\r\n    }\r\n    componentDidMount() {\r\n        this.drawCanvas();\r\n    }\r\n    render() {\r\n        const captcha = this.props.captcha;\r\n        return (\r\n\r\n            <article style={{ width: '100%' }} className=\"message \">\r\n                <div className=\"message-header has-background-grey-lighter\">\r\n                    <p className=\"has-text-dark\">Captcha</p>\r\n                    <a onClick={this.props.reset} className=\"button\"><i className=\"fas fa-sync\" /></a>\r\n                </div>\r\n                <div className=\"message-body has-background-light\">\r\n                    <canvas id={this.canvas_id} className=\"has-background-light\" style={{ width: '100px', height: 'auto' }} />\r\n                    <input className=\"input\" name=\"captcha_result\" required />\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssueFormPublic));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/dashboard/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport Profile from '../pages/Profile';\r\nimport IssuesList from '../pages/issues/IssuesList';\r\nimport IssuesForm from '../pages/issues/IssuesForm';\r\nimport IssuesFollowingUpForm from '../pages/issues/IssuesFollowingUpForm';\r\nimport DiscussionActionForm from '../pages/discussiontopics/DiscussionActionForm';\r\nimport DiscussionTopicsForm from '../pages/discussiontopics/DiscussionTopicsForm';\r\nimport DiscussionTopicsList from '../pages/discussiontopics/DiscussionTopicsList';\r\nimport MeetingNoteList from '../pages/meetingnotes/MeetingNoteList';\r\nimport NotFound from './../pages/errors/NotFound';\r\nimport IssueFormPublic from './../pages/issues/IssueFormPublic';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          {/* ========= meeting notes ========= */}\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote\" render={\r\n            (props) =>\r\n              <MeetingNoteList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          {/* ======== issues ========= */}\r\n          <Route exact path=\"/issues\" render={\r\n            (props) =>\r\n              <IssuesList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/create\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues-public\" render={\r\n            (props) => <IssueFormPublic app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id/followup\" render={\r\n            (props) =>\r\n              <IssuesFollowingUpForm app={this.props.app} />\r\n          } />\r\n          {/* ======== discussiontopics ========= */}\r\n          <Route exact path=\"/discussiontopics\" render={\r\n            (props) =>\r\n              <DiscussionTopicsList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id/action\" render={\r\n            (props) =>\r\n              <DiscussionActionForm app={this.props.app} />\r\n          } />\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* ============== users management ============= */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* ================ departements management ============= */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n\r\n          {/* ////////////404///////////////// */}\r\n          <Route path=\"\" component={NotFound} />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      // <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000, color: '#ccc'}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\nclass SideBar extends BaseMenus {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <aside className=\"menu\">\r\n                    {MENUS.map((menu, i) => {\r\n                        const childs = this.extractChildren(menu.children);\r\n                        if (childs == null || childs.length == 0) { return null; }\r\n                        const isMenuListShown = this.isMenuListShown(menu.name);\r\n                        const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                        return (\r\n                            <React.Fragment key={\"menu_\" + menu.name}>\r\n                                <p key={menu.name} menu-name={menu.name} onClick={this.toggleMenuList} className=\"menu-label\">\r\n                                    <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                    {menu.name}\r\n                                </p>\r\n                                {isMenuListShown ?\r\n                                    <ul className=\"menu-list\">\r\n                                        {childs.map((menuChild, j) => {\r\n                                            return (<li key={\"sidebar-menu-child-\" + i + \"-\" + j}>\r\n                                                <Link to={menuChild.link}>\r\n                                                    <span className=\"icon\">\r\n                                                        <i className={menuChild.iconClassName ? menuChild.iconClassName : \"fas fa-folder\"} />\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        {menuChild.name}\r\n                                                    </span>\r\n                                                </Link>\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>\r\n                                    : null}\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))\r\n\r\n","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actions/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nimport SideBar from './components/layout/SideBar';\nimport './components/layout/SideBar.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      \n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert\n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section style={{ minHeight: '70vh' }}>\n          <div >\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\" style={{ minHeight: '70vh', marginBottom: '1px' }}>\n            <div style={{ paddingTop: '20px', paddingLeft: '20px', borderRight:'solid 2px #ccc' }}\n              className=\"menu-container column is-one-fifth has-background-water-ter\">\n              \n                <SideBar app={this} />\n               \n            </div>\n            <div className=\"column is-four-fifths\">\n\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    requestId: state.userState.requestId,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n    applicationData: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    const result = state;\r\n    switch (action.type) {\r\n        case types.STORE_APPLICTION_DATA:\r\n            const key = action.payload.key;\r\n            const data = action.payload.data;\r\n           \r\n            result.applicationData[key] = data\r\n\r\n            return result;\r\n        case types.REMOVE_APPLICTION_DATA:\r\n            \r\n            delete result[action.payload.key];\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as applicationReducer from \"./applicationReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        applicationState: applicationReducer.reducer,\r\n        \r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    applicationState: applicationReducer.initState,\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            }).catch((error)=>{\r\n                alert(\"Error requesting application: \"+error+\". Try to reload the page\");\r\n            });\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as types from '../redux/types'\r\n\r\n\r\nexport const storeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_APPLICTION_DATA) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nexport const removeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_APPLICTION_DATA) {\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport { storeApplicationData } from './../middlewares/ApplicationMiddleware';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            storeApplicationData\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}