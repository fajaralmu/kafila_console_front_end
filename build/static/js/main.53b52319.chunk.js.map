{"version":3,"sources":["logo.svg","constant/Url.js","redux/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/BaseMenus.js","components/layout/SideBar.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","utils/StringUtil.js","components/forms/commons.js","components/buttons/NavButtons.js","components/container/Card.js","utils/DateUtil.js","components/pages/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","middlewares/Common.js","services/Promises.js","services/MasterDataService.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/messages/Alert.js","services/DiscussionTopicsService.js","components/pages/meetingnotes/MeetingNoteForm.js","services/UserService.js","components/pages/Profile.js","services/IssuesService.js","components/pages/issues/IssuesList.js","components/pages/issues/IssuesForm.js","components/pages/issues/IssuesFollowingUpForm.js","components/pages/discussiontopics/DiscussionTopicsForm.js","components/pages/discussiontopics/DiscussionActionForm.js","components/pages/discussiontopics/DiscussionTopicsList.js","components/pages/meetingnotes/MeetingNoteList.js","components/layout/Content.js","components/widget/Loader.js","App.js","redux/userReducer.js","redux/managementReducer.js","redux/meetingNotesReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/CatalogMiddleware.js","middlewares/MeetingNoteMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","apiNotes","accountAction","app","startLoading","type","payload","meta","email","password","user","meetingNotesAction","request","filter","fieldsFilter","console","debug","limit","page","orderBy","orderType","Footer","className","href","Component","BaseComponent","props","authenticated","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","getLoggedUser","getLoggedUserDepartementName","isLoggedUserNull","departement","name","showConfirmation","body","Promise","resolve","reject","showAlert","e","showConfirmationDanger","showAlertError","showInfo","showError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","warn","commonAjax","commonAjaxWithProgress","this","CommonTitle","style","textAlign","marginLeft","children","BaseMenus","state","shownMenuList","id","setState","hideMenuList","isMenuListShown","toggleMenuList","menuName","target","getAttribute","menuChildren","i","length","element","role","MENUS","link","SideBar","map","menu","childs","extractChildren","iconClassName","Fragment","key","menu-name","onClick","marginRight","menuChild","j","to","withRouter","connect","userState","menus","requestId","applicationProfile","dispatch","Header","showBurger","toggleNavBurger","performLogout","accepted","backgroundColor","src","width","height","linkProperty","display_name","AppLink","actions","Message","show","hide","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","Date","handleSubmit","event","preventDefault","form","FormData","elements","performLogin","showLoginInfo","loginFailed","current","title","ref","marginTop","onSubmit","nam","placeholder","required","TableHeadWithFilter","headers","onButtonOrderClick","alias","string","toReplace","replacement","String","split","join","error","replaceString","text","toUpperCase","withFilter","fontSize","sort","data","InputFormFilter","ButtonApplyResetFilter","InputField","orientation","label","note","SelectField","options","option","LabelField","SubmitResetButton","submitValue","submitText","withReset","NavButtons","index","buttonValues","generateButtonValues","totalData","activeIndex","buttonsData","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","headerIconClassName","iconOnClick","headerIconOnClick","margin","withButtonFooter","footerContent","HeaderIcon","aria-hidden","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","getDiffDaysToNow","date","getTime","Dashboard","meetingNoteData","meetingNoteState","getMeetingNotes","BaseAdminPage","ManagementMenu","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","post","code","MasterManagementService","setUsersData","usersData","storeUser","userModel","storeIssue","issue","viewUser","userList","list","viewIssue","issueList","storeDepartement","viewDepartement","deleteRecord","departementList","departementsData","instance","BaseManagementPage","loadRecords","readInputForm","inputs","getElementsByClassName","masterDataServce","count","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","buttonsModifyAndDelete","editLink","buttonDeleteRecord","withText","Columns","cells","cell","UsersManahement","masterDataService","showForm","populateDefaultInputs","hasOwnProperty","navButtons","createNavButton","recordList","result_list","formComponent","overflow","item","indexBegin","DeparementManagement","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","match","departementListLoaded","loadRecord","recordSaved","handleSuccessGetRecord","recordFailedToSave","loadDepartements","departement_id","handleErrorGetRecord","formTitle","dep","DepartementManagementForm","MeetingNoteSerivce","meetingNote","meeting_note","view","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","ModalBackdrop","DiscussionTopicsService","discussionTopic","discussion_topic","storeAction","action","discussion_action","FORM_ID","TOPIC_PREFIX","MeetingNoteForm","discussionTopicCount","showFormDiscussionTopicInEditMode","discussionTopicService","form_temporary_inputs","discussion_topics","isSubmitting","meetingNoteService","getMaxDiscussionTopicID","addDiscussionTopic","saveFormTemporaryInputs","isDiscussionTopicClosed","is_closed","removeDiscussionTopic","ok","doRemoveDiscussionTopic","splice","setFormTemporaryInputs","setAttribute","fillDataAndStore","onSubmitDiscussionTopic","window","confirm","note_id","storeDiscussionTopic","currentDiscussionTopicID","currentDiscussionTopicIndex","elementName","startsWith","indexAndName","extractTopicDiscussionIndexAndName","storeMeetingNote","handleErrorSubmit","discussionTopics","enableInputs","removeAttribute","reset","discussionTopicSaved","alert","handleErrorSubmitDiscussionTopic","isClosed","FormAddDiscussionTopic","result","elementNameSplitIndex","parseInt","ButtonRemoveTopic","DiscussionTopicStatusInfo","closed","border","ButtonAddTopic","LinkEditAndAction","FormUpperTag","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","IssuesService","followUpIssue","followUp","followed_up_issue","IssuesList","issueService","isAdmin","place","content","issuer","issue_input","issue_sources","IssuesForm","source","IssuesFollowingUpForm","showDetailIssue","hideDetailIssue","issue_id","handleSuccessSubmit","follow_up","DiscussionTopicsForm","LinkDetailMeetingNote","DiscussionActionForm","showDetailDiscussionTopic","discussionTopicSerivce","topic_id","decision","deadline_date","person_in_charge","DiscussionTopicsList","deadlineDate","parse","diffDay","MeetingNoteList","calculateClosedTopic","LinkEditPage","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","Home","Loader","opacity","position","zIndex","color","App","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","refresh","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","refreshLogin","additionalMenus","Array","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","paddingTop","paddingLeft","initState","loginKey","loginAttempt","reducer","api_token","entitiesData","entityConfig","managedEntity","entityProperty","managementMenus","entities","generalList","rootReducer","combineReducers","userReducer","managementState","managementReducer","meetingNotesReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","Object","assign","err","param","requestAppIdMiddleware","message","get","refreshLoginStatusMiddleware","performLogoutMiddleware","logoutSuccess","removeEntityMiddleware","updateCartMiddleware","getMeetingNotesMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","meetingNoteMiddleware","Root","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53b52319.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n \r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n} \r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n} \r\n  \r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const meetingNotesAction = {\r\n    store: (meetingNote, app) => {\r\n        app.startLoading();\r\n        let requested = {\r\n            type: types.STORE_MEETING_NOTES,\r\n            payload: {\r\n                meeting_note:meetingNote    \r\n            },\r\n            meta: {\r\n                type: types.STORE_MEETING_NOTES,\r\n                url: apiNotes.concat(\"store\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    list : (request, app) => {\r\n        app.startLoading();\r\n        \r\n        const filter =  request.fieldsFilter;\r\n        console.debug(\"request.fieldsFilter: \", filter);\r\n        let requested = {\r\n            type: types.GET_MEETING_NOTES,\r\n            payload: {\r\n                filter: {\r\n                    limit: request.limit,\r\n                    page: request.page,\r\n                    fieldsFilter: filter,\r\n                    orderBy: request.orderBy,\r\n                    orderType: request.orderType,\r\n                },\r\n            },\r\n            meta: {\r\n                type: types.GET_MEETING_NOTES,\r\n                url: apiNotes.concat(\"list\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    }\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const GET_MEETING_NOTES = \"GET_MEETING_NOTES\";\r\nexport const STORE_MEETING_NOTES = \"GET_MEETING_NOTES\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">Kafila International Islamic School</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import  React , {Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return true;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.getLoggedUser = () => {\r\n            return this.props.loggedUser;\r\n        }\r\n        this.getLoggedUserDepartementName = () => {\r\n            if (this.isLoggedUserNull()) return null;\r\n            return this.getLoggedUser().departement.name;\r\n        }\r\n        this.isLoggedUserNull = () => {\r\n            return false == this.props.loginStatus || null == this.props.loggedUser;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showConfirmationDanger = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n\r\nexport const CommonTitle = (props) => {\r\n    return <h2 style={{ textAlign: 'left', marginLeft:'10px' }}>{props.children}</h2>\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nexport default class BaseMenus extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            shownMenuList: {}\r\n        }\r\n\r\n        this.shownMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = true;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.hideMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = false;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.isMenuListShown = (id) => {\r\n            return this.state.shownMenuList[id] == true;\r\n        }\r\n        this.toggleMenuList = (e) => {\r\n            const menuName = e.target.getAttribute(\"menu-name\");\r\n            if (this.isMenuListShown(menuName)) {\r\n                this.hideMenuList(menuName);\r\n            } else {\r\n                this.shownMenuList(menuName);\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    extractChildren(menuChildren) {\r\n        const children = [];\r\n        for (let i = 0; i < menuChildren.length; i++) {\r\n            const element = menuChildren[i];\r\n            if (element.authenticated && this.isLoggedUserNull()) {\r\n                continue;\r\n            }\r\n            if (this.isLoggedUserNull() == false && element.role != null && this.getLoggedUser().role != element.role) {\r\n                continue;\r\n            }\r\n            children.push(element);\r\n        }\r\n\r\n        return children;\r\n    }\r\n    \r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nimport BaseMenus from './BaseMenus';\r\n\r\nexport const MENUS = [\r\n    {\r\n        name: 'Umum',\r\n        children: [\r\n            {\r\n                name: 'Home',\r\n                link: '/home'\r\n            }, {\r\n                name: 'Dashboard',\r\n                link: '/dashboard',\r\n                authenticated: true,\r\n            }]\r\n    }, {\r\n        name: 'Notulensi',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/meetingnote',\r\n            authenticated: true,\r\n        },{\r\n            name: 'Tambah Notulensi',\r\n            link: '/meetingnote/create',\r\n            authenticated: true,\r\n        }]\r\n    }, {\r\n        name: 'Aduan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/issues',\r\n            authenticated: true,\r\n        },\r\n        {\r\n            name: 'Tambah',\r\n            link: '/issues/create',\r\n            authenticated: true,\r\n            role: 'admin'\r\n        }]\r\n    }, {\r\n        name: 'Tema Pembahasan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/discussiontopics',\r\n            authenticated: true,\r\n        }]\r\n    }, {\r\n        name: 'Master Data',\r\n        children: [\r\n            {\r\n                name: 'Menu',\r\n                link: '/management',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            },\r\n            {\r\n                name: 'User',\r\n                link: '/management/users',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            }, {\r\n                name: 'Bidang',\r\n                link: '/management/departements',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            }]\r\n    }\r\n]\r\n\r\nclass SideBar extends BaseMenus {\r\n    constructor(props) {\r\n        super(props); \r\n        \r\n    } \r\n\r\n    render() {\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div  >\r\n                <aside className=\"menu\">\r\n                    {MENUS.map((menu, i) => {\r\n                        const childs = this.extractChildren(menu.children);\r\n                        if (childs == null || childs.length == 0) { return null; }\r\n                        const isMenuListShown = this.isMenuListShown(menu.name);\r\n                        const iconClassName  = isMenuListShown?\"fas fa-angle-up\":\"fas fa-angle-down\";\r\n\r\n                        return (\r\n                            <React.Fragment key={\"menu_\"+menu.name}>\r\n                                <p key={menu.name} menu-name={menu.name} onClick={this.toggleMenuList} className=\"menu-label\"> \r\n                                    <i style={{marginRight:'10px'}} className={iconClassName}    />                         \r\n                                    {menu.name}\r\n                                </p>\r\n                                {isMenuListShown ?\r\n                                    <ul className=\"menu-list\">\r\n                                        {childs.map((menuChild, j) => {\r\n                                            return (<li key={\"sidebar-menu-child-\"+i+\"-\"+j}>\r\n                                                <Link to={menuChild.link}>\r\n                                                    {menuChild.name}\r\n                                                </Link>\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>\r\n                                    :null}\r\n                           </React.Fragment>\r\n                        )\r\n                    })}\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n        menus: state.userState.menus,\r\n        requestId: state.userState.requestId,\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from './../BaseComponent';\r\nimport './SideBar.css'\r\nimport { MENUS } from './SideBar';\r\nimport BaseMenus from './BaseMenus';\r\n\r\n\r\nclass Header extends BaseMenus {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            showBurger: false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({ showBurger: !this.state.showBurger })\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    } \r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link style={{ backgroundColor: '#fff' }} className=\"navbar-item\" to=\"/\">\r\n                            <img src=\"kiis-stroke.png\" width=\"38\" height=\"38\" />\r\n                        </Link>\r\n                        <div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"topNav\" className={this.state.showBurger ? \"is-active navbar-menu\" : \" navbar-menu\"}>\r\n                        <div className=\"navbar-start\">\r\n                            {MENUS.map((menu, i) => {\r\n                                const childs = this.extractChildren(menu.children);\r\n                                if (childs == null || childs.length == 0) { return null; }\r\n                                const isMenuListShown = this.isMenuListShown(menu.name);\r\n                                const iconClassName  = isMenuListShown?\"fas fa-angle-up\":\"fas fa-angle-down\";\r\n\r\n                                return (\r\n                                    <React.Fragment key={\"NavMenu_\"+menu.name}>\r\n                                        <p style={{ marginLeft: '10px' }} onClick={this.toggleMenuList} menu-name={menu.name} className=\"menu-label\"> \r\n                                        <i style={{marginRight:'10px'}} className={iconClassName}    />  \r\n                                        {menu.name}  </p>\r\n                                        {isMenuListShown ?\r\n                                        <ul className=\"menu-list\">\r\n                                            {childs.map((linkProperty, j) => {\r\n                                                return <AppLink key={\"header-link-\" + j +\"-\"+i} loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                                            })}\r\n                                        </ul>: null}\r\n                                    </React.Fragment>)\r\n                            })}\r\n                        </div>\r\n                        <div className=\"navbar-end\">\r\n                            <div className=\"navbar-item\">\r\n                                <div className=\"buttons has-addons\">\r\n\r\n                                    {this.props.loginStatus ?\r\n                                        <><Link className=\"button is-info\" to=\"/profile\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                        </Link>\r\n                                            <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                                <span className=\"icon\">\r\n                                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                                </span>\r\n                                                <span>Logout</span>\r\n                                            </a>\r\n                                        </> :\r\n                                        <Link className=\"button is-info\" to=\"/login\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>Login</span>\r\n                                        </Link>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    if (null == linkProperty.link) {\r\n        return null;\r\n    }\r\n\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if (linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >{linkProperty.name}</Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n        menus: state.userState.menus,\r\n        requestId: state.userState.requestId,\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header))\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            this.setState({show:false});\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport const replaceString = (string, toReplace, replacement) => {\r\n\ttry {\r\n\t\tconst splitted = new String(string).split(toReplace);\r\n\t\treturn splitted.join(replacement);\r\n\t} catch (error) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n \r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst rawVal = parseInt(val);\r\n\tlet nominal =  Math.abs(val).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif(rawVal < 0){\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\nimport { replaceString } from '../../utils/StringUtil';\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                \r\n                return <th key={\"TH_\"+i}>{header.alias == null ?replaceString(header.text.toUpperCase(), \"_\", \" \") : header.alias}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field \"+props.className;\r\n    const orientation = props.orientation?props.orientation:\"horizontal\";\r\n    return (\r\n        <div className={\"field is-\"+orientation}>\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{props.label ? props.label : \"Input\"}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option, i) => {\r\n        return <option key={\"select-option-\"+i} value={option.value} >{option.text}</option>\r\n    })\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Select\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className=\"button is-link\" type=\"submit\" style={{marginRight:'10px'}} >\r\n                        <span className=\"icon\"><i className=\"fas fa-save\"></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const iconClassName = this.props.headerIconClassName;\r\n        const iconOnClick = this.props.headerIconOnClick;\r\n\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style }}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    {null == iconClassName ? null : <HeaderIcon className={iconClassName} onClick={iconOnClick} /> }\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst HeaderIcon = (props) => {\r\n    return (\r\n        <a className=\"card-header-icon\" aria-label=\"more options\" onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={props.className} aria-hidden=\"true\"></i>\r\n            </span>\r\n        </a>\r\n    );\r\n}","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as formComponent from '../forms/commons';\r\nimport NavButtons from './../buttons/NavButtons';\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport Card from '../container/Card';\r\nimport { getDiffDaysToNow } from './../../utils/DateUtil';\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        // if (null == this.props.meetingNoteData) {\r\n        //     this.getMeetingNotes();\r\n        document.title = \"Dashboard\";\r\n        // this.populateDefaultInputs();\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Dashboard</CommonTitle>\r\n                <Card title=\"Welcome\" >\r\n                    <p>{this.getLoggedUser().display_name}</p>\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        meetingNoteData: state.meetingNoteState.meetingNoteData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.isLoggedUserNull() ||\r\n        this.props.loggedUser.role != 'admin'\r\n        ) {\r\n        this.backToLogin();\r\n    }\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Master Data Menu</CommonTitle>\r\n                <Card title=\"Menu\">\r\n                        <div  className=\"columns\">\r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                    <p><i style={{fontSize:'50px'}} className=\"fas fa-puzzle-piece\"></i></p>\r\n                                    <Link to=\"/management/departements\">Departements</Link>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                <p><i style={{fontSize:'50px'}} className=\"fas fa-users\"></i></p>\r\n                                    <Link to=\"/management/users\">Users</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(ManagementMenu);","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    storeIssue = (issue) => {\r\n        const request = {\r\n            code: 'issue',\r\n            issue:issue\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    viewIssue = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"issue\"});\r\n    }\r\n\r\n    issueList = (filter) => {\r\n        return this.list({\r\n            code: 'issue',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n            console.error(\"Error loading resource: \", e);\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmation(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        <span>Edit</span>\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink)}\r\n                    {this.buttonDeleteRecord(id)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id, withText = true) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    {withText?\r\n                    <span>Delete</span>\r\n                    :null}\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n        \r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Departement Management</CommonTitle>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'name', withFilter: true },\r\n                                    { text: 'description', withFilter: true },\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/departements/\"+item.id,\r\n                                            item.id)}    \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/users/\"+response.user.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/departements/\"+response.departement.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n               <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'notes',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/notes/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <ModalBackdrop>\r\n                    <form onSubmit=\"return false;\">\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly||this.props.isError?\"button\" : \"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </ModalBackdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport const ModalBackdrop = (props) => {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\n\r\nexport default class DiscussionTopicsService\r\n{\r\n    static instance = DiscussionTopicsService.instance || new DiscussionTopicsService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    store = (discussionTopic) => {\r\n\r\n        const request = {\r\n            discussion_topic: discussionTopic\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'discussion_topic',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    // delete = (id) => {\r\n    //     const endpoint = contextPath().concat(\"api/discussiontopics/delete/\"+id);\r\n    //     return commonAjaxPostCalls(endpoint, {});\r\n    // }\r\n    storeAction = (action) => {\r\n        const request = {\r\n            discussion_action: action\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/action\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { ModalBackdrop } from './../../messages/Alert';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nconst TOPIC_PREFIX = \"discussion_topic_\";\r\nconst CLASS_INPUT_FIELD = \"input-form-field\";\r\n\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            discussionTopicCount: [1],\r\n            showFormDiscussionTopicInEditMode: false\r\n        }\r\n\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.form_temporary_inputs = {};\r\n        this.meetingNote = { discussion_topics: [] };\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.getMaxDiscussionTopicID = () => {\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let max = 0;\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element > max) {\r\n                    max = element;\r\n                }\r\n            }\r\n            return max;\r\n        }\r\n\r\n        this.addDiscussionTopic = () => {\r\n\r\n            if (this.getRecordId() != null && null != this.meetingNote) {\r\n                this.setState({ showFormDiscussionTopicInEditMode: true });\r\n                return;\r\n            }\r\n\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            this.saveFormTemporaryInputs();\r\n            discussionTopicCount.push(this.getMaxDiscussionTopicID() + 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n\r\n        }\r\n\r\n        this.isDiscussionTopicClosed = (id) => {\r\n\r\n\r\n            if (null == this.meetingNote || null == this.meetingNote.discussion_topics) {\r\n                return;\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const element = this.meetingNote.discussion_topics[i];\r\n                if (element.id == id && element.is_closed) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.removeDiscussionTopic = (id) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Remove discussion topic (\" + id + \")? \")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.doRemoveDiscussionTopic(id);\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.doRemoveDiscussionTopic = (id) => {\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let index = null;\r\n\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element == id) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if (null == index) {\r\n                return;\r\n            }\r\n\r\n            this.saveFormTemporaryInputs();\r\n            discussionTopicCount.splice(index, 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n            this.setFormTemporaryInputs();\r\n\r\n        }\r\n        this.setFormTemporaryInputs = () => {\r\n            console.debug(\"setTempDiscussionTopicValues\");\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != this.form_temporary_inputs[element.name]) {\r\n                    element.value = this.form_temporary_inputs[element.name];\r\n                } else {\r\n                    element.value = null;\r\n                }\r\n\r\n                if (this.getRecordId() != null) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n        this.saveFormTemporaryInputs = () => {\r\n            this.form_temporary_inputs = {};\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.value == null || element.value == \"\") {\r\n                    continue;\r\n                }\r\n                this.form_temporary_inputs[element.name] = element.value;\r\n            }\r\n            console.debug(\"TEMP: \", this.form_temporary_inputs);\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (this.getRecordId() != null) {\r\n                return;\r\n            }\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });\r\n        }\r\n\r\n        this.onSubmitDiscussionTopic = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n\r\n            if (!window.confirm(\"Submit Data?\") || null == this.meetingNote) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            const discussionTopic = {\r\n                note_id: this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                discussionTopic[element.name] = element.value;\r\n            }\r\n            console.debug(\"SUBMIT:\", discussionTopic);\r\n            this.storeDiscussionTopic(discussionTopic);\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n\r\n            this.meetingNote = {\r\n                discussion_topics: []\r\n            };\r\n            let currentDiscussionTopicID = -1;\r\n            let currentDiscussionTopicIndex = -1;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                const elementName = element.name;\r\n                if (null == element.value || \"\" == element.value) {\r\n                    continue;\r\n                }\r\n                if (elementName.startsWith(TOPIC_PREFIX)) {\r\n                    const indexAndName = extractTopicDiscussionIndexAndName(elementName);\r\n                    if (indexAndName.index != currentDiscussionTopicID) {\r\n                        this.meetingNote.discussion_topics.push({});\r\n                        currentDiscussionTopicID = indexAndName.index;\r\n                        currentDiscussionTopicIndex++;\r\n                    }\r\n                    this.meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name] = element.value;\r\n                } else {\r\n                    this.meetingNote[elementName] = element.value;\r\n                }\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"inputs size:\", inputs.length, \"meetingNote>>\", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    this.handleSuccessGetRecord(response);\r\n                    this.props.history.push(\"/meetingnote/\" + response.meeting_note.id);\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            const discussionTopics = this.meetingNote.discussion_topics;\r\n            let discussionTopicCount = [];\r\n            for (let i = 0; i < discussionTopics.length; i++) {\r\n                const element = discussionTopics[i];\r\n                discussionTopicCount.push(element.id);\r\n            }\r\n            this.setState({ discussionTopicCount: discussionTopicCount, isLoadingRecord: false });\r\n            this.form_temporary_inputs = {};\r\n\r\n            for (const key in this.meetingNote) {\r\n                if (this.meetingNote.hasOwnProperty(key)) {\r\n                    const element = this.meetingNote[key];\r\n                    if (key == (\"discussion_topics\")) {\r\n                        continue;\r\n                    }\r\n                    this.form_temporary_inputs[key] = element;\r\n                }\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const discussion_topic = this.meetingNote.discussion_topics[i];\r\n                for (const key in discussion_topic) {\r\n                    if (discussion_topic.hasOwnProperty(key)) {\r\n                        const element = discussion_topic[key];\r\n                        this.form_temporary_inputs[TOPIC_PREFIX + discussion_topic.id + \"_\" + key] = element;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        this.discussionTopicSaved = (response) => {\r\n            alert(\"SUCCESSS\");\r\n            this.setState({ showFormDiscussionTopicInEditMode: false });\r\n            this.loadRecord();\r\n\r\n        }\r\n        this.handleErrorSubmitDiscussionTopic = (e) => {\r\n            alert(\"Error Update Discussion Topic: \" + e);\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeDiscussionTopic = (discussionTopic) => {\r\n            this.commonAjax(this.discussionTopicService.store, discussionTopic,\r\n                this.discussionTopicSaved, this.handleErrorSubmitDiscussionTopic);\r\n        }\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.recordSaved, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Notulensi\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n\r\n        if (this.getRecordId() == null && this.meetingNote != null) {\r\n            this.meetingNote = null;\r\n            this.form_temporary_inputs = {};\r\n            this.setState({ discussionTopicCount: [1] });\r\n        }\r\n        this.setFormTemporaryInputs();\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <CommonTitle>Notulensi Rapat {this.getRecordId() == null ?\r\n                    \"Bidang \" + this.getLoggedUserDepartementName() : null}</CommonTitle>\r\n                {this.state.showFormDiscussionTopicInEditMode ?\r\n                    <FormAddDiscussionTopic onSubmit={this.onSubmitDiscussionTopic}\r\n                        onClose={(e) => this.setState({ showFormDiscussionTopicInEditMode: false })}\r\n                    /> : null\r\n                }\r\n                <form id={FORM_ID} onSubmit={this.onSubmit} style={{ marginTop: '20px' }}>\r\n                    <Card title=\"Formulir Notulensi\">\r\n                        {this.getRecordId() != null && this.meetingNote != null ?\r\n                            <FormUpperTag meetingNote={this.meetingNote} /> : null}\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n\r\n                    </Card>\r\n                    {/* ---------- discussion topics forms ----------- */}\r\n                    <CommonTitle>Tema Pembahasan ({this.state.discussionTopicCount.length})</CommonTitle>\r\n                    {this.state.discussionTopicCount.map((id, i) => {\r\n                        const isClosed = this.isDiscussionTopicClosed(id);\r\n                        const title = \"Tema Pembahasan #\" + (i + 1);// +\", id:\"+id;\r\n                        return (\r\n                            <Card title={title} key={\"disc_topic_field_\" + i}\r\n                            >\r\n                                {isClosed ?\r\n                                    <span className=\"tag is-primary\"><i className=\"fas fa-check\" />&nbsp;Closed</span> :\r\n                                    null}\r\n                                {this.getRecordId() == null && this.state.discussionTopicCount.length > 1 ?\r\n                                    <ButtonRemoveTopic id={id} removeDiscussionTopic={\r\n                                        this.removeDiscussionTopic} /> : null}\r\n\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={TOPIC_PREFIX + id + \"_content\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={TOPIC_PREFIX + id + \"_decision\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={TOPIC_PREFIX + id + \"_deadline_date\"} type=\"date\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={TOPIC_PREFIX + id + \"_person_in_charge\"} />\r\n\r\n                                {this.getRecordId() != null ? <LinkEditAndAction id={id} /> : null}\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                    <ButtonAddTopic addDiscussionTopic={this.addDiscussionTopic} />\r\n                    {this.getRecordId() == null ?\r\n                        <SubmitResetButton submitText={\"Create\"} withReset={true} />\r\n                        : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormAddDiscussionTopic = (props) => {\r\n    return (\r\n        <ModalBackdrop >\r\n            <div className=\"container\">\r\n                <Card title=\"Tambah Tema Pembahasan\"\r\n                    headerIconClassName=\"fas fa-times\"\r\n                    headerIconOnClick={props.onClose}\r\n                >\r\n                    <form onSubmit={props.onSubmit}>\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={\"content\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={\"decision\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={\"deadline_date\"} type=\"date\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={\"person_in_charge\"} />\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </ModalBackdrop>\r\n    )\r\n}\r\n\r\nconst extractTopicDiscussionIndexAndName = (elementName) => {\r\n    const result = {\r\n        index: 0,\r\n        name: null,\r\n    }\r\n    let elementNameSplitKey = elementName.split(TOPIC_PREFIX);\r\n    let elementNameSplitIndex = elementNameSplitKey[1].split(\"_\");\r\n    result.index = parseInt(elementNameSplitIndex[0]);\r\n    result.name = elementName.split(TOPIC_PREFIX + result.index + \"_\")[1];\r\n    return result;\r\n}\r\n\r\nconst ButtonRemoveTopic = (props) => {\r\n\r\n    return (\r\n        <a className=\"button is-danger is-outlined\" onClick={(e) => props.removeDiscussionTopic(props.id)}>\r\n            <span className=\"icon\"><i className=\"fas fa-times\" /></span>\r\n            <span>Remove</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst DiscussionTopicStatusInfo = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    if (null == meetingNote) return null;\r\n    const discussion_topics = meetingNote.discussion_topics;\r\n    if (null == discussion_topics) return null;\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed) {\r\n            closed++;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table><tbody><tr >\r\n            <td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-medium\">\r\n                    <span className=\"tag is-light\">Closed</span>\r\n                    <span className=\"tag is-info\">{closed}</span>\r\n                </div>\r\n            </td><td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-medium\">\r\n                    <span className=\"tag is-light\">Not Closed</span>\r\n                    <span className=\"tag is-danger\">{discussion_topics.length - closed}</span>\r\n                </div></td>\r\n        </tr></tbody></table>\r\n    )\r\n}\r\n\r\nconst ButtonAddTopic = (props) => {\r\n    return (\r\n        <div className=\"has-text-centered\">\r\n            <a className=\"button is-primary is-outlined\" onClick={props.addDiscussionTopic}\r\n                style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>{\"Tambah Tema Pembahasan\"}</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    const id = props.id;\r\n    return (\r\n        <div className=\"buttons has-addons\">\r\n            <Link to={\"/discussiontopics/\" + id} className=\"button is-warning\">\r\n                <i className=\"fas fa-edit\" />&nbsp;Edit\r\n            </Link>\r\n            <Link to={\"/discussiontopics/\" + id + \"/action\"} className=\"button is-primary\">\r\n                <i className=\"fas fa-location-arrow\" />&nbsp;Konfirmasi\r\n            </Link></div>\r\n    )\r\n}\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\nconst FormUpperTag = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <h3>\r\n                Notulis&nbsp;:&nbsp;\r\n                {meetingNote.user.display_name}\r\n            </h3>\r\n            <div className=\"level\">\r\n                <div className=\"level-left\" >\r\n                    <DiscussionTopicStatusInfo meetingNote={meetingNote} />\r\n                </div>\r\n                <div className=\"level-right\">\r\n                    <span className=\"tag is-primary is-medium\">{meetingNote.departement.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Profile</CommonTitle>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\nexport default class IssuesService\r\n{\r\n    static instance = IssuesService.instance || new IssuesService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'issue',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    delete = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/delete/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    followUpIssue = (followUp) => {\r\n        const request = {\r\n            followed_up_issue: followUp\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/followup\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport Columns from './../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nclass IssuesList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Aduan\", \"issue\");\r\n        this.state = {}\r\n        this.issueService = IssuesService.instance;\r\n\r\n        //overrid\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.issueService.delete,\r\n                id,\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.issueService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Aduan\";\r\n    }\r\n\r\n    //overrid baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.isLoggedUserNull()) {return null;}\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Aduan</CommonTitle>\r\n                <Card title=\"Daftar Aduan\">\r\n                {!isAdmin?null:this.linkToFormCreate(\"/issues/create\", \"Tambah Aduan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'date', withFilter: true },\r\n                                    { text: 'place', withFilter: true },\r\n                                    { text: 'content', withFilter: true },\r\n                                    { text: 'issuer', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'issue_input', withFilter: true },\r\n                                    { text: 'status'},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.content}</td>\r\n                                    <td>{item.issuer}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.issue_input}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {isAdmin?\r\n                                        <>\r\n                                        <Link to={\"/issues/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        {this.buttonDeleteRecord(item.id, false)}\r\n                                        </>\r\n                                        :null}\r\n                                        <Link to={\"/issues/\" + item.id+\"/followup\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesList));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\n\r\nconst issue_sources = [\r\n    'Yayasan', 'Orang Tua', 'Santri', 'Tamu'\r\n]\r\n\r\nclass IssuesForm extends BaseAdminPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const issue = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    issue[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                issue.id = this.getRecordId();\r\n            }\r\n            this.store(issue);\r\n            console.debug(\"ISSUE: \", issue);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/issues/\"+response.issue.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (issue) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeIssue, issue,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.issue.departement_id;\r\n                } else {\r\n                    element.value = response.issue[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewIssue, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadDepartements();\r\n        document.title = \"Form Aduan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Aduan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Tanggal\" name=\"date\" type=\"date\" required={true} />\r\n                        <InputField label=\"Tempat\" name=\"place\" required={true} />\r\n                        <InputField label=\"Permasalahan\" name=\"content\" type=\"textarea\" required={true} />\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Sumber Aduan\" name=\"issue_input\" required={true} />\r\n                        <SelectField label=\"Pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(IssuesForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nconst FORM_ID = \"form-input-follow-up-issue\";\r\nclass IssuesFollowingUpForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailIssue: true,\r\n        }\r\n        this.issue = {};\r\n        this.issueService = IssuesService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailIssue:false});\r\n        }\r\n        this.showDetailIssue = () => {\r\n            this.setState({showDetailIssue:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                issue_id : this.issue.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.issue.follow_up = response.followed_up_issue;\r\n            this.issue.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.issue = response.issue;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (followUp) => {\r\n            this.commonAjax(this.issueService.followUpIssue, followUp,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.issueService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.issue != null && this.issue.is_closed == true;\r\n        }\r\n    } \r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        if(this.isLoggedUserNull()){\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Tindak Lanjut Aduan</CommonTitle>\r\n                \r\n                <Card title=\"Detail Aduan\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.issue.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailIssue? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Aduan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Waktu dan Tempat\">\r\n                                <p>{this.issue.place}, {dateStringDayMonthYearFromText(this.issue.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.issue.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Permasalahan\">\r\n                                <p>{this.issue.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pengadu\">\r\n                                <p>{this.issue.email}, {this.issue.issuer}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Sumber Input\">\r\n                                <p>{this.issue.issue_input}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailIssue}>Tampilkan Detail Aduan</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.issue.follow_up == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.issue.follow_up.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.issue.follow_up.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesFollowingUpForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\n\r\nclass DiscussionTopicsForm extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const discussionTopic = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    discussionTopic[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                discussionTopic.id = this.getRecordId();\r\n            }\r\n            this.store(discussionTopic);\r\n            console.debug(\"discussionTopic: \", discussionTopic);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/discussiontopics/\" + response.discussion_topic.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (discussionTopic) => {\r\n            this.commonAjax(\r\n                this.discussionTopicService.store, discussionTopic,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.recordData = response;\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false });\r\n\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = this.discussionTopic[element.name];\r\n                if (this.isClosed() == false && element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed() == true) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n        document.title = \"Form Tema Pembahasan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Tema Pembahasan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    {this.getRecordId() != null && this.discussionTopic != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <div className=\"tags has-addons are-medium\">\r\n                                    <span className=\"tag is-dark\">Status</span>\r\n                                    <span className=\"tag is-info\">{this.discussionTopic.is_closed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n                                </div></div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.discussionTopic.departement == null ? null : this.discussionTopic.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed() ? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkDetailMeetingNote = (props) => {\r\n    const note_id = props.note_id;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <Link to={\"/meetingnote/\" + props.note_id} className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-clipboard\"></i>\r\n                </span>\r\n                <span>Detail Notulensi</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DiscussionTopicsForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LinkDetailMeetingNote } from './DiscussionTopicsForm';\r\n\r\nconst FORM_ID = \"form-input-discussion-action\";\r\nclass DiscussionActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailDiscussionTopic: true,\r\n        }\r\n        this.discussionTopic = {};\r\n        this.discussionTopicSerivce = DiscussionTopicsService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailDiscussionTopic:false});\r\n        }\r\n        this.showDetailDiscussionTopic = () => {\r\n            this.setState({showDetailDiscussionTopic:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                topic_id : this.discussionTopic.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.discussionTopic.action = response.discussion_action;\r\n            this.discussionTopic.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.discussionTopicSerivce.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicSerivce.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Konfirmasi Tema Pembahasan\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Penyelesaian/Pelaksanaan Keputusan</CommonTitle>\r\n                <Card title=\"Detail Tema Pembahasan\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.discussionTopic.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    {this.state.showDetailDiscussionTopic? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tema Pembahasan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                        <LabelField label=\"Waktu\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.discussionTopic.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.discussionTopic.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.discussionTopic.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.discussionTopic.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailDiscussionTopic}>Tampilkan Detail Tema Pembahasan</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Penyelesaian/Pelaksanaan Keputusan\">\r\n                    {this.discussionTopic.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.discussionTopic.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.discussionTopic.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionActionForm));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { getDiffDaysToNow } from './../../../utils/DateUtil';\r\n\r\nclass DiscussionTopicsList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Topik Pembahasan\", \"discussiontopic\");\r\n        this.state = {}\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => {\r\n            // this.commonAjax(\r\n            //     this.discussionTopicService.delete,\r\n            //     id,\r\n            //     this.onSuccessDelete,\r\n            //     this.onErrorDelete\r\n            // )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.discussionTopicService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Tema Pembahasan\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Daftar Tema Pembahasan</h2>\r\n                <Card title=\"Daftar Tema Pembahasan\">\r\n\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'content', alias: \"Pembahasan\", withFilter: true },\r\n                                        { text: 'decision', alias: \"Keputusan\", withFilter: true },\r\n                                        { text: 'deadline_date', alias: \"Deadline\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'status' },\r\n                                        { text: 'action' },\r\n                                        { text: 'opsi' },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record_\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                            <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                            <td>{item.deadline_date}</td>\r\n                                            <td>{item.departement.name}</td>\r\n                                            <td>\r\n                                                {item.is_closed == true ?\r\n                                                    <span className=\"tag is-info\">Closed</span>\r\n                                                    :\r\n                                                    <span className=\"tag is-warning\">Not Closed</span>}\r\n                                            </td>\r\n                                            <td><LinkEditAndAction id={item.id} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={\"/meetingnote/\"+item.note_id} \r\n                                                className=\"button is-light is-small\">\r\n                                                    <span className=\"icon\">\r\n                                                        <i className=\"fas fa-clipboard\"/>\r\n                                                    </span>\r\n                                                    <span>Notulensi</span>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    return (\r\n        <>\r\n            <Link to={\"/discussiontopics/\" + props.id} className=\"button is-small\" >\r\n                <i className=\"fas fa-edit\"></i>\r\n            </Link>\r\n\r\n            <Link to={\"/discussiontopics/\" + props.id + \"/action\"} className=\"button is-primary is-small\" >\r\n                <i className=\"fas fa-location-arrow\"></i>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionTopicsList));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport { getDiffDaysToNow } from '../../../utils/DateUtil';\r\nimport MeetingNoteSerivce from './../../../services/MeetingNoteSerivce';\r\n\r\nclass MeetingNoteList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Notulensi\", \"notes\");\r\n        this.state = {}\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => { }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.meetingNoteService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Notulensi\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Daftar Notulensi</h2>\r\n                <Card title=\"Daftar Notulensi\">\r\n\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table style={{   }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', alias:\"Id\", withFilter: true },\r\n                                    { text: 'date', alias:\"Tanggal\", withFilter: true },\r\n                                    { text: 'place', alias:\"Tempat\", withFilter: true },\r\n                                    { text: 'departement', alias:\"Bidang\", withFilter: true },\r\n                                    { text: 'user', alias:\"Notulis\", withFilter: true },\r\n                                    { text: 'Topik Diskusi', },\r\n                                    { text: 'Closed', },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                const deadlineDate = Date.parse(item.deadline_date);\r\n                                const style = {};\r\n                                try {\r\n                                    const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n                                    \r\n                                    if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                        style.backgroundColor = 'orange';\r\n                                    } else if (item.is_closed == false && diffDay < 0) {\r\n                                        style.backgroundColor = 'red';\r\n                                    }\r\n                                } catch (e) {\r\n                                    //\r\n                                }\r\n                                return (<tr key={\"record-meeting-note-\"+i} style={style}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.departement?item.departement.name:\"-\"}</td>\r\n                                    <td>{item.user?item.user.name:\"-\"}</td>\r\n                                    <td>\r\n                                        {item.discussion_topics?item.discussion_topics.length:0}\r\n                                    </td>\r\n                                    <td>\r\n                                        {calculateClosedTopic(item.discussion_topics)}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkEditPage id={item.id}/>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst calculateClosedTopic = (discussion_topics) => {\r\n    if (null == discussion_topics) {\r\n        return 0;\r\n    }\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed == true) {\r\n            closed++;\r\n        }\r\n    }   \r\n    return closed;\r\n}\r\n\r\nconst LinkEditPage = (props) => {\r\n    return (\r\n        <Link to={\"/meetingnote/\" + props.id} className=\"button is-small\" >\r\n        <i className=\"fas fa-edit\"></i>\r\n    </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteList));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport Profile from '../pages/Profile';\r\nimport IssuesList from '../pages/issues/IssuesList';\r\nimport IssuesForm from '../pages/issues/IssuesForm';\r\nimport IssuesFollowingUpForm from '../pages/issues/IssuesFollowingUpForm';\r\nimport DiscussionActionForm from '../pages/discussiontopics/DiscussionActionForm';\r\nimport DiscussionTopicsForm from '../pages/discussiontopics/DiscussionTopicsForm';\r\nimport DiscussionTopicsList from '../pages/discussiontopics/DiscussionTopicsList';\r\nimport MeetingNoteList from '../pages/meetingnotes/MeetingNoteList';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          {/* ========= meeting notes ========= */}\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote\" render={\r\n            (props) =>\r\n              <MeetingNoteList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          {/* ======== issues ========= */}\r\n          <Route exact path=\"/issues\" render={\r\n            (props) =>\r\n              <IssuesList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/create\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id/followup\" render={\r\n            (props) =>\r\n              <IssuesFollowingUpForm app={this.props.app} />\r\n          } />\r\n          {/* ======== discussiontopics ========= */}\r\n          <Route exact path=\"/discussiontopics\" render={\r\n            (props) =>\r\n              <DiscussionTopicsList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id/action\" render={\r\n            (props) =>\r\n              <DiscussionActionForm app={this.props.app} />\r\n          } />\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* ============== users management ============= */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* ================ departements management ============= */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      // <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000, color: '#ccc'}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    )\r\n  }\r\n}","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nimport SideBar from './components/layout/SideBar';\nimport './components/layout/SideBar.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert\n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section style={{ minHeight: '70vh' }}>\n          <div >\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\" style={{ minHeight: '70vh', marginBottom: '1px' }}>\n            <div style={{ paddingTop: '20px', paddingLeft: '20px' }}\n              className=\"menu-container column is-one-fifth has-background-water-ter\">\n              \n                <SideBar app={this} />\n               \n            </div>\n            <div className=\"column is-four-fifths\">\n\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    meetingNoteData: null,\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) { \r\n        case types.GET_MEETING_NOTES:\r\n            let result = {\r\n                ...state,\r\n                meetingNoteData: action.payload\r\n            };\r\n            console.debug(\"action.meetingNoteData: \", result.meetingNoteData);\r\n            return result;\r\n        \r\n        default:\r\n            return { ...state };\r\n             \r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as meetingNotesReducer from \"./meetingNotesReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        managementState: managementReducer.reducer,\r\n        meetingNoteState: meetingNotesReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    managementState: managementReducer.initState,\r\n    meetingNoteState: meetingNotesReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    } \r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const getMeetingNotesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MEETING_NOTES) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        // .then(response => response.json())\r\n        .then(result => {\r\n            const response = result.data;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    ...response\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const storeMeetingNote = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n         headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json()]); })\r\n        .then(response => {\r\n            alert(\"Success storeMeetingNote\");\r\n        })\r\n        .catch(err => { alert(\"Error storeMeetingNote\");console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as meetingNoteMiddleware from '../middlewares/MeetingNoteMiddleware'\r\nimport * as common from '../middlewares/Common';\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            meetingNoteMiddleware.getMeetingNotesMiddleware, \r\n\r\n            /*enntity management*/\r\n            // managementMiddleware.getEntityListMiddleware,\r\n            // managementMiddleware.getEntityByIdMiddleware,\r\n            // managementMiddleware.updateEntityMiddleware,\r\n            // managementMiddleware.removeManagedEntityMiddleware, \r\n            // managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            // managementMiddleware.getEntityPropertyMiddleware,\r\n            // managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            // realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            // realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}