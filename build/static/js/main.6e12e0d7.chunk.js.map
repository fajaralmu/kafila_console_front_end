{"version":3,"sources":["logo.svg","constant/Url.js","redux/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/BaseMenus.js","components/layout/SideBar.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","utils/StringUtil.js","components/forms/commons.js","components/buttons/NavButtons.js","components/container/Card.js","utils/DateUtil.js","components/pages/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","middlewares/Common.js","services/Promises.js","services/MasterDataService.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/messages/Alert.js","services/DiscussionTopicsService.js","components/pages/meetingnotes/MeetingNoteForm.js","services/UserService.js","components/pages/Profile.js","services/IssuesService.js","components/pages/issues/IssuesList.js","components/pages/issues/IssuesForm.js","components/pages/issues/IssuesFollowingUpForm.js","components/pages/discussiontopics/DiscussionTopicsForm.js","components/pages/discussiontopics/DiscussionActionForm.js","components/pages/discussiontopics/DiscussionTopicsList.js","components/pages/meetingnotes/MeetingNoteList.js","components/layout/Content.js","components/widget/Loader.js","App.js","redux/userReducer.js","redux/managementReducer.js","redux/meetingNotesReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/CatalogMiddleware.js","middlewares/MeetingNoteMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","apiNotes","accountAction","app","startLoading","type","payload","meta","email","password","user","meetingNotesAction","request","filter","fieldsFilter","console","debug","limit","page","orderBy","orderType","Footer","className","href","Component","BaseComponent","props","authenticated","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","getLoggedUser","getLoggedUserDepartementName","isLoggedUserNull","departement","name","showConfirmation","body","Promise","resolve","reject","showAlert","e","showConfirmationDanger","showAlertError","showInfo","showError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","warn","commonAjax","commonAjaxWithProgress","title","this","CommonTitle","style","textAlign","marginLeft","children","BaseMenus","state","shownMenuList","id","setState","hideMenuList","isMenuListShown","toggleMenuList","menuName","target","getAttribute","menuChildren","i","length","element","role","MENUS","link","SideBar","map","menu","childs","extractChildren","iconClassName","Fragment","key","menu-name","onClick","marginRight","menuChild","j","to","withRouter","connect","userState","menus","requestId","applicationProfile","dispatch","Header","showBurger","toggleNavBurger","performLogout","accepted","backgroundColor","src","width","height","linkProperty","display_name","AppLink","actions","Message","show","hide","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","Date","handleSubmit","event","preventDefault","form","FormData","elements","performLogin","showLoginInfo","loginFailed","current","ref","marginTop","onSubmit","nam","placeholder","required","TableHeadWithFilter","headers","onButtonOrderClick","alias","string","toReplace","replacement","String","split","join","error","replaceString","text","toUpperCase","withFilter","fontSize","sort","data","InputFormFilter","ButtonApplyResetFilter","InputField","orientation","label","note","SelectField","options","option","LabelField","SubmitResetButton","submitValue","submitText","withReset","NavButtons","index","buttonValues","generateButtonValues","totalData","activeIndex","buttonsData","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","headerIconClassName","iconOnClick","headerIconOnClick","margin","withButtonFooter","footerContent","HeaderIcon","aria-hidden","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","getDiffDaysToNow","date","getTime","Dashboard","meetingNoteData","meetingNoteState","getMeetingNotes","BaseAdminPage","ManagementMenu","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","post","code","MasterManagementService","setUsersData","usersData","storeUser","userModel","storeIssue","issue","viewUser","userList","list","viewIssue","issueList","storeDepartement","viewDepartement","deleteRecord","departementList","departementsData","instance","BaseManagementPage","loadRecords","readInputForm","inputs","getElementsByClassName","masterDataServce","count","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","withText","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","populateDefaultInputs","hasOwnProperty","navButtons","createNavButton","recordList","result_list","formComponent","overflow","item","indexBegin","DeparementManagement","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","match","departementListLoaded","loadRecord","recordSaved","handleSuccessGetRecord","recordFailedToSave","loadDepartements","departement_id","handleErrorGetRecord","formTitle","dep","DepartementManagementForm","MeetingNoteSerivce","meetingNote","meeting_note","view","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","ModalBackdrop","DiscussionTopicsService","discussionTopic","discussion_topic","storeAction","action","discussion_action","FORM_ID","TOPIC_PREFIX","MeetingNoteForm","discussionTopicCount","showFormDiscussionTopicInEditMode","discussionTopicService","form_temporary_inputs","discussion_topics","isSubmitting","meetingNoteService","getMaxDiscussionTopicID","addDiscussionTopic","saveFormTemporaryInputs","isDiscussionTopicClosed","is_closed","removeDiscussionTopic","ok","doRemoveDiscussionTopic","splice","setFormTemporaryInputs","setAttribute","fillDataAndStore","onSubmitDiscussionTopic","window","confirm","note_id","storeDiscussionTopic","currentDiscussionTopicID","currentDiscussionTopicIndex","elementName","startsWith","indexAndName","extractTopicDiscussionIndexAndName","storeMeetingNote","handleErrorSubmit","discussionTopics","enableInputs","removeAttribute","reset","discussionTopicSaved","alert","handleErrorSubmitDiscussionTopic","notulis","isClosed","FormAddDiscussionTopic","result","elementNameSplitIndex","parseInt","ButtonRemoveTopic","DiscussionTopicStatusInfo","closed","border","ButtonAddTopic","LinkEditAndAction","FormUpperTag","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","IssuesService","followUpIssue","followUp","followed_up_issue","IssuesList","issueService","isAdmin","place","content","issuer","issue_input","issue_sources","IssuesForm","source","IssuesFollowingUpForm","showDetailIssue","hideDetailIssue","issue_id","handleSuccessSubmit","follow_up","DiscussionTopicsForm","LinkDetailMeetingNote","DiscussionActionForm","showDetailDiscussionTopic","discussionTopicSerivce","topic_id","decision","deadline_date","person_in_charge","DiscussionTopicsList","deadlineDate","parse","diffDay","MeetingNoteList","calculateClosedTopic","LinkEditPage","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","Home","Loader","opacity","position","zIndex","color","App","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","refresh","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","refreshLogin","additionalMenus","Array","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","paddingTop","paddingLeft","initState","loginKey","loginAttempt","reducer","api_token","entitiesData","entityConfig","managedEntity","entityProperty","managementMenus","entities","generalList","rootReducer","combineReducers","userReducer","managementState","managementReducer","meetingNotesReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","Object","assign","err","param","requestAppIdMiddleware","message","get","refreshLoginStatusMiddleware","performLogoutMiddleware","logoutSuccess","removeEntityMiddleware","updateCartMiddleware","getMeetingNotesMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","meetingNoteMiddleware","Root","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e12e0d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n \r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n} \r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n} \r\n  \r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const meetingNotesAction = {\r\n    store: (meetingNote, app) => {\r\n        app.startLoading();\r\n        let requested = {\r\n            type: types.STORE_MEETING_NOTES,\r\n            payload: {\r\n                meeting_note:meetingNote    \r\n            },\r\n            meta: {\r\n                type: types.STORE_MEETING_NOTES,\r\n                url: apiNotes.concat(\"store\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    list : (request, app) => {\r\n        app.startLoading();\r\n        \r\n        const filter =  request.fieldsFilter;\r\n        console.debug(\"request.fieldsFilter: \", filter);\r\n        let requested = {\r\n            type: types.GET_MEETING_NOTES,\r\n            payload: {\r\n                filter: {\r\n                    limit: request.limit,\r\n                    page: request.page,\r\n                    fieldsFilter: filter,\r\n                    orderBy: request.orderBy,\r\n                    orderType: request.orderType,\r\n                },\r\n            },\r\n            meta: {\r\n                type: types.GET_MEETING_NOTES,\r\n                url: apiNotes.concat(\"list\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    }\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const GET_MEETING_NOTES = \"GET_MEETING_NOTES\";\r\nexport const STORE_MEETING_NOTES = \"GET_MEETING_NOTES\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">Kafila International Islamic School</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import  React , {Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return true;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.getLoggedUser = () => {\r\n            return this.props.loggedUser;\r\n        }\r\n        this.getLoggedUserDepartementName = () => {\r\n            if (this.isLoggedUserNull()) return null;\r\n            return this.getLoggedUser().departement.name;\r\n        }\r\n        this.isLoggedUserNull = () => {\r\n            return false == this.props.loginStatus || null == this.props.loggedUser;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showConfirmationDanger = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n\r\n        this.title = (title) => {\r\n            return <CommonTitle>{title}</CommonTitle>\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n\r\nexport const CommonTitle = (props) => {\r\n    return <h2 style={{ textAlign: 'left', marginLeft:'10px' }}>{props.children}</h2>\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nexport default class BaseMenus extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            shownMenuList: {}\r\n        }\r\n\r\n        this.shownMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = true;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.hideMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = false;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.isMenuListShown = (id) => {\r\n            return this.state.shownMenuList[id] == true;\r\n        }\r\n        this.toggleMenuList = (e) => {\r\n            const menuName = e.target.getAttribute(\"menu-name\");\r\n            if (this.isMenuListShown(menuName)) {\r\n                this.hideMenuList(menuName);\r\n            } else {\r\n                this.shownMenuList(menuName);\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    extractChildren(menuChildren) {\r\n        const children = [];\r\n        for (let i = 0; i < menuChildren.length; i++) {\r\n            const element = menuChildren[i];\r\n            if (element.authenticated && this.isLoggedUserNull()) {\r\n                continue;\r\n            }\r\n            if (this.isLoggedUserNull() == false && element.role != null && this.getLoggedUser().role != element.role) {\r\n                continue;\r\n            }\r\n            children.push(element);\r\n        }\r\n\r\n        return children;\r\n    }\r\n    \r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nimport BaseMenus from './BaseMenus';\r\n\r\nexport const MENUS = [\r\n    {\r\n        name: 'Umum',\r\n        children: [\r\n            {\r\n                name: 'Home',\r\n                link: '/home'\r\n            }, {\r\n                name: 'Dashboard',\r\n                link: '/dashboard',\r\n                authenticated: true,\r\n            }]\r\n    }, {\r\n        name: 'Notulensi',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/meetingnote',\r\n            authenticated: true,\r\n        },{\r\n            name: 'Tambah Notulensi',\r\n            link: '/meetingnote/create',\r\n            authenticated: true,\r\n        }]\r\n    }, {\r\n        name: 'Aduan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/issues',\r\n            authenticated: true,\r\n        },\r\n        {\r\n            name: 'Tambah',\r\n            link: '/issues/create',\r\n            authenticated: true,\r\n            role: 'admin'\r\n        }]\r\n    }, {\r\n        name: 'Tema Pembahasan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/discussiontopics',\r\n            authenticated: true,\r\n        }]\r\n    }, {\r\n        name: 'Master Data',\r\n        children: [\r\n            {\r\n                name: 'Menu',\r\n                link: '/management',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            },\r\n            {\r\n                name: 'User',\r\n                link: '/management/users',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            }, {\r\n                name: 'Bidang',\r\n                link: '/management/departements',\r\n                authenticated: true,\r\n                role: 'admin'\r\n            }]\r\n    }\r\n]\r\n\r\nclass SideBar extends BaseMenus {\r\n    constructor(props) {\r\n        super(props); \r\n        \r\n    } \r\n\r\n    render() {\r\n        const user = this.getLoggedUser();\r\n        return (\r\n            <div  >\r\n                <aside className=\"menu\">\r\n                    {MENUS.map((menu, i) => {\r\n                        const childs = this.extractChildren(menu.children);\r\n                        if (childs == null || childs.length == 0) { return null; }\r\n                        const isMenuListShown = this.isMenuListShown(menu.name);\r\n                        const iconClassName  = isMenuListShown?\"fas fa-angle-up\":\"fas fa-angle-down\";\r\n\r\n                        return (\r\n                            <React.Fragment key={\"menu_\"+menu.name}>\r\n                                <p key={menu.name} menu-name={menu.name} onClick={this.toggleMenuList} className=\"menu-label\"> \r\n                                    <i style={{marginRight:'10px'}} className={iconClassName}    />                         \r\n                                    {menu.name}\r\n                                </p>\r\n                                {isMenuListShown ?\r\n                                    <ul className=\"menu-list\">\r\n                                        {childs.map((menuChild, j) => {\r\n                                            return (<li key={\"sidebar-menu-child-\"+i+\"-\"+j}>\r\n                                                <Link to={menuChild.link}>\r\n                                                    {menuChild.name}\r\n                                                </Link>\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>\r\n                                    :null}\r\n                           </React.Fragment>\r\n                        )\r\n                    })}\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n        menus: state.userState.menus,\r\n        requestId: state.userState.requestId,\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from './../BaseComponent';\r\nimport './SideBar.css'\r\nimport { MENUS } from './SideBar';\r\nimport BaseMenus from './BaseMenus';\r\n\r\n\r\nclass Header extends BaseMenus {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            showBurger: false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({ showBurger: !this.state.showBurger })\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    } \r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link style={{ backgroundColor: '#fff' }} className=\"navbar-item\" to=\"/\">\r\n                            <img src=\"kiis-stroke.png\" width=\"38\" height=\"38\" />\r\n                        </Link>\r\n                        <div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"topNav\" className={this.state.showBurger ? \"is-active navbar-menu\" : \" navbar-menu\"}>\r\n                        <div className=\"navbar-start\">\r\n                            {MENUS.map((menu, i) => {\r\n                                const childs = this.extractChildren(menu.children);\r\n                                if (childs == null || childs.length == 0) { return null; }\r\n                                const isMenuListShown = this.isMenuListShown(menu.name);\r\n                                const iconClassName  = isMenuListShown?\"fas fa-angle-up\":\"fas fa-angle-down\";\r\n\r\n                                return (\r\n                                    <React.Fragment key={\"NavMenu_\"+menu.name}>\r\n                                        <p style={{ marginLeft: '10px' }} onClick={this.toggleMenuList} menu-name={menu.name} className=\"menu-label\"> \r\n                                        <i style={{marginRight:'10px'}} className={iconClassName}    />  \r\n                                        {menu.name}  </p>\r\n                                        {isMenuListShown ?\r\n                                        <ul className=\"menu-list\">\r\n                                            {childs.map((linkProperty, j) => {\r\n                                                return <AppLink key={\"header-link-\" + j +\"-\"+i} loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                                            })}\r\n                                        </ul>: null}\r\n                                    </React.Fragment>)\r\n                            })}\r\n                        </div>\r\n                        <div className=\"navbar-end\">\r\n                            <div className=\"navbar-item\">\r\n                                <div className=\"buttons has-addons\">\r\n\r\n                                    {this.props.loginStatus ?\r\n                                        <><Link className=\"button is-info\" to=\"/profile\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                        </Link>\r\n                                            <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                                <span className=\"icon\">\r\n                                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                                </span>\r\n                                                <span>Logout</span>\r\n                                            </a>\r\n                                        </> :\r\n                                        <Link className=\"button is-info\" to=\"/login\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>Login</span>\r\n                                        </Link>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    if (null == linkProperty.link) {\r\n        return null;\r\n    }\r\n\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if (linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >{linkProperty.name}</Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n        menus: state.userState.menus,\r\n        requestId: state.userState.requestId,\r\n        applicationProfile: state.userState.applicationProfile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header))\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            this.setState({show:false});\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport const replaceString = (string, toReplace, replacement) => {\r\n\ttry {\r\n\t\tconst splitted = new String(string).split(toReplace);\r\n\t\treturn splitted.join(replacement);\r\n\t} catch (error) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n \r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst rawVal = parseInt(val);\r\n\tlet nominal =  Math.abs(val).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif(rawVal < 0){\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\nimport { replaceString } from '../../utils/StringUtil';\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                \r\n                return <th key={\"TH_\"+i}>{header.alias == null ?replaceString(header.text.toUpperCase(), \"_\", \" \") : header.alias}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field \"+props.className;\r\n    const orientation = props.orientation?props.orientation:\"horizontal\";\r\n    return (\r\n        <div className={\"field is-\"+orientation}>\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{props.label ? props.label : \"Input\"}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option, i) => {\r\n        return <option key={\"select-option-\"+i} value={option.value} >{option.text}</option>\r\n    })\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Select\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className=\"button is-link\" type=\"submit\" style={{marginRight:'10px'}} >\r\n                        <span className=\"icon\"><i className=\"fas fa-save\"></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const iconClassName = this.props.headerIconClassName;\r\n        const iconOnClick = this.props.headerIconOnClick;\r\n\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style }}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    {null == iconClassName ? null : <HeaderIcon className={iconClassName} onClick={iconOnClick} /> }\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst HeaderIcon = (props) => {\r\n    return (\r\n        <a className=\"card-header-icon\" aria-label=\"more options\" onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={props.className} aria-hidden=\"true\"></i>\r\n            </span>\r\n        </a>\r\n    );\r\n}","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as formComponent from '../forms/commons';\r\nimport NavButtons from './../buttons/NavButtons';\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport Card from '../container/Card';\r\nimport { getDiffDaysToNow } from './../../utils/DateUtil';\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        // if (null == this.props.meetingNoteData) {\r\n        //     this.getMeetingNotes();\r\n        document.title = \"Dashboard\";\r\n        // this.populateDefaultInputs();\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Dashboard</CommonTitle>\r\n                <Card title=\"Welcome\" >\r\n                    <p>{this.getLoggedUser().display_name}</p>\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        meetingNoteData: state.meetingNoteState.meetingNoteData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.isLoggedUserNull() ||\r\n        this.props.loggedUser.role != 'admin'\r\n        ) {\r\n        this.backToLogin();\r\n    }\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Master Data Menu</CommonTitle>\r\n                <Card title=\"Menu\">\r\n                        <div  className=\"columns\">\r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                    <p><i style={{fontSize:'50px'}} className=\"fas fa-puzzle-piece\"></i></p>\r\n                                    <Link to=\"/management/departements\">Departements</Link>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                <p><i style={{fontSize:'50px'}} className=\"fas fa-users\"></i></p>\r\n                                    <Link to=\"/management/users\">Users</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(ManagementMenu);","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    storeIssue = (issue) => {\r\n        const request = {\r\n            code: 'issue',\r\n            issue:issue\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    viewIssue = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"issue\"});\r\n    }\r\n\r\n    issueList = (filter) => {\r\n        return this.list({\r\n            code: 'issue',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n            console.error(\"Error loading resource: \", e);\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmation(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link, withText = true) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        {withText?\r\n                        <span>Edit</span>\r\n                        :null}\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink, false)}\r\n                    {this.buttonDeleteRecord(id, false)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id, withText = true) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    {withText?\r\n                    <span>Delete</span>\r\n                    :null}\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n        \r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Departement Management</CommonTitle>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'name', withFilter: true },\r\n                                    { text: 'description', withFilter: true },\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/departements/\"+item.id,\r\n                                            item.id)}    \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/users/\"+response.user.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/departements/\"+response.departement.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n               <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'notes',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/notes/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <ModalBackdrop>\r\n                    <form onSubmit={(e)=>e.preventDefault()}>\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly||this.props.isError?\"button\" : \"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </ModalBackdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport const ModalBackdrop = (props) => {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\n\r\nexport default class DiscussionTopicsService\r\n{\r\n    static instance = DiscussionTopicsService.instance || new DiscussionTopicsService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    store = (discussionTopic) => {\r\n\r\n        const request = {\r\n            discussion_topic: discussionTopic\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'discussion_topic',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    // delete = (id) => {\r\n    //     const endpoint = contextPath().concat(\"api/discussiontopics/delete/\"+id);\r\n    //     return commonAjaxPostCalls(endpoint, {});\r\n    // }\r\n    storeAction = (action) => {\r\n        const request = {\r\n            discussion_action: action\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/action\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { ModalBackdrop } from './../../messages/Alert';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LabelField } from './../../forms/commons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nconst TOPIC_PREFIX = \"discussion_topic_\";\r\nconst CLASS_INPUT_FIELD = \"input-form-field\";\r\n\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            discussionTopicCount: [1],\r\n            showFormDiscussionTopicInEditMode: false\r\n        }\r\n\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.form_temporary_inputs = {};\r\n        this.meetingNote = { discussion_topics: [] };\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.getMaxDiscussionTopicID = () => {\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let max = 0;\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element > max) {\r\n                    max = element;\r\n                }\r\n            }\r\n            return max;\r\n        }\r\n\r\n        this.addDiscussionTopic = () => {\r\n\r\n            if (this.getRecordId() != null && null != this.meetingNote) {\r\n                this.setState({ showFormDiscussionTopicInEditMode: true });\r\n                return;\r\n            }\r\n\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            this.saveFormTemporaryInputs();\r\n            discussionTopicCount.push(this.getMaxDiscussionTopicID() + 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n\r\n        }\r\n\r\n        this.isDiscussionTopicClosed = (id) => {\r\n            if (null == this.meetingNote || null == this.meetingNote.discussion_topics) {\r\n                return false;\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const element = this.meetingNote.discussion_topics[i];\r\n                if (element.id == id && element.is_closed) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.removeDiscussionTopic = (id) => {\r\n            this.saveFormTemporaryInputs();\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Remove discussion topic (\" + id + \")? \")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.doRemoveDiscussionTopic(id);\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.doRemoveDiscussionTopic = (id) => {\r\n            \r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let index = null;\r\n\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element == id) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if (null == index) {\r\n                return;\r\n            }\r\n            discussionTopicCount.splice(index, 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n            this.setFormTemporaryInputs();\r\n\r\n        }\r\n        this.setFormTemporaryInputs = () => {\r\n            console.debug(\"setTempDiscussionTopicValues: \", this.form_temporary_inputs);\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != this.form_temporary_inputs[element.name]) {\r\n                    element.value = this.form_temporary_inputs[element.name];\r\n                } else {\r\n                    element.value = null;\r\n                }\r\n\r\n                if (this.getRecordId() != null) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n        this.saveFormTemporaryInputs = () => {\r\n            this.form_temporary_inputs = {};\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.value == null || element.value == \"\") {\r\n                    continue;\r\n                }\r\n                this.form_temporary_inputs[element.name] = element.value;\r\n            }\r\n            console.debug(\"SAVED TEMP: \", this.form_temporary_inputs);\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (this.getRecordId() != null) {\r\n                return;\r\n            }\r\n            this.saveFormTemporaryInputs();\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });\r\n        }\r\n\r\n        this.onSubmitDiscussionTopic = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n\r\n            if (!window.confirm(\"Submit Data?\") || null == this.meetingNote) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            const discussionTopic = {\r\n                note_id: this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                discussionTopic[element.name] = element.value;\r\n            }\r\n            console.debug(\"SUBMIT:\", discussionTopic);\r\n            this.storeDiscussionTopic(discussionTopic);\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n\r\n            this.meetingNote = {\r\n                discussion_topics: []\r\n            };\r\n            let currentDiscussionTopicID = -1;\r\n            let currentDiscussionTopicIndex = -1;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                const elementName = element.name;\r\n                if (null == element.value || \"\" == element.value) {\r\n                    continue;\r\n                }\r\n                if (elementName.startsWith(TOPIC_PREFIX)) {\r\n                    const indexAndName = extractTopicDiscussionIndexAndName(elementName);\r\n                    if (indexAndName.index != currentDiscussionTopicID) {\r\n                        this.meetingNote.discussion_topics.push({});\r\n                        currentDiscussionTopicID = indexAndName.index;\r\n                        currentDiscussionTopicIndex++;\r\n                    }\r\n                    this.meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name] = element.value;\r\n                } else {\r\n                    this.meetingNote[elementName] = element.value;\r\n                }\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"meetingNote: \", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    \r\n                    this.props.history.push(\"/meetingnote/\" + response.meeting_note.id);\r\n                    this.handleSuccessGetRecord(response);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n             }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            const discussionTopics = this.meetingNote.discussion_topics;\r\n            let discussionTopicCount = [];\r\n            for (let i = 0; i < discussionTopics.length; i++) {\r\n                const element = discussionTopics[i];\r\n                discussionTopicCount.push(element.id);\r\n            }\r\n            this.form_temporary_inputs = {};\r\n\r\n            for (const key in this.meetingNote) {\r\n                if (this.meetingNote.hasOwnProperty(key)) {\r\n                    const element = this.meetingNote[key];\r\n                    if (key == (\"discussion_topics\")) {\r\n                        continue;\r\n                    }\r\n                    this.form_temporary_inputs[key] = element;\r\n                }\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const discussion_topic = this.meetingNote.discussion_topics[i];\r\n                for (const key in discussion_topic) {\r\n                    if (discussion_topic.hasOwnProperty(key)) {\r\n                        const element = discussion_topic[key];\r\n                        this.form_temporary_inputs[TOPIC_PREFIX + discussion_topic.id + \"_\" + key] = element;\r\n                    }\r\n                }\r\n            }\r\n            // console.debug(\"FORM INPUTS: \", this.form_temporary_inputs);\r\n            this.setState({ discussionTopicCount: discussionTopicCount, isLoadingRecord: false });\r\n            \r\n            // console.debug(\"FORM INPUTS == : \", this.form_temporary_inputs);\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        this.discussionTopicSaved = (response) => {\r\n            alert(\"SUCCESSS\");\r\n            this.setState({ showFormDiscussionTopicInEditMode: false });\r\n            this.loadRecord();\r\n\r\n        }\r\n        this.handleErrorSubmitDiscussionTopic = (e) => {\r\n            alert(\"Error Update Discussion Topic: \" + e);\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeDiscussionTopic = (discussionTopic) => {\r\n            this.commonAjax(this.discussionTopicService.store, discussionTopic,\r\n                this.discussionTopicSaved, this.handleErrorSubmitDiscussionTopic);\r\n        }\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.recordSaved, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Notulensi\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n\r\n        if (this.getRecordId() == null && this.meetingNote != null) {\r\n            this.meetingNote = null;\r\n            this.form_temporary_inputs = {};\r\n            this.setState({ discussionTopicCount: [1] });\r\n        }\r\n        this.setFormTemporaryInputs();\r\n    }\r\n\r\n    render() {\r\n        if (null == this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n\r\n        const title = this.title(\"Notulensi Rapat\");\r\n        \r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        let notulis = \"\";\r\n        if (this.meetingNote != null && this.meetingNote.user != null) {\r\n            notulis = \", Notulis: \"+this.meetingNote.user.display_name;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {title}\r\n                {this.state.showFormDiscussionTopicInEditMode ?\r\n                    <FormAddDiscussionTopic onSubmit={this.onSubmitDiscussionTopic}\r\n                        onClose={(e) => this.setState({ showFormDiscussionTopicInEditMode: false })}\r\n                    /> : null\r\n                }\r\n                <form id={FORM_ID} onSubmit={this.onSubmit} style={{ marginTop: '20px' }}>\r\n                    <Card title={\"Formulir Notulensi\" + notulis}>\r\n                        {this.getRecordId() != null && this.meetingNote != null ?\r\n                            <FormUpperTag meetingNote={this.meetingNote} /> : null}\r\n                        \r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <LabelField label=\"Tema Pembahasan\" >\r\n                            <span className=\"tag is-dark\">\r\n                                <b>{this.state.discussionTopicCount.length}</b></span>\r\n                        </LabelField>\r\n                    </Card>\r\n\r\n                    {/* ---------- discussion topics forms ----------- */}\r\n                    {this.state.discussionTopicCount.map((id, i) => {\r\n                        const isClosed = this.isDiscussionTopicClosed(id);\r\n                        const title = \"Tema Pembahasan #\" + (i + 1);// +\", id:\"+id;\r\n                        return (\r\n                            <Card title={title} key={\"disc_topic_field_\" + i}\r\n                            >\r\n                                {isClosed ?\r\n                                    <span className=\"tag is-primary\"><i className=\"fas fa-check\" />&nbsp;Closed</span> :\r\n                                    null}\r\n                                {this.getRecordId() == null && this.state.discussionTopicCount.length > 1 ?\r\n                                    <ButtonRemoveTopic id={id} removeDiscussionTopic={\r\n                                        this.removeDiscussionTopic} /> : null}\r\n\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={TOPIC_PREFIX + id + \"_content\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={TOPIC_PREFIX + id + \"_decision\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={TOPIC_PREFIX + id + \"_deadline_date\"} type=\"date\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={TOPIC_PREFIX + id + \"_person_in_charge\"} />\r\n\r\n                                {this.getRecordId() != null ? <LinkEditAndAction id={id} /> : null}\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                    <ButtonAddTopic addDiscussionTopic={this.addDiscussionTopic} />\r\n                    {this.getRecordId() == null ?\r\n                    <Card title=\"Action\">\r\n                        <SubmitResetButton submitText={\"Create\"} withReset={true} />\r\n                    </Card>\r\n                        : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormAddDiscussionTopic = (props) => {\r\n    return (\r\n        <ModalBackdrop >\r\n            <div className=\"container\">\r\n                <Card title=\"Tambah Tema Pembahasan\"\r\n                    headerIconClassName=\"fas fa-times\"\r\n                    headerIconOnClick={props.onClose}\r\n                >\r\n                    <form onSubmit={props.onSubmit}>\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={\"content\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={\"decision\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={\"deadline_date\"} type=\"date\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={\"person_in_charge\"} />\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </ModalBackdrop>\r\n    )\r\n}\r\n\r\nconst extractTopicDiscussionIndexAndName = (elementName) => {\r\n    const result = {\r\n        index: 0,\r\n        name: null,\r\n    }\r\n    let elementNameSplitKey = elementName.split(TOPIC_PREFIX);\r\n    let elementNameSplitIndex = elementNameSplitKey[1].split(\"_\");\r\n    result.index = parseInt(elementNameSplitIndex[0]);\r\n    result.name = elementName.split(TOPIC_PREFIX + result.index + \"_\")[1];\r\n    return result;\r\n}\r\n\r\nconst ButtonRemoveTopic = (props) => {\r\n\r\n    return (\r\n        <a className=\"button is-danger is-outlined\" onClick={(e) => props.removeDiscussionTopic(props.id)}>\r\n            <span className=\"icon\"><i className=\"fas fa-times\" /></span>\r\n            <span>Remove</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst DiscussionTopicStatusInfo = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    if (null == meetingNote) return null;\r\n    const discussion_topics = meetingNote.discussion_topics;\r\n    if (null == discussion_topics) return null;\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed) {\r\n            closed++;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table><tbody><tr >\r\n            <td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-medium\">\r\n                    <span className=\"tag is-light\">Closed</span>\r\n                    <span className=\"tag is-info\">{closed}</span>\r\n                </div>\r\n            </td><td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-medium\">\r\n                    <span className=\"tag is-light\">Not Closed</span>\r\n                    <span className=\"tag is-danger\">{discussion_topics.length - closed}</span>\r\n                </div></td>\r\n        </tr></tbody></table>\r\n    )\r\n}\r\n\r\nconst ButtonAddTopic = (props) => {\r\n    return (\r\n        <div className=\"has-text-centered\">\r\n            <a className=\"button is-primary is-outlined\" onClick={props.addDiscussionTopic}\r\n                style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>{\"Tambah Tema Pembahasan\"}</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    const id = props.id;\r\n    return (\r\n        <div className=\"buttons has-addons\">\r\n            <Link to={\"/discussiontopics/\" + id} className=\"button is-warning\">\r\n                <i className=\"fas fa-edit\" />&nbsp;Edit\r\n            </Link>\r\n            <Link to={\"/discussiontopics/\" + id + \"/action\"} className=\"button is-primary\">\r\n                <i className=\"fas fa-location-arrow\" />&nbsp;Konfirmasi\r\n            </Link></div>\r\n    )\r\n}\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\nconst FormUpperTag = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div className=\"level\">\r\n                <div className=\"level-left\" >\r\n                    <DiscussionTopicStatusInfo meetingNote={meetingNote} />\r\n                </div>\r\n                <div className=\"level-right\">\r\n                    <span className=\"tag is-primary is-medium\">{meetingNote.departement.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Profile</CommonTitle>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\nexport default class IssuesService\r\n{\r\n    static instance = IssuesService.instance || new IssuesService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'issue',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    delete = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/delete/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    followUpIssue = (followUp) => {\r\n        const request = {\r\n            followed_up_issue: followUp\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/followup\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport Columns from './../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nclass IssuesList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Aduan\", \"issue\");\r\n        this.state = {}\r\n        this.issueService = IssuesService.instance;\r\n\r\n        //overrid\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.issueService.delete,\r\n                id,\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.issueService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Aduan\";\r\n    }\r\n\r\n    //overrid baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.isLoggedUserNull()) {return null;}\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Aduan</CommonTitle>\r\n                <Card title=\"Daftar Aduan\">\r\n                {!isAdmin?null:this.linkToFormCreate(\"/issues/create\", \"Tambah Aduan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'date', withFilter: true },\r\n                                    { text: 'place', withFilter: true },\r\n                                    { text: 'content', withFilter: true },\r\n                                    { text: 'issuer', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'issue_input', withFilter: true },\r\n                                    { text: 'status'},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.content}</td>\r\n                                    <td>{item.issuer}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.issue_input}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {isAdmin?\r\n                                        <>\r\n                                        <Link to={\"/issues/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        {this.buttonDeleteRecord(item.id, false)}\r\n                                        </>\r\n                                        :null}\r\n                                        <Link to={\"/issues/\" + item.id+\"/followup\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesList));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\n\r\nconst issue_sources = [\r\n    'Yayasan', 'Orang Tua', 'Santri', 'Tamu'\r\n]\r\n\r\nclass IssuesForm extends BaseAdminPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const issue = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    issue[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                issue.id = this.getRecordId();\r\n            }\r\n            this.store(issue);\r\n            console.debug(\"ISSUE: \", issue);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/issues/\"+response.issue.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (issue) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeIssue, issue,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.issue.departement_id;\r\n                } else {\r\n                    element.value = response.issue[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewIssue, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadDepartements();\r\n        document.title = \"Form Aduan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Aduan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Tanggal\" name=\"date\" type=\"date\" required={true} />\r\n                        <InputField label=\"Tempat\" name=\"place\" required={true} />\r\n                        <InputField label=\"Permasalahan\" name=\"content\" type=\"textarea\" required={true} />\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Sumber Aduan\" name=\"issue_input\" required={true} />\r\n                        <SelectField label=\"Pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(IssuesForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from './../../../services/IssuesService';\r\n\r\nconst FORM_ID = \"form-input-follow-up-issue\";\r\nclass IssuesFollowingUpForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailIssue: true,\r\n        }\r\n        this.issue = {};\r\n        this.issueService = IssuesService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailIssue:false});\r\n        }\r\n        this.showDetailIssue = () => {\r\n            this.setState({showDetailIssue:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                issue_id : this.issue.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.issue.follow_up = response.followed_up_issue;\r\n            this.issue.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.issue = response.issue;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (followUp) => {\r\n            this.commonAjax(this.issueService.followUpIssue, followUp,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.issueService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.issue != null && this.issue.is_closed == true;\r\n        }\r\n    } \r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        if(this.isLoggedUserNull()){\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Tindak Lanjut Aduan</CommonTitle>\r\n                \r\n                <Card title=\"Detail Aduan\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.issue.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailIssue? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Aduan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Waktu dan Tempat\">\r\n                                <p>{this.issue.place}, {dateStringDayMonthYearFromText(this.issue.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.issue.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Permasalahan\">\r\n                                <p>{this.issue.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pengadu\">\r\n                                <p>{this.issue.email}, {this.issue.issuer}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Sumber Input\">\r\n                                <p>{this.issue.issue_input}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailIssue}>Tampilkan Detail Aduan</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.issue.follow_up == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.issue.follow_up.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.issue.follow_up.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesFollowingUpForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\n\r\nclass DiscussionTopicsForm extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const discussionTopic = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    discussionTopic[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                discussionTopic.id = this.getRecordId();\r\n            }\r\n            this.store(discussionTopic);\r\n            console.debug(\"discussionTopic: \", discussionTopic);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/discussiontopics/\" + response.discussion_topic.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (discussionTopic) => {\r\n            this.commonAjax(\r\n                this.discussionTopicService.store, discussionTopic,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.recordData = response;\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false });\r\n\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = this.discussionTopic[element.name];\r\n                if (this.isClosed() == false && element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed() == true) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n        document.title = \"Form Tema Pembahasan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const title = this.title(\"Form Tema Pembahasan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title={formTitle} >\r\n                    {this.getRecordId() != null && this.discussionTopic != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <div className=\"tags has-addons are-medium\">\r\n                                    <span className=\"tag is-dark\">Status</span>\r\n                                    <span className=\"tag is-info\">{this.discussionTopic.is_closed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n                                </div></div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.discussionTopic.departement == null ? null : this.discussionTopic.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed() ? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkDetailMeetingNote = (props) => {\r\n    const note_id = props.note_id;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <Link to={\"/meetingnote/\" + props.note_id} className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-clipboard\"></i>\r\n                </span>\r\n                <span>Detail Notulensi</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DiscussionTopicsForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LinkDetailMeetingNote } from './DiscussionTopicsForm';\r\n\r\nconst FORM_ID = \"form-input-discussion-action\";\r\nclass DiscussionActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailDiscussionTopic: true,\r\n        }\r\n        this.discussionTopic = {};\r\n        this.discussionTopicSerivce = DiscussionTopicsService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailDiscussionTopic:false});\r\n        }\r\n        this.showDetailDiscussionTopic = () => {\r\n            this.setState({showDetailDiscussionTopic:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                topic_id : this.discussionTopic.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.discussionTopic.action = response.discussion_action;\r\n            this.discussionTopic.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.discussionTopicSerivce.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicSerivce.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Konfirmasi Tema Pembahasan\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n    render() {\r\n        \r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return null;\r\n        }\r\n        \r\n        const title = this.title(\"Penyelesaian/Pelaksanaan Keputusan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title=\"Detail Tema Pembahasan\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.discussionTopic.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    {this.state.showDetailDiscussionTopic? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tema Pembahasan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                        <LabelField label=\"Waktu\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.discussionTopic.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.discussionTopic.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.discussionTopic.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.discussionTopic.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailDiscussionTopic}>Tampilkan Detail Tema Pembahasan</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Penyelesaian/Pelaksanaan Keputusan\">\r\n                    {this.discussionTopic.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.discussionTopic.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.discussionTopic.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionActionForm));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { getDiffDaysToNow } from './../../../utils/DateUtil';\r\n\r\nclass DiscussionTopicsList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Topik Pembahasan\", \"discussiontopic\");\r\n        this.state = {}\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => {\r\n            // this.commonAjax(\r\n            //     this.discussionTopicService.delete,\r\n            //     id,\r\n            //     this.onSuccessDelete,\r\n            //     this.onErrorDelete\r\n            // )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.discussionTopicService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Tema Pembahasan\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Daftar Tema Pembahasan</h2>\r\n                <Card title=\"Daftar Tema Pembahasan\">\r\n\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'content', alias: \"Pembahasan\", withFilter: true },\r\n                                        { text: 'decision', alias: \"Keputusan\", withFilter: true },\r\n                                        { text: 'deadline_date', alias: \"Deadline\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'status' },\r\n                                        { text: 'action' },\r\n                                        { text: 'opsi' },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record_\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                            <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                            <td>{item.deadline_date}</td>\r\n                                            <td>{item.departement.name}</td>\r\n                                            <td>\r\n                                                {item.is_closed == true ?\r\n                                                <>\r\n                                                    <span className=\"tag is-info\">Closed</span>\r\n                                                    {item.action==null?\"-\":item.action.date}\r\n                                                  </>  :\r\n                                                    <span className=\"tag is-warning\">Not Closed</span>}\r\n                                            </td>\r\n                                            <td><LinkEditAndAction id={item.id} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={\"/meetingnote/\"+item.note_id} \r\n                                                className=\"button is-light is-small\">\r\n                                                    <span className=\"icon\">\r\n                                                        <i className=\"fas fa-clipboard\"/>\r\n                                                    </span>\r\n                                                    <span>Notulensi</span>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    return (\r\n        <>\r\n            <Link to={\"/discussiontopics/\" + props.id} className=\"button is-small\" >\r\n                <i className=\"fas fa-edit\"></i>\r\n            </Link>\r\n\r\n            <Link to={\"/discussiontopics/\" + props.id + \"/action\"} className=\"button is-primary is-small\" >\r\n                <i className=\"fas fa-location-arrow\"></i>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionTopicsList));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport { getDiffDaysToNow } from '../../../utils/DateUtil';\r\nimport MeetingNoteSerivce from './../../../services/MeetingNoteSerivce';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass MeetingNoteList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Notulensi\", \"notes\");\r\n        this.state = {}\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => { }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.meetingNoteService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Notulensi\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Notulensi</CommonTitle>\r\n                <Card title=\"Daftar Notulensi\">\r\n\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table style={{   }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', alias:\"Id\", withFilter: true },\r\n                                    { text: 'date', alias:\"Tanggal\", withFilter: true },\r\n                                    { text: 'place', alias:\"Tempat\", withFilter: true },\r\n                                    { text: 'departement', alias:\"Bidang\", withFilter: true },\r\n                                    { text: 'user', alias:\"Notulis\", withFilter: true },\r\n                                    { text: 'Topik Diskusi', },\r\n                                    { text: 'Closed', },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                const deadlineDate = Date.parse(item.deadline_date);\r\n                                const style = {};\r\n                                try {\r\n                                    const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n                                    \r\n                                    if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                        style.backgroundColor = 'orange';\r\n                                    } else if (item.is_closed == false && diffDay < 0) {\r\n                                        style.backgroundColor = 'red';\r\n                                    }\r\n                                } catch (e) {\r\n                                    //\r\n                                }\r\n                                return (<tr key={\"record-meeting-note-\"+i} style={style}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.departement?item.departement.name:\"-\"}</td>\r\n                                    <td>{item.user?item.user.name:\"-\"}</td>\r\n                                    <td>\r\n                                        {item.discussion_topics?item.discussion_topics.length:0}\r\n                                    </td>\r\n                                    <td>\r\n                                        {calculateClosedTopic(item.discussion_topics)}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkEditPage id={item.id}/>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst calculateClosedTopic = (discussion_topics) => {\r\n    if (null == discussion_topics) {\r\n        return 0;\r\n    }\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed == true) {\r\n            closed++;\r\n        }\r\n    }   \r\n    return closed;\r\n}\r\n\r\nconst LinkEditPage = (props) => {\r\n    return (\r\n        <Link to={\"/meetingnote/\" + props.id} className=\"button is-small\" >\r\n        <i className=\"fas fa-edit\"></i>\r\n    </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteList));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport Profile from '../pages/Profile';\r\nimport IssuesList from '../pages/issues/IssuesList';\r\nimport IssuesForm from '../pages/issues/IssuesForm';\r\nimport IssuesFollowingUpForm from '../pages/issues/IssuesFollowingUpForm';\r\nimport DiscussionActionForm from '../pages/discussiontopics/DiscussionActionForm';\r\nimport DiscussionTopicsForm from '../pages/discussiontopics/DiscussionTopicsForm';\r\nimport DiscussionTopicsList from '../pages/discussiontopics/DiscussionTopicsList';\r\nimport MeetingNoteList from '../pages/meetingnotes/MeetingNoteList';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          {/* ========= meeting notes ========= */}\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote\" render={\r\n            (props) =>\r\n              <MeetingNoteList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          {/* ======== issues ========= */}\r\n          <Route exact path=\"/issues\" render={\r\n            (props) =>\r\n              <IssuesList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/create\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id/followup\" render={\r\n            (props) =>\r\n              <IssuesFollowingUpForm app={this.props.app} />\r\n          } />\r\n          {/* ======== discussiontopics ========= */}\r\n          <Route exact path=\"/discussiontopics\" render={\r\n            (props) =>\r\n              <DiscussionTopicsList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id/action\" render={\r\n            (props) =>\r\n              <DiscussionActionForm app={this.props.app} />\r\n          } />\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* ============== users management ============= */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* ================ departements management ============= */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      // <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000, color: '#ccc'}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    )\r\n  }\r\n}","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nimport SideBar from './components/layout/SideBar';\nimport './components/layout/SideBar.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert\n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section style={{ minHeight: '70vh' }}>\n          <div >\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\" style={{ minHeight: '70vh', marginBottom: '1px' }}>\n            <div style={{ paddingTop: '20px', paddingLeft: '20px' }}\n              className=\"menu-container column is-one-fifth has-background-water-ter\">\n              \n                <SideBar app={this} />\n               \n            </div>\n            <div className=\"column is-four-fifths\">\n\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    meetingNoteData: null,\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) { \r\n        case types.GET_MEETING_NOTES:\r\n            let result = {\r\n                ...state,\r\n                meetingNoteData: action.payload\r\n            };\r\n            console.debug(\"action.meetingNoteData: \", result.meetingNoteData);\r\n            return result;\r\n        \r\n        default:\r\n            return { ...state };\r\n             \r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as meetingNotesReducer from \"./meetingNotesReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        managementState: managementReducer.reducer,\r\n        meetingNoteState: meetingNotesReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    managementState: managementReducer.initState,\r\n    meetingNoteState: meetingNotesReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            })\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    } \r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const getMeetingNotesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MEETING_NOTES) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        // .then(response => response.json())\r\n        .then(result => {\r\n            const response = result.data;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    ...response\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const storeMeetingNote = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {\r\n         headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json()]); })\r\n        .then(response => {\r\n            alert(\"Success storeMeetingNote\");\r\n        })\r\n        .catch(err => { alert(\"Error storeMeetingNote\");console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as meetingNoteMiddleware from '../middlewares/MeetingNoteMiddleware'\r\nimport * as common from '../middlewares/Common';\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            meetingNoteMiddleware.getMeetingNotesMiddleware, \r\n\r\n            /*enntity management*/\r\n            // managementMiddleware.getEntityListMiddleware,\r\n            // managementMiddleware.getEntityByIdMiddleware,\r\n            // managementMiddleware.updateEntityMiddleware,\r\n            // managementMiddleware.removeManagedEntityMiddleware, \r\n            // managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            // managementMiddleware.getEntityPropertyMiddleware,\r\n            // managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            // realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            // realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}