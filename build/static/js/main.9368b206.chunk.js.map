{"version":3,"sources":["logo.svg","constant/Url.js","redux/actions/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/BaseMenus.js","constant/Menus.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","components/container/Card.js","components/buttons/buttons.js","utils/StringUtil.js","components/pages/dashboard/PieChart.js","middlewares/Common.js","services/Promises.js","services/RecordHistoriesService.js","components/forms/commons.js","components/pages/dashboard/Statistic.js","constant/ApplicationDataKeys.js","components/pages/dashboard/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","services/MasterDataService.js","components/buttons/NavButtons.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","services/DiscussionTopicsService.js","utils/ComponentUtil.js","components/messages/Alert.js","components/pages/meetingnotes/DiscussionTopicPopupForm.js","components/pages/meetingnotes/componentHelper.js","components/pages/meetingnotes/logicHelper.js","components/pages/meetingnotes/MeetingNoteForm.js","services/UserService.js","components/pages/Profile.js","services/IssuesService.js","components/pages/issues/IssuesList.js","components/pages/issues/IssuesForm.js","utils/DateUtil.js","components/messages/ClosedStatus.js","components/pages/issues/IssuesFollowingUpForm.js","components/pages/discussiontopics/DiscussionTopicsForm.js","components/pages/discussiontopics/DiscussionActionForm.js","components/pages/meetingnotes/MeetingNoteList.js","components/pages/discussiontopics/DiscussionTopicsList.js","components/pages/errors/NotFound.js","components/pages/issues/IssueFormPublic.js","components/layout/Content.js","components/widget/Loader.js","components/layout/SideBar.js","App.js","redux/userReducer.js","redux/applicationReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/ApplicationMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","accountAction","app","startLoading","type","payload","meta","email","password","user","applicationAction","key","data","Footer","className","href","Component","BaseComponent","props","authenticated","state","updated","Date","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","getLoggedUser","isLoggedUserAdmin","isLoggedUserNull","role","getLoggedUserDepartementName","departement","name","showConfirmation","body","Promise","resolve","reject","showAlert","e","showConfirmationDanger","showAlertError","showInfo","showError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","console","warn","commonAjax","commonErrorCallback","commonAjaxWithProgress","error","title","refresh","setState","this","CommonTitle","style","textAlign","marginLeft","children","BaseMenus","shownMenuList","id","hideMenuList","isMenuListShown","toggleMenuList","menuName","target","getAttribute","menuChildren","i","length","element","MENUS","link","iconClassName","Header","showBurger","toggleNavBurger","performLogout","accepted","backgroundColor","to","src","width","height","onClick","map","menu","childs","extractChildren","Fragment","menu-name","marginRight","linkProperty","j","display_name","AppLink","withRouter","connect","userState","dispatch","actions","Message","show","hide","enableHidden","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","handleSubmit","event","preventDefault","form","FormData","elements","performLogin","showLoginInfo","loginFailed","current","ref","marginTop","onSubmit","fontSize","nam","placeholder","required","requestId","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","headerIconClassName","iconOnClick","headerIconOnClick","margin","withButtonFooter","footerContent","HeaderIcon","aria-hidden","AnchorWithIcon","AttachmentLink","getExtension","splitted","split","extension","showExtension","index","RAD","Math","PI","PieChart","string","getUTCMilliseconds","uniqueId","getTime","proportions","showDetail","timeoutId","accumulationDegree","updatePie","canvas","ctx","getContext","clearRect","fillStyle","currentRad","currentDegree","x","circleX","y","proportion","endAngle","color","strokeStyle","beginPath","arc","fill","coord","calculatePosition","moveTo","lineTo","labelCoord","font","fillText","label","parseFloat","toFixed","radians","mainCoord","calculateCoordinate","rad","deg","PIE_W","accDegree","radius","newX","newY","quad","getQuadrant","adjustedX","abs","cos","adjuxtedY","sin","toggleDetail","proportionIsFixed","stateProp","prop","getPropsProportion","sumValues","proportionIsEmpty","sort","a","b","animate","requestAnimation","clearTimeout","setTimeout","resetProportion","val","overflowX","DetailPie","padding","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","headers","code","RecordHistoriesService","getStatistic","departement_id","filter","fieldsFilter","instance","CapitalizeFirstLetter","rawString","String","result","toUpperCase","TableHeadWithFilter","onButtonOrderClick","alias","text","withFilter","InputFormFilter","ButtonApplyResetFilter","InputField","setDateInput","date","toISOString","orientation","undefined","attributes","note","SelectField","options","option","LabelField","SubmitResetButton","submitValue","submitText","submitIconClassName","submitButtonClassName","withReset","Statistic","getDiscussionTopicProportion","statisticData","statistic","total_topic","topic_count","topic_closed_count","topic_not_closed_count","getIssueProportion","total_issue","issue_count","issue_closed_count","issue_not_closed_count","errorLoadingStatistic","pieChartChildTopic","pieChartChildIssue","historiesService","departementList","loadStatisticWithDepartement","loadStatistic","statisticLoaded","departements","storeApplicationData","statisticFailedToLoad","discussionTopicProportions","issueProportions","departementListMapped","departementOptions","ErrorInfo","applicationData","applicationState","Dashboard","BaseAdminPage","ManagementMenu","MasterManagementService","setUsersData","usersData","storeUser","userModel","storeIssue","issue","viewUser","userList","list","viewIssue","issueList","storeDepartement","viewDepartement","deleteRecord","departementsData","NavButtons","buttonValues","generateButtonValues","limit","totalData","activeIndex","buttonsData","currentPage","displayed_buttons","buttonCount","ceil","min","max","BaseManagementPage","loadRecords","readInputForm","inputs","getElementsByClassName","masterDataServce","page","count","orderBy","orderType","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","withText","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","populateDefaultInputs","hasOwnProperty","navButtons","createNavButton","recordList","result_list","formComponent","overflow","item","indexBegin","DeparementManagement","removeDataFromStore","record_id","find","dep","splice","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","debug","match","departementListLoaded","loadRecord","recordSaved","handleSuccessGetRecord","recordFailedToSave","loadDepartements","handleErrorGetRecord","formTitle","DepartementManagementForm","updateLocallyStoredDepartements","MeetingNoteSerivce","meetingNote","meeting_note","view","DiscussionTopicsService","discussionTopic","discussion_topic","storeAction","action","discussion_action","getAttachmentData","input","file","files","lastDot","lastIndexOf","ext","size","reader","FileReader","readAsDataURL","onload","attachmentData","isFile","onerror","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","ModalBackdrop","DiscussionTopicPopupForm","discussionTopicService","onSubmitDiscussionTopic","window","confirm","note_id","storeDiscussionTopic","discussionTopicSaved","handleErrorSubmitDiscussionTopic","alert","onSuccess","TOPIC_PREFIX","DiscussionTopicCommonInputs","inputPrefix","FormTitle","ButtonRemoveTopic","removeDiscussionTopic","DiscussionTopicStatusInfo","discussion_topics","closed","is_closed","border","ButtonAddTopic","addDiscussionTopic","AttachmentInfo","cursor","onRemoveClick","LinkEditAndAction","ClosedInfoTag","FormUpperTag","LabelDiscussionTopicCount","MeetingNoteSubmitResetField","getDiscussionTopic","deleteArrayValueWithKeyStartedWith","object","prefix","startsWith","extractTopicDiscussionIndexAndName","elementName","elementNameSplitIndex","parseInt","FORM_ID","MeetingNoteForm","discussionTopicCount","showFormDiscussionTopicInEditMode","meetingNoteService","attachmentsData","form_temporary_inputs","isSubmitting","saveFormInputsToTemporaryData","getMaxDiscussionTopicID","ok","doRemoveDiscussionTopic","array","getArrayIndexWithValue","deleteTempFormData","setInputsFromTemporaryData","disabled","setAttribute","populateInputs","values","extractInputValues","fillDataAndStore","rawInputs","original","toMerge","mergeObject","Object","keys","forEach","currentDiscussionTopicID","currentDiscussionTopicIndex","indexAndName","extractMeetingNoteObject","storeMeetingNote","addAttachmentData","removeAttachment","discussionTopics","tempData","extractMeetingNoteObjectToTempData","enableInputs","removeAttribute","enableAllInputs","reset","getUserName","isClosed","isDiscussionTopicClosed","onChange","attachment","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","IssuesService","storePublicIssue","followUpIssue","followUp","followed_up_issue","IssuesList","issueService","isAdmin","place","content","issuer","issue_input","issue_sources","IssuesForm","record","updateAttachmentData","appData","source","accept","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","getDiffDaysToNow","ClosedStatus","IssuesFollowingUpForm","showDetailIssue","hideDetailIssue","issue_id","handleSuccessSubmit","follow_up","DiscussionTopicsForm","LinkDetailMeetingNote","DiscussionActionForm","showDetailDiscussionTopic","discussionTopicSerivce","topic_id","handleErrorSubmit","decision","deadline_date","person_in_charge","MeetingNoteList","deadlineDate","parse","diffDay","discussion_topics_count","discussion_topics_closed_count","LinkToFormCreate","LinkEditPage","DiscussionTopicsList","NotFound","class","IssueFormPublic","captchaUpdate","recordSave","captcha","firstNumber","secordNumber","operator","updatedAt","resetCaptcha","floor","random","validateCaptcha","number1","number2","capchaResult","getElementsByName","captchaValidated","departementListNotLoaded","CaptCha","canvas_id","context","getCaptchaText","drawCanvas","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","component","Home","Loader","opacity","position","zIndex","SideBar","menuChild","App","menus","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","additionalMenus","Array","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","paddingTop","paddingLeft","borderRight","initState","loginKey","loginAttempt","applicationProfile","reducer","api_token","rootReducer","combineReducers","userReducer","applicationReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","assign","err","param","requestAppIdMiddleware","message","get","performLogoutMiddleware","logoutSuccess","configureStore","createStore","applyMiddleware","userMiddleware","Root","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9368b206.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from '../types'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n\r\n \r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const applicationAction = {\r\n    /**\r\n     * @param {String} key\r\n     * @param {*} data\r\n     */\r\n    storeApplicationData: (key, data) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                data:data,\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.STORE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    removeApplicationData: (key) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.REMOVE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n export const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const STORE_APPLICTION_DATA = \"store-app-data\";\r\nexport const REMOVE_APPLICTION_DATA = \"remove-app-data\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">KIIS Jakarta</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import  React , {Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.state = {\r\n            updated:new Date()\r\n        }\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return true;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.getLoggedUser = () => {\r\n            return this.props.loggedUser;\r\n        }\r\n        this.isLoggedUserAdmin = () => {\r\n            return this.isLoggedUserNull() == false && this.getLoggedUser().role == 'admin';\r\n        }\r\n        this.getLoggedUserDepartementName = () => {\r\n            if (this.isLoggedUserNull()) return null;\r\n            return this.getLoggedUser().departement.name;\r\n        }\r\n        this.isLoggedUserNull = () => {\r\n            return false == this.props.loginStatus || null == this.props.loggedUser;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showConfirmationDanger = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated || this.props.history == null) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback = null) => {\r\n            if (null == errorCallback) errorCallback = this.commonErrorCallback;\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n\r\n        this.commonErrorCallback = (e) => {\r\n            console.error(e);\r\n            this.showError(\"Operation Failed: \"+e);\r\n        }\r\n\r\n        this.title = (title) => {\r\n            return <CommonTitle>{title}</CommonTitle>\r\n        }\r\n        this.refresh = () => {\r\n            this.setState({updated:new Date()});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated && null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n\r\nexport const CommonTitle = (props) => {\r\n    return <h2 style={{ textAlign: 'left', marginLeft:'10px' }}>{props.children}</h2>\r\n}\r\n\r\nexport const  mapCommonUserStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nexport default class BaseMenus extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            shownMenuList: {}\r\n        }\r\n\r\n        this.shownMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = true;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.hideMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = false;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.isMenuListShown = (id) => {\r\n            return this.state.shownMenuList[id] == true;\r\n        }\r\n        this.toggleMenuList = (e) => {\r\n            const menuName = e.target.getAttribute(\"menu-name\");\r\n            if (this.isMenuListShown(menuName)) {\r\n                this.hideMenuList(menuName);\r\n            } else {\r\n                this.shownMenuList(menuName);\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    extractChildren(menuChildren) {\r\n        const children = [];\r\n        for (let i = 0; i < menuChildren.length; i++) {\r\n            const element = menuChildren[i];\r\n            if (element.authenticated && this.isLoggedUserNull()) {\r\n                continue;\r\n            }\r\n            if (this.isLoggedUserNull() == false && element.role != null && this.getLoggedUser().role != element.role) {\r\n                continue;\r\n            }\r\n            children.push(element);\r\n        }\r\n\r\n        return children;\r\n    }\r\n    \r\n\r\n}\r\n","\r\nexport const MENUS = [\r\n    {\r\n        name: 'Umum',\r\n        children: [\r\n            {\r\n                name: 'Home',\r\n                link: '/home',\r\n                iconClassName: 'fas fa-home',\r\n            }, {\r\n                name: 'Dashboard',\r\n                link: '/dashboard',\r\n                iconClassName: 'fas fa-tachometer-alt',\r\n                authenticated: true,\r\n\r\n            }, {\r\n                name: 'Aduan',\r\n                link: '/issues-public',\r\n                iconClassName: 'fas fa-envelope-open-text',\r\n                // authenticated: true,\r\n            }]\r\n    }, {\r\n        name: 'Notulensi',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/discussiontopics',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        }, {\r\n            name: 'Tambah Notulensi',\r\n            link: '/meetingnote/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n        }]\r\n    }, {\r\n        name: 'Aduan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/issues',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        },\r\n        {\r\n            name: 'Tambah',\r\n            link: '/issues/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n            role: 'admin'\r\n        }]\r\n    // }, {\r\n    //     name: 'Tema Pembahasan',\r\n    //     children: [{\r\n    //         name: 'List',\r\n    //         link: '/discussiontopics',\r\n    //         authenticated: true,\r\n    //         iconClassName: 'fas fa-list',\r\n    //     }]\r\n    }, {\r\n        name: 'Master Data',\r\n        children: [\r\n            {\r\n                name: 'Menu',\r\n                link: '/management',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                // iconClassName: 'fas fa-database'\r\n            },\r\n            {\r\n                name: 'User',\r\n                link: '/management/users',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-users',\r\n            }, {\r\n                name: 'Bidang',\r\n                link: '/management/departements',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-object-group',\r\n            }]\r\n    }\r\n]\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport './SideBar.css'\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\n\r\nclass Header extends BaseMenus {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            showBurger: false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({ showBurger: !this.state.showBurger })\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link style={{ backgroundColor: '#fff' }} className=\"navbar-item\" to=\"/\">\r\n                            <img src=\"kiis-stroke.png\" width=\"38\" height=\"38\" />\r\n                        </Link>\r\n                        <div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"topNav\" className={this.state.showBurger ? \"is-active navbar-menu\" : \" navbar-menu\"}>\r\n                        <div className=\"navbar-start\">\r\n                            {MENUS.map((menu, i) => {\r\n                                const childs = this.extractChildren(menu.children);\r\n                                if (childs == null || childs.length == 0) { return null; }\r\n                                const isMenuListShown = this.isMenuListShown(menu.name);\r\n                                const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                                return (\r\n                                    <React.Fragment key={\"NavMenu_\" + menu.name}>\r\n                                        <p style={{ marginLeft: '10px' }} onClick={this.toggleMenuList} menu-name={menu.name} className=\"menu-label\">\r\n                                            <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                            {menu.name}  </p>\r\n                                        {isMenuListShown ?\r\n                                            <ul className=\"menu-list\">\r\n                                                {childs.map((linkProperty, j) => {\r\n                                                    return <AppLink key={\"header-link-\" + j + \"-\" + i} loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                                                })}\r\n                                            </ul> : null}\r\n                                    </React.Fragment>)\r\n                            })}\r\n                        </div>\r\n                        <div className=\"navbar-end\">\r\n                            <div className=\"navbar-item\">\r\n                                <div className=\"buttons has-addons\">\r\n\r\n                                    {this.props.loginStatus ?\r\n                                        <><Link className=\"button is-info\" to=\"/profile\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                        </Link>\r\n                                            <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                                <span className=\"icon\">\r\n                                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                                </span>\r\n                                                <span>Logout</span>\r\n                                            </a>\r\n                                        </> :\r\n                                        <Link className=\"button is-info\" to=\"/login\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>Login</span>\r\n                                        </Link>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    const iconClassName = linkProperty.iconClassName ? linkProperty.iconClassName : 'fas fa-folder';\r\n    if (null == linkProperty.link) {\r\n        return null;\r\n    }\r\n\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if (linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >\r\n            <span className=\"icon\"><i className={iconClassName} /></span>\r\n            <span>\r\n                {linkProperty.name}\r\n            </span>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header))\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            if (this.props.enableHidden){\r\n                this.setState({show:false});\r\n            }\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                    {this.props.children}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-5-desktop is-5-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field has-text-centered\">\r\n                            <span style={{fontSize:'70px'}}><i className=\"fas fa-user-circle\"/></span>\r\n                            <p>Sign In</p>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. user@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const iconClassName = this.props.headerIconClassName;\r\n        const iconOnClick = this.props.headerIconOnClick;\r\n\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style }}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    {null == iconClassName ? null : <HeaderIcon className={iconClassName} onClick={iconOnClick} /> }\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst HeaderIcon = (props) => {\r\n    return (\r\n        <a className=\"card-header-icon\" aria-label=\"more options\" onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={props.className} aria-hidden=\"true\"></i>\r\n            </span>\r\n        </a>\r\n    );\r\n}","import  React  from 'react';\r\nimport { contextPath } from './../../constant/Url';\r\n\r\nexport const AnchorWithIcon = (props) => {\r\n    const className = props.className;\r\n    const iconClassName = props.iconClassName;\r\n    if (props.show == false)  return null;\r\n    return (\r\n        <a className={\"button \" +className} style={props.style} onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={iconClassName}></i>\r\n            </span>\r\n            <span>{props.children}</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport const AttachmentLink = (props) => {\r\n    if (props.show == false) {return null}\r\n    const link = contextPath()+ props.to;\r\n    const getExtension = function(link) {\r\n        const splitted = link.split(\".\");\r\n        try {\r\n            return splitted[splitted.length-1];\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n    const extension = props.showExtension && getExtension(link) ? \" | \"+getExtension(link) : null;\r\n    return (\r\n        <a href={link} target=\"_blank\" className={\"button is-small\"} style={props.style}  >\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-link\"></i>\r\n            </span>\r\n            <span>attachment {extension}</span>\r\n        </a>\r\n    )\r\n}","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport const replaceString = (string, toReplace, replacement) => {\r\n\ttry {\r\n\t\tconst splitted = new String(string).split(toReplace);\r\n\t\treturn splitted.join(replacement);\r\n\t} catch (error) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n \r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst rawVal = parseInt(val);\r\n\tlet nominal =  Math.abs(val).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif(rawVal < 0){\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { AnchorWithIcon } from '../../buttons/buttons';\r\nimport { uniqueId } from './../../../utils/StringUtil';\r\n\r\nconst PIE_W = 100, RAD = 2 * Math.PI;\r\nconst MAX_DEG = 360;\r\nconst PIE_CANVAS_SIZE = 300;\r\nconst circleX = 150, circleY = 150;\r\nexport default class PieChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = uniqueId() + \"_\" + (new Date().getTime()) + (\"_pie_chart_canvas\");\r\n        this.state = {\r\n            proportions: [],\r\n            showDetail: false\r\n        }\r\n        this.timeoutId = null;\r\n        this.accumulationDegree = 0;\r\n\r\n        this.updatePie = () => {\r\n            this.accumulationDegree = 0;\r\n            const proportions = this.state.proportions;\r\n\r\n            const canvas = document.getElementById(this.id);\r\n            if (null == canvas) {\r\n                return;\r\n            }\r\n            const ctx = canvas.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.fillStyle = '#ccc';\r\n            let currentRad = RAD;\r\n            let currentDegree = 0;\r\n            let x = circleX + PIE_W, y = circleY;\r\n\r\n\r\n            for (let i = 0; i < proportions.length; i++) {\r\n\r\n                const element = proportions[i];\r\n\r\n                if (element.proportion <= 0) { continue; }\r\n\r\n                const endAngle = currentRad - element.proportion * RAD;\r\n                ctx.fillStyle = element.color;\r\n                ctx.strokeStyle = element.color;\r\n                ctx.beginPath();\r\n                ctx.arc(circleX, circleY, PIE_W, currentRad, endAngle, true);\r\n                // ctx.stroke();\r\n                ctx.fill();\r\n\r\n                currentDegree = element.proportion * MAX_DEG;\r\n                this.accumulationDegree += currentDegree;\r\n                const coord = this.calculatePosition(endAngle, element.proportion, ctx);\r\n\r\n                ctx.fillStyle = element.color;\r\n                //drawLine\r\n                if (element.proportion < 0.5) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(circleX, circleY);\r\n                    ctx.lineTo(x, y);\r\n\r\n                    ctx.lineTo(coord.x, coord.y);\r\n                    // ctx.stroke();\r\n                    ctx.fill();\r\n                }\r\n\r\n                //drawLabel\r\n                const labelCoord = coord.labelCoord;\r\n                ctx.font = \"15px Arial\";\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(element.label + \" \" + parseFloat(100 * element.proportion).toFixed(2) + \"%\", labelCoord.x, labelCoord.y);\r\n\r\n                x = coord.x;\r\n                y = coord.y;\r\n\r\n                currentRad = endAngle;\r\n            }\r\n        }\r\n\r\n        this.calculatePosition = (radians, value, ctx) => {\r\n            const mainCoord = this.calculateCoordinate(radians,\r\n                this.accumulationDegree, PIE_W);\r\n            //for label\r\n            const rad = value * RAD / 2;\r\n            const deg = value * MAX_DEG / 2;\r\n            const labelCoord = this.calculateCoordinate(radians - rad,\r\n                this.accumulationDegree - deg, PIE_W / 2);\r\n            return { ...mainCoord, labelCoord: labelCoord };\r\n        }\r\n\r\n        this.calculateCoordinate = (radians, accDegree, radius) => {\r\n\r\n            let newX = 0, newY = 0;\r\n            const quad = this.getQuadrant(accDegree);\r\n\r\n            const adjustedX = Math.abs(radius * Math.cos(radians));\r\n            const adjuxtedY = Math.abs(radius * Math.sin(radians));\r\n            if (quad == 1) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n\r\n            } else if (quad == 2) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n            } else if (quad == 3) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            } else if (quad == 4) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            }\r\n            // ctx.fillRect(newX-5, newY-5, 10, 10);\r\n            return { x: newX, y: newY }\r\n        }\r\n\r\n        this.getQuadrant = (value) => {\r\n            if (value <= 90) {\r\n                return 1;\r\n            }\r\n            if (value <= 180) {\r\n                return 2;\r\n            }\r\n            if (value <= 270) {\r\n                return 3;\r\n            }\r\n            return 4;\r\n        }\r\n\r\n        this.toggleDetail = () => {\r\n            this.setState({ showDetail: !this.state.showDetail });\r\n        }\r\n\r\n        this.proportionIsFixed = () => {\r\n            const stateProp = this.state.proportions;\r\n            const prop = this.getPropsProportion();\r\n            const fixed = this.sumValues(stateProp) >= this.sumValues(prop);\r\n            return fixed;\r\n        }\r\n\r\n        this.proportionIsEmpty = () => {\r\n            const stateProp = this.state.proportions;\r\n            const prop = this.getPropsProportion();\r\n\r\n            return this.sumValues(prop) == 0 || 0 == this.sumValues(stateProp);\r\n        }\r\n\r\n        this.getPropsProportion = () => {\r\n            const proportions = this.props.proportions;\r\n            proportions.sort(function (a, b) {\r\n                return b.proportion - a.proportion;\r\n            });\r\n            return proportions;\r\n        }\r\n\r\n        this.animate = () => {\r\n            const proportions = this.getPropsProportion();\r\n            // while (this.proportionIsFixed() == false) {\r\n\r\n            const stateProp = this.state.proportions;\r\n            for (let i = 0; i < proportions.length; i++) {\r\n                const element = proportions[i];\r\n                if (stateProp[i] == null) {\r\n                    stateProp.push({\r\n                        proportion: 0,\r\n                        value: element.value,\r\n                        label: element.label,\r\n                        color: element.color\r\n                    })\r\n                }\r\n                if (stateProp[i].proportion < element.proportion) {\r\n                    stateProp[i].proportion += 0.005;\r\n                }\r\n                if (stateProp[i].proportion >= element.proportion) {\r\n                    stateProp[i].proportion = element.proportion;\r\n                }\r\n            }\r\n            this.setState({ proportions: stateProp });\r\n            if (this.proportionIsFixed() == false) {\r\n                this.requestAnimation();\r\n            }\r\n        }\r\n        // }\r\n\r\n        this.requestAnimation = () => {\r\n            if (null != this.timeoutId) {\r\n                clearTimeout(this.timeoutId);\r\n            }\r\n            this.timeoutId = setTimeout(this.animate, 1);\r\n        }\r\n\r\n        this.resetProportion = () => {\r\n            this.setState({ proportions: [] });\r\n        }\r\n\r\n    }\r\n\r\n    sumValues(proportions) {\r\n        let val = 0;\r\n        for (let i = 0; i < proportions.length; i++) {\r\n            const element = proportions[i];\r\n            val += element.proportion;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n    componentDidUpdate() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ marginBottom: '20px' }}><h3>{this.props.title ? this.props.title : \"Grafik\"}</h3>\r\n                <div style={{ height: 'auto' }} className=\"columns\">\r\n\r\n                    <div className=\"column has-text-centered \" style={{ overflowX: 'scroll' }}>\r\n                        {this.proportionIsEmpty() ? <h2 style={{ height: PIE_CANVAS_SIZE }}>Tidak ada data</h2> :\r\n                            <canvas id={this.id} className=\"has-background-light\" width={PIE_CANVAS_SIZE} height={PIE_CANVAS_SIZE}></canvas>\r\n                        }\r\n                    </div>\r\n                    <div className=\"column \">\r\n                        <AnchorWithIcon style={{ marginBottom: '10px' }} onClick={this.toggleDetail}\r\n                            iconClassName={this.state.showDetail ? \"fas fa-angle-up\" : \"fas fa-angle-down\"}>{this.state.showDetail ? \"Close\" : \"Show\"} Detail</AnchorWithIcon>\r\n                        {this.state.showDetail ? <DetailPie proportions={this.state.proportions} /> : null}\r\n                    </div>\r\n                </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DetailPie = (props) => {\r\n    return (<article className=\"message\">\r\n        <div className=\"message-body\" style={{ overflowX: 'scroll' }}>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Warna</th>\r\n                        <th>Keterangan</th>\r\n                        <th>Nilai</th>\r\n                        <th>Presentase</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.proportions.map((proportion, i) => {\r\n                        return (\r\n                            <tr key={\"PIE_PROP_\" + i}>\r\n                                <td style={{ width: '20px' }}>{i + 1}</td>\r\n                                <td style={{ padding: '5px', width: '50px' }}>\r\n                                    <div style={{ width: '40px', height: '40px', backgroundColor: proportion.color, }} />                            </td>\r\n                                <td>{proportion.label}</td>\r\n                                <td>{proportion.value}</td>\r\n                                <td>{parseFloat(100 * proportion.proportion).toFixed(2)}%</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </article>)\r\n}","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class RecordHistoriesService {\r\n    static instance = RecordHistoriesService.instance || new RecordHistoriesService();\r\n    getStatistic = (departement_id = null) => {\r\n        const request = {\r\n            filter:{ fieldsFilter:{}}\r\n        }\r\n\r\n        if (null != departement_id) {\r\n            request.filter.fieldsFilter['departement_id'] = departement_id;\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/histories/statistic\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\nimport { replaceString } from '../../utils/StringUtil';\r\nimport { AnchorWithIcon } from './../buttons/buttons';\r\n\r\nexport const CapitalizeFirstLetter = (rawString) => {\r\n    if (null == rawString || rawString.length <= 1) {\r\n        return rawString;\r\n    }\r\n    const string = new String(rawString);\r\n\r\n    let splitted = string.split(\"_\");\r\n    if (splitted.length > 1) {\r\n        let result = \"\";\r\n        for (let i = 0; i < splitted.length; i++) {\r\n            const element = splitted[i];\r\n            result += CapitalizeFirstLetter(element) + \" \";\r\n        }\r\n\r\n        return result;\r\n    }\r\n    let result = (string).substring(0, 1).toUpperCase();\r\n    result += (string).substring(1, string.length);\r\n\r\n    return result;\r\n}\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                const label = header.alias ? header.alias : header.text;\r\n                return <th key={\"TH_\" + i}>{CapitalizeFirstLetter(label)}\r\n\r\n                    {header.withFilter ?\r\n                        <div className=\"field has-addons\">\r\n                            <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{ fontSize: '0.7em', backgroundColor: '#ccc' }}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n\r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n                <button type=\"submit\" className=\"button is-info\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-play\"></i>\r\n                    </span>\r\n                    <span>Apply Filter</span>\r\n                </button>\r\n                <button type=\"reset\" className=\"button is-danger\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-sync\"></i>\r\n                    </span>\r\n                    <span>Reset Filter</span>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport class InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = 'input-form-field-' + this.props.name;\r\n\r\n        this.setDateInput = (e) => {\r\n            const date = new Date().toISOString().substring(0, 10);\r\n            document.getElementById(this.id).value = date;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.debug(\"ID: \", this.id, this.props.required);\r\n        const props = {...this.props};\r\n        if (props.show == false) {\r\n            return null;\r\n        }\r\n\r\n        const className = \"input input-form-field \" + props.className;\r\n        const orientation = props.orientation ? props.orientation : \"horizontal\";\r\n        const label = props.label ? props.label : props.name;\r\n        if (this.props.required  != undefined && this.props.required == true) {\r\n            if (props.attributes == null) {\r\n                props.attributes = {\r\n                    required : \"required\"\r\n                };\r\n            } else {\r\n                props.attributes.required = \"required\";\r\n            }\r\n        }\r\n        return (\r\n            <div className={\"field is-\" + orientation}>\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">{CapitalizeFirstLetter(label)}</label>\r\n                    <AnchorWithIcon onClick={this.setDateInput} show={props.type == 'date'} className=\"is-small\" iconClassName=\"fas fa-history\">Today</AnchorWithIcon>\r\n                </div>\r\n                <div className=\"field-body\">\r\n                    <div className=\"field\">\r\n                        <div className=\"control\">\r\n\r\n                            {props.type == 'textarea' ?\r\n                                <textarea {...props.attributes} className={className + \" textarea\"} id={this.id} name={props.name}></textarea>\r\n                                :\r\n                                <input  {...props.attributes} type={props.type ? props.type : 'text'} id={this.id} name={props.name} className={className} />\r\n                            }\r\n                            {props.note ?\r\n                                <p><i>Note: {props.note}</i></p>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option, i) => {\r\n        return <option key={\"select-option-\" + i} value={option.value} >{option.text}</option>\r\n    })\r\n    const label = props.label ? props.label : props.name;\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{CapitalizeFirstLetter(label)}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select {...props.attributes} required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select  {...props.attributes} id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? CapitalizeFirstLetter(props.label) : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.value}\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    const submitIconClassName = props.submitIconClassName ? props.submitIconClassName : \"fas fa-save\";\r\n    const submitButtonClassName = props.submitButtonClassName ? \"button \" + props.submitButtonClassName : \"button is-link\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className={submitButtonClassName} type=\"submit\" style={{ marginRight: '10px' }} >\r\n                        <span className=\"icon\"><i className={submitIconClassName}></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport PieChart from './PieChart';\r\nimport RecordHistoriesService from './../../../services/RecordHistoriesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport Message from './../../messages/Message';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nimport { SubmitResetButton, SelectField, LabelField } from '../../forms/commons';\r\nconst COLOR_CLOSED = 'rgb(180,230,30)';\r\nconst COLOR_NOT_CLOSED = 'rgb(255,170,200)';\r\n\r\n\r\nclass Statistic extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            errorLoadingStatistic: false\r\n        };\r\n        this.pieChartChildTopic = React.createRef();\r\n        this.pieChartChildIssue = React.createRef();\r\n\r\n        this.historiesService = RecordHistoriesService.instance;\r\n        this.statisticData = null;\r\n        this.departementList = [];\r\n\r\n        this.loadStatisticWithDepartement = (e) => {\r\n            e.preventDefault();\r\n            const input = document.getElementById(\"input-form-field-departement\");\r\n            const departement_id = input.value;\r\n            if (departement_id == 'all') {\r\n                this.loadStatistic(null);\r\n                return;\r\n            }\r\n            this.loadStatistic(departement_id);\r\n        }\r\n\r\n        this.statisticLoaded = (response) => {\r\n            this.statisticData = response;\r\n            if (this.pieChartChildTopic.current) {\r\n                this.pieChartChildTopic.current.resetProportion();\r\n            }\r\n            if (this.pieChartChildIssue.current) {\r\n                this.pieChartChildIssue.current.resetProportion();\r\n            }\r\n\r\n            if (this.isLoggedUserAdmin()) {\r\n                this.departementList = response.statistic.departements;\r\n                this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.statisticFailedToLoad = (e) => {\r\n            console.error(e);\r\n            this.setState({ errorLoadingStatistic: true });\r\n        }\r\n        this.loadStatistic = (departement_id = null) => {\r\n            this.setState({ errorLoadingStatistic: false });\r\n            this.commonAjax(\r\n                this.historiesService.getStatistic, departement_id,\r\n                this.statisticLoaded,\r\n                this.statisticFailedToLoad,\r\n            )\r\n        }\r\n    }\r\n\r\n    getDiscussionTopicProportion = () => {\r\n        if (this.statisticData == null) { return null }\r\n        const statistic = this.statisticData.statistic;\r\n        const total_topic = statistic.topic_count;\r\n        const proportions = [\r\n            {\r\n                proportion: statistic.topic_closed_count / total_topic,\r\n                label: 'Closed',\r\n                color: COLOR_CLOSED,\r\n                value: statistic.topic_closed_count\r\n            },\r\n            {\r\n                proportion: statistic.topic_not_closed_count / total_topic,\r\n                label: 'Not Closed',\r\n                color: COLOR_NOT_CLOSED,\r\n                value: statistic.topic_not_closed_count\r\n            }\r\n        ]\r\n        return proportions;\r\n    }\r\n    getIssueProportion = () => {\r\n        if (this.statisticData == null) { return null }\r\n        const statistic = this.statisticData.statistic;\r\n        const total_issue = statistic.issue_count;\r\n        const proportions = [\r\n            {\r\n                proportion: statistic.issue_closed_count / total_issue,\r\n                label: 'Closed',\r\n                color: COLOR_CLOSED,\r\n                value: statistic.issue_closed_count\r\n            },\r\n            {\r\n                proportion: statistic.issue_not_closed_count / total_issue,\r\n                label: 'Not Closed',\r\n                color: COLOR_NOT_CLOSED,\r\n                value: statistic.issue_not_closed_count\r\n            }\r\n        ]\r\n        return proportions;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (null == this.statisticData) {\r\n            this.loadStatistic();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        if (this.state.errorLoadingStatistic) {\r\n            return (<Card title=\"Statistik\">\r\n                <ErrorInfo onClick={this.loadStatistic} /></Card>);\r\n        }\r\n        const discussionTopicProportions = this.getDiscussionTopicProportion();\r\n        const issueProportions = this.getIssueProportion();\r\n        if (null == discussionTopicProportions || null == issueProportions) {\r\n            return <Card title=\"Statistik\"><p>Please Wait</p></Card>\r\n        }\r\n        const departementListMapped = this.departementList.map(function (d) {\r\n            return {\r\n                value: d.id,\r\n                text: d.name\r\n            }\r\n        });\r\n        const departementOptions = [{ value: 'all', text: '-- Semua --' }, ...departementListMapped];\r\n        return (\r\n\r\n            <Card title=\"Statistik\">\r\n                <div id=\"pie_chart_discussion_topics\">\r\n                    <PieChart title=\"Tema Pembahasan\" ref={this.pieChartChildTopic} proportions={discussionTopicProportions} />\r\n                    <PieChart title=\"Aduan\" ref={this.pieChartChildIssue} proportions={issueProportions} />\r\n\r\n\r\n                    <form style={{ marginTop: '20px' }} onSubmit={\r\n                        this.isLoggedUserAdmin() ? (e) => this.loadStatisticWithDepartement(e) : (e) => {\r\n                            e.preventDefault();\r\n                            this.loadStatistic(null)\r\n                        }}>\r\n                        {this.isLoggedUserAdmin() ?\r\n                            <SelectField name=\"departement\" options={\r\n                                departementOptions} /> : null}\r\n                        <LabelField label=\"updated_at\" value={new Date(this.statisticData.date).toString()} />\r\n                        <SubmitResetButton submitButtonClassName=\"no\" submitIconClassName=\"fas fa-sync\" submitText=\"Reload\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nconst ErrorInfo = (props) => {\r\n\r\n    return (\r\n        <Message enableHidden={false} className=\"is-danger\" header=\"Gagal Memuat Data\">\r\n            <AnchorWithIcon onClick={props.onClick} iconClassName=\"fas fa-sync\">Muat Ulang</AnchorWithIcon>\r\n        </Message>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(actions.applicationAction.storeApplicationData(code, data)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Statistic));","export const DATA_KEY_DEPARTEMENTS = \"departements\";","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport PieChart from './PieChart';\r\nimport RecordHistoriesService from './../../../services/RecordHistoriesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport Message from './../../messages/Message';\r\nimport Statistic from './Statistic';\r\n\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n        };\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Dashboard\";\r\n    }\r\n\r\n    render() {\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Dashboard</CommonTitle>\r\n                <Card title=\"Welcome\" >\r\n                    <p>{this.getLoggedUser().display_name}</p>\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n               <Statistic app={this.props.app} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.getLoggedUser().role != 'admin') {\r\n            this.backToLogin();\r\n        }\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Master Data Menu</CommonTitle>\r\n                <Card title=\"Menu\">\r\n                    <div className=\"columns\">\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-object-group\"></i></p>\r\n                                <Link to=\"/management/departements\">Departements</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-users\"></i></p>\r\n                                <Link to=\"/management/users\">Users</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(ManagementMenu));\r\n","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    storeIssue = (issue) => {\r\n        const request = {\r\n            code: 'issue',\r\n            issue:issue\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    viewIssue = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"issue\"});\r\n    }\r\n\r\n    issueList = (filter) => {\r\n        return this.list({\r\n            code: 'issue',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )  \r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n            this.refresh();\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n            console.error(\"Error loading resource: \", e);\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link, withText = true) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        {withText?\r\n                        <span>Edit</span>\r\n                        :null}\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink, false)}\r\n                    {this.buttonDeleteRecord(id, false)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id, withText = true) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    {withText?\r\n                    <span>Delete</span>\r\n                    :null}\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.onSuccessDelete = (response) => {\r\n            this.removeDataFromStore(response.record_id);\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n        this.removeDataFromStore = (id) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) { return; }\r\n            const exist = departementList.find(dep => dep.id == id) != null;\r\n            if (!exist) return;\r\n\r\n            for (let i = 0; i < departementList.length; i++) {\r\n                const element = departementList[i];\r\n                if (element.id == id) {\r\n                    departementList.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', withFilter: true },\r\n                                        { text: 'name', withFilter: true },\r\n                                        { text: 'description', withFilter: true },\r\n                                        { text: 'action' }\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        return (<tr key={\"record_\" + i}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>\r\n                                                {this.buttonsModifyAndDelete(\r\n                                                    \"/management/departements/\" + item.id,\r\n                                                    item.id)}\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/users/\"+response.user.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.updateLocallyStoredDepartements = (departement) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) {return;}\r\n            const exist = departementList.find(dep => dep.id == departement.id) != null;\r\n            if (exist) {\r\n                for (let i = 0; i < departementList.length; i++) {\r\n                    const element = departementList[i];\r\n                    if (element.id == departement.id) {\r\n                        departementList[i] = departement;\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n                departementList.push(departement);\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            this.updateLocallyStoredDepartements(response.departement);\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/departements/\"+response.departement.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n               <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'notes',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/notes/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n\r\n}","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\n\r\nexport default class DiscussionTopicsService\r\n{\r\n    static instance = DiscussionTopicsService.instance || new DiscussionTopicsService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    store = (discussionTopic) => {\r\n\r\n        const request = {\r\n            discussion_topic: discussionTopic\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'discussion_topic',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    // delete = (id) => {\r\n    //     const endpoint = contextPath().concat(\"api/discussiontopics/delete/\"+id);\r\n    //     return commonAjaxPostCalls(endpoint, {});\r\n    // }\r\n    storeAction = (action) => {\r\n        const request = {\r\n            discussion_action: action\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/action\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","export const byId = (id) => { return document.getElementById(id) }\r\n\r\n\r\n/**\r\n * \r\n * @param  {...string} ignoredIds \r\n */\r\nexport const clearFields = (...ignoredIds) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n\r\n    let withIgnore = ignoredIds != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore) {\r\n            for (let y = 0; y < ignoredIds.length; y++) {\r\n                if (inputs[i].id == ignoredIds[y]) continue loop;\r\n            }\r\n        }\r\n\r\n        if (inputs[i].type == \"text\") { inputs[i].value = \"\"; }\r\n        else if (inputs[i].type == \"number\") { inputs[i].value = 0; }\r\n        else { inputs[i].value = null; }\r\n    }\r\n}\r\n\r\nexport function getAttachmentData(input) {\r\n    const file = input.files[0];\r\n    const name = file.name;\r\n    const lastDot = name.lastIndexOf('.');\r\n    const fileName = name.substring(0, lastDot);\r\n    const ext = name.substring(lastDot + 1);\r\n    const size = file.size;\r\n    // console.debug(\"FileName: \", fileName, \"ext: \", ext, \"FILE:\", file);\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(input.files[0]);\r\n            reader.onload = function () {\r\n                const attachmentData = {\r\n                    isFile:true,\r\n                    data:reader.result,\r\n                    name:name,\r\n                    extension:ext,\r\n                    size:size\r\n                };\r\n                resolve(attachmentData); \r\n            }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\r\n\r\nexport function toBase64v2(fileInput) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(fileInput.files[0]);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport function toBase64(file, referer, callback) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n        alert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <ModalBackdrop>\r\n                    <form onSubmit={(e)=>e.preventDefault()}>\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly||this.props.isError?\"button\" : \"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </ModalBackdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport const ModalBackdrop = (props) => {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React from 'react'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport { SubmitResetButton, InputField } from '../../forms/commons';\r\nimport { ModalBackdrop } from './../../messages/Alert';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nconst CLASS_INPUT_FIELD = \"input-form-field\";\r\nexport default class DiscussionTopicPopupForm extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n        this.onSubmitDiscussionTopic = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n\r\n            if (!window.confirm(\"Submit Data?\")) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            const discussionTopic = {\r\n                note_id: this.props.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                discussionTopic[element.name] = element.value;\r\n            }\r\n            console.debug(\"SUBMIT:\", discussionTopic);\r\n            this.storeDiscussionTopic(discussionTopic);\r\n        }\r\n        this.storeDiscussionTopic = (discussionTopic) => {\r\n            this.commonAjax(this.discussionTopicService.store, discussionTopic,\r\n                this.discussionTopicSaved, this.handleErrorSubmitDiscussionTopic);\r\n        }\r\n        this.discussionTopicSaved = (response) => {\r\n            alert(\"Success\");\r\n            this.props.onSuccess(response);\r\n            // this.loadRecord();\r\n\r\n        }\r\n        this.handleErrorSubmitDiscussionTopic = (e) => {\r\n            alert(\"Error Update Discussion Topic: \" + e);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.props.show == false || this.props.meetingNote == null) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ModalBackdrop >\r\n            <div className=\"container\">\r\n                <Card title=\"Tambah Tema Pembahasan\"\r\n                    headerIconClassName=\"fas fa-times\"\r\n                    headerIconOnClick={this.props.onClose}\r\n                >   \r\n                    <div style={{overflow:'scroll'}}>\r\n                    <form onSubmit={this.onSubmitDiscussionTopic}>\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={\"content\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={\"decision\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={\"deadline_date\"} type=\"date\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={\"person_in_charge\"} />\r\n                        <SubmitResetButton />\r\n                   \r\n                    <div className=\"level\">\r\n                        <div className=\"level-left\">\r\n                        <a className=\"button\" onClick={this.props.onClose}>Close</a>\r\n                        </div>\r\n                    </div>\r\n                    </form> \r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </ModalBackdrop>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton, LabelField, InputField } from '../../forms/commons';\r\nexport const TOPIC_PREFIX = \"discussion_topic_\";\r\n\r\nexport const DiscussionTopicCommonInputs = (props) => {\r\n    const inputPrefix = props.inputPrefix;\r\n    return <React.Fragment>\r\n        <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={inputPrefix + \"_content\"} type=\"textarea\" />\r\n        <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={inputPrefix + \"_decision\"} type=\"textarea\" />\r\n        <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={inputPrefix + \"_deadline_date\"} type=\"date\" />\r\n        <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={inputPrefix + \"_person_in_charge\"} />\r\n\r\n    </React.Fragment>\r\n}\r\n\r\nexport const FormTitle = (props) => {\r\n\r\n    return (<><Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;\r\n    Form\r\n    </>)\r\n}\r\nexport const ButtonRemoveTopic = (props) => {\r\n    if (props.show == false) { return null; }\r\n    return (\r\n        <a className=\"button is-danger is-outlined\" onClick={(e) => props.removeDiscussionTopic(props.id)}>\r\n            <span className=\"icon\"><i className=\"fas fa-times\" /></span>\r\n            <span>Remove</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport const DiscussionTopicStatusInfo = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    if (null == meetingNote) return null;\r\n    const discussion_topics = meetingNote.discussion_topics;\r\n    if (null == discussion_topics) return null;\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed) {\r\n            closed++;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table><tbody><tr >\r\n            <td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Closed</span>\r\n                    <span className=\"tag is-info\">{closed}</span>\r\n                </div>\r\n            </td><td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Not Closed</span>\r\n                    <span className=\"tag is-danger\">{discussion_topics.length - closed}</span>\r\n                </div></td>\r\n        </tr></tbody></table>\r\n    )\r\n}\r\n\r\nexport const ButtonAddTopic = (props) => {\r\n    return (\r\n        <div className=\"has-text-centered\">\r\n            <a className=\"button is-primary is-outlined\" onClick={props.addDiscussionTopic}\r\n                style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>{\"Tambah Tema Pembahasan\"}</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AttachmentInfo = (props) => {\r\n    if (!props.show) { return null }\r\n    return (<div className=\"tags has-addons\">\r\n        <span className=\"tag is-info\">\r\n            Attachment : {props.name}\r\n        </span>\r\n        <span className=\"tag is-warning\" style={{ cursor: 'pointer' }}\r\n            onClick={props.onRemoveClick}>remove</span>\r\n    </div>)\r\n}\r\n\r\nexport const LinkEditAndAction = (props) => {\r\n    if (props.show == false) return null;\r\n    const id = props.id;\r\n    return (\r\n        <div className=\"buttons has-addons\">\r\n            <Link to={\"/discussiontopics/\" + id} className=\"button is-warning\">\r\n                <i className=\"fas fa-edit\" />&nbsp;Edit\r\n                </Link>\r\n            <Link to={\"/discussiontopics/\" + id + \"/action\"} className=\"button is-primary\">\r\n                <i className=\"fas fa-location-arrow\" />&nbsp;Konfirmasi\r\n                </Link></div>\r\n    )\r\n}\r\nexport const ClosedInfoTag = (props) => {\r\n    if (props.closed == true) {\r\n        return <span className=\"tag is-primary\"><i className=\"fas fa-check\" />&nbsp;Closed</span>\r\n    }\r\n    return null;\r\n}\r\nexport const FormUpperTag = (props) => {\r\n    if (props.show == false || null == props.meetingNote) { return null }\r\n    const meetingNote = props.meetingNote;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div className=\"level\">\r\n                <div className=\"level-left\" >\r\n                    <DiscussionTopicStatusInfo meetingNote={meetingNote} />\r\n                </div>\r\n                <div className=\"level-right\">\r\n                    <span className=\"tag is-primary is-medium\">{meetingNote.departement.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelDiscussionTopicCount = (props) => {\r\n    return (<LabelField label=\"Tema Pembahasan\" >\r\n        <span className=\"tag is-dark\">\r\n            <b>{props.count}</b></span>\r\n    </LabelField>)\r\n}\r\n\r\nexport const MeetingNoteSubmitResetField = (props) => {\r\n    if (props.show == false) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Card title=\"Action\">\r\n            <SubmitResetButton submitText={\"Create\"} withReset={true} />\r\n        </Card>\r\n    )\r\n}\r\n","\r\nimport { TOPIC_PREFIX } from './componentHelper';\r\nexport const extractMeetingNoteObjectToTempData = (meetingNote) => {\r\n    const tempData = {};\r\n    for (const key in meetingNote) {\r\n        if (meetingNote.hasOwnProperty(key)) {\r\n            const element = meetingNote[key];\r\n            if (key == (\"discussion_topics\")) {\r\n                continue;\r\n            }\r\n            tempData[key] = element;\r\n        }\r\n    }\r\n    if (meetingNote.discussion_topics)\r\n        for (let i = 0; i < meetingNote.discussion_topics.length; i++) {\r\n            const discussion_topic = meetingNote.discussion_topics[i];\r\n            for (const key in discussion_topic) {\r\n                if (discussion_topic.hasOwnProperty(key)) {\r\n                    const element = discussion_topic[key];\r\n                    let prefixedKey = TOPIC_PREFIX + discussion_topic.id + \"_\" + key;\r\n                    tempData[prefixedKey] = element;\r\n                }\r\n            }\r\n        }\r\n    return tempData;\r\n}\r\nexport const enableAllInputs = (inputs) => {\r\n    if (null == inputs) return;\r\n    for (let i = 0; i < inputs.length; i++) {\r\n        const element = inputs[i];\r\n        element.removeAttribute(\"disabled\");\r\n    }\r\n}\r\nexport const getArrayIndexWithValue = (array, value) => {\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (array[i] == value) {\r\n            return i;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport const mergeObject = (original, toMerge) => {\r\n    for (const key in toMerge) {\r\n        if (toMerge.hasOwnProperty(key)) {\r\n            const element = toMerge[key];\r\n            original[key] = element;\r\n        }\r\n    }\r\n}\r\nexport const extractInputValues = (inputs) => {\r\n    const values = {};\r\n    for (let i = 0; i < inputs.length; i++) {\r\n        const element = inputs[i];\r\n        const name = element.name;\r\n        if (element.value == null || element.value == \"\") {\r\n            continue;\r\n        }\r\n        if (element.type == 'file') {\r\n            //\r\n        } else {\r\n            values[name] = element.value;\r\n        }\r\n    }\r\n    \r\n    console.debug(\"SAVED TEMP: \", values);\r\n    return values;\r\n}\r\nexport const populateInputs = (inputs, object, disabled = false) => {\r\n    console.debug(\"setTempDiscussionTopicValues: \", object);\r\n            \r\n    for (let i = 0; i < inputs.length; i++) {\r\n        const element = inputs[i];\r\n        if (element.type == 'file') continue;\r\n        if (null != object[element.name]) {\r\n            element.value = object[element.name];\r\n        } else {\r\n            element.value = null;\r\n        }\r\n\r\n        if (disabled) {\r\n            element.setAttribute(\"disabled\", \"disabled\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const getMaxDiscussionTopicID = (discussionTopicCount) => {\r\n    let max = 0;\r\n    for (let i = 0; i < discussionTopicCount.length; i++) {\r\n        const element = discussionTopicCount[i];\r\n        if (element > max) {\r\n            max = element;\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nexport const getDiscussionTopic = (meetingNote, id) => {\r\n    if (null == meetingNote || null == meetingNote.discussion_topics) {\r\n        return null;\r\n    }\r\n    for (let i = 0; i < meetingNote.discussion_topics.length; i++) {\r\n        const element = meetingNote.discussion_topics[i];\r\n        if (element.id == id) {\r\n            return element;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const isDiscussionTopicClosed = (meetingNote, id) => {\r\n    const discussionTopic = getDiscussionTopic(meetingNote, id);\r\n    if (null == discussionTopic) {\r\n        return null;\r\n    }\r\n    return discussionTopic.is_closed;\r\n}\r\n\r\n\r\nexport const deleteArrayValueWithKeyStartedWith = (object, prefix) => {\r\n    for (const key in object) {\r\n        if (object.hasOwnProperty(key)) {\r\n            if (key.startsWith(prefix)) {\r\n                delete object[key];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const extractTopicDiscussionIndexAndName = (elementName) => {\r\n    const result = {\r\n        index: 0,\r\n        name: null,\r\n    }\r\n    let elementNameSplitKey = elementName.split(TOPIC_PREFIX);\r\n    let elementNameSplitIndex = elementNameSplitKey[1].split(\"_\");\r\n    result.index = parseInt(elementNameSplitIndex[0]);\r\n    result.name = elementName.split(TOPIC_PREFIX + result.index + \"_\")[1];\r\n    return result;\r\n}\r\n\r\nexport const extractMeetingNoteObject = (inputs) => {\r\n    const meetingNote = { discussion_topics: [] };\r\n    let currentDiscussionTopicID = -1;\r\n    let currentDiscussionTopicIndex = -1;\r\n    for (const key in inputs) {\r\n        const value = inputs[key];\r\n        if (key.startsWith(TOPIC_PREFIX)) {\r\n            const indexAndName = extractTopicDiscussionIndexAndName(key);\r\n            if (indexAndName.index != currentDiscussionTopicID) {\r\n                meetingNote.discussion_topics.push({});\r\n                currentDiscussionTopicID = indexAndName.index;\r\n                currentDiscussionTopicIndex++;\r\n            }\r\n            if (value.isFile == true) {\r\n                meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name + \"_info\"] = value;\r\n            } else {\r\n                meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name] = value;\r\n            }\r\n        } else {\r\n            meetingNote[key] = value;\r\n        }\r\n    }\r\n\r\n    return meetingNote;\r\n\r\n}","\r\nimport React from 'react';\r\n\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { mapCommonUserStateToProps } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport Card from '../../container/Card';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LabelField, InputField } from './../../forms/commons';\r\nimport { getAttachmentData } from './../../../utils/ComponentUtil';\r\nimport DiscussionTopicPopupForm from './DiscussionTopicPopupForm';\r\nimport {\r\n    deleteArrayValueWithKeyStartedWith, getMaxDiscussionTopicID,\r\n    isDiscussionTopicClosed, extractInputValues, extractMeetingNoteObjectToTempData,\r\n    extractMeetingNoteObject,\r\n    enableAllInputs,\r\n    populateInputs,\r\n    mergeObject,\r\n    getArrayIndexWithValue,\r\n    getDiscussionTopic\r\n} from './logicHelper';\r\nimport {\r\n    ButtonRemoveTopic, LinkEditAndAction, ButtonAddTopic,\r\n    FormUpperTag, TOPIC_PREFIX, FormTitle,\r\n    MeetingNoteSubmitResetField, LabelDiscussionTopicCount,\r\n    ClosedInfoTag, AttachmentInfo, DiscussionTopicCommonInputs\r\n} from './componentHelper';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nconst CLASS_INPUT_FIELD = \"input-form-field\";\r\n\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            discussionTopicCount: [1],\r\n            showFormDiscussionTopicInEditMode: false\r\n        }\r\n\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n\r\n        this.attachmentsData = {};\r\n        this.form_temporary_inputs = {};\r\n        this.meetingNote = null;//{ discussion_topics: [] };\r\n        this.isSubmitting = false;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.addDiscussionTopic = () => {\r\n            this.saveFormInputsToTemporaryData();\r\n            if (this.getRecordId() != null && null != this.meetingNote) {\r\n                this.setState({ showFormDiscussionTopicInEditMode: true });\r\n                return;\r\n            }\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            discussionTopicCount.push(getMaxDiscussionTopicID(discussionTopicCount) + 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n        }\r\n\r\n        this.removeDiscussionTopic = (id) => {\r\n            this.saveFormInputsToTemporaryData();\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Remove discussion topic (\" + id + \")? \")\r\n                .then(function (ok) {\r\n                    if (ok) \r\n                        app.doRemoveDiscussionTopic(id);\r\n                });\r\n        }\r\n\r\n        this.doRemoveDiscussionTopic = (id) => {\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let index = getArrayIndexWithValue(discussionTopicCount, id);\r\n\r\n            if (null == index) { return; }\r\n            discussionTopicCount.splice(index, 1);\r\n\r\n            //delete temp data\r\n            this.deleteTempFormData(id);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n            this.setInputsFromTemporaryData();\r\n\r\n        }\r\n        this.deleteTempFormData = (id) => {\r\n            const prefix = TOPIC_PREFIX + id + \"_\";\r\n            deleteArrayValueWithKeyStartedWith(this.form_temporary_inputs, prefix);\r\n            deleteArrayValueWithKeyStartedWith(this.attachmentsData, prefix);\r\n        }\r\n        this.setInputsFromTemporaryData = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) { return; }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            populateInputs(inputs, this.form_temporary_inputs, this.getRecordId() != null);\r\n        }\r\n        this.saveFormInputsToTemporaryData = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) { return; }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            this.form_temporary_inputs = extractInputValues(inputs);\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (this.getRecordId() != null) {\r\n                return;\r\n            }\r\n            this.saveFormInputsToTemporaryData();\r\n            this.isSubmitting = true;\r\n            const app = this;\r\n            const form = e.target;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) \r\n                    app.fillDataAndStore(form);\r\n                app.isSubmitting = false;\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const rawInputs = this.form_temporary_inputs;\r\n            const inputs = {};\r\n            mergeObject(rawInputs, this.attachmentsData);\r\n            //sort keys\r\n            Object.keys(rawInputs).sort().forEach(function (key) {\r\n                inputs[key] = rawInputs[key];\r\n            });\r\n\r\n            this.meetingNote = extractMeetingNoteObject(inputs);\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n            console.debug(\"inputs: \", inputs, \"meetingNote: \", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n        this.addAttachmentData = (e, key) => {\r\n            this.saveFormInputsToTemporaryData();\r\n            const app = this;\r\n            const form = e.target;\r\n            getAttachmentData(form).then(function (data) {\r\n                app.attachmentsData[key] = data;\r\n                app.refresh();\r\n            });\r\n        }\r\n        this.removeAttachment = (key) => {\r\n            this.saveFormInputsToTemporaryData();\r\n            const app = this;\r\n            this.showConfirmation(\"Remove attachment?\").then(function (ok) {\r\n                if (!ok) return;\r\n                try {\r\n                    delete app.attachmentsData[key];\r\n                    app.refresh();\r\n                } catch (error) { console.error(error) }\r\n            });\r\n        }\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"Success\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    this.props.history.push(\"/meetingnote/\" + response.meeting_note.id);\r\n                    this.handleSuccessGetRecord(response);\r\n                }\r\n            } catch (error) { console.error(error); }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (error) => {\r\n            console.error(error);\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            const discussionTopics = this.meetingNote.discussion_topics;\r\n            let discussionTopicCount = [];\r\n            for (let i = 0; i < discussionTopics.length; i++) {\r\n                const element = discussionTopics[i];\r\n                discussionTopicCount.push(element.id);\r\n            }\r\n            this.form_temporary_inputs = extractMeetingNoteObjectToTempData(this.meetingNote);\r\n            this.setState({ discussionTopicCount: discussionTopicCount, isLoadingRecord: false });\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) { return; }\r\n            enableAllInputs(form.getElementsByClassName(CLASS_INPUT_FIELD));\r\n            if (this.isSubmitting == false) { form.reset(); }\r\n        }\r\n\r\n        this.discussionTopicSaved = (response) => {\r\n            this.setState({ showFormDiscussionTopicInEditMode: false });\r\n            this.loadRecord();\r\n        }\r\n\r\n        // ajax calls\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.recordSaved, null);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Notulensi\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n\r\n        if (this.getRecordId() == null && this.meetingNote != null) {\r\n            this.meetingNote = null;\r\n            this.form_temporary_inputs = {};           \r\n            this.setState({ discussionTopicCount: [1] });\r\n        }\r\n        this.setInputsFromTemporaryData();\r\n    }\r\n\r\n    getUserName() {\r\n        if (this.meetingNote != null && this.meetingNote.user != null) {\r\n            return this.meetingNote.user.display_name;\r\n        }\r\n        return this.getLoggedUser().display_name;\r\n    }\r\n\r\n    render() {\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n\r\n        const title = this.title(\"Notulensi Rapat\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        const discussionTopicCount = this.state.discussionTopicCount;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <DiscussionTopicPopupForm show={this.state.showFormDiscussionTopicInEditMode}\r\n                    app={this.props.app} meetingNote={this.meetingNote} onSuccess={this.discussionTopicSaved}\r\n                    onClose={(e) => this.setState({ showFormDiscussionTopicInEditMode: false })} />\r\n\r\n                <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                    <Card title={<FormTitle />}>\r\n                        <FormUpperTag show={this.getRecordId() != null} meetingNote={this.meetingNote} />\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <LabelDiscussionTopicCount count={this.state.discussionTopicCount.length} />\r\n                        <LabelField label=\"Notulis\" >{this.getUserName()}</LabelField>\r\n                    </Card>\r\n\r\n                    {/* ---------- discussion topics forms ----------- */}\r\n                    {discussionTopicCount.map((id, i) => {\r\n                        const isClosed = isDiscussionTopicClosed(this.meetingNote, id);\r\n                        const discussionTopic = getDiscussionTopic(this.meetingNote, id);\r\n                        const title = \"Tema Pembahasan #\" + (i + 1);// +\", id:\"+id;\r\n                        const inputPrefix = TOPIC_PREFIX + id;\r\n                        return (\r\n                            <Card title={title} key={\"discussion_topic_field_\" + i}>\r\n                                <ClosedInfoTag closed={isClosed} />\r\n                                <ButtonRemoveTopic show={this.getRecordId() == null && this.state.discussionTopicCount.length > 1} id={id} removeDiscussionTopic={this.removeDiscussionTopic} />\r\n                                <DiscussionTopicCommonInputs inputPrefix={inputPrefix} />\r\n                                <InputField show={this.getRecordId() == null} className=\"discussion-topic\" label=\"Attachment\" attributes={{ onChange: (e) => this.addAttachmentData(e, inputPrefix + \"_attachment\") }}\r\n                                    name={inputPrefix + \"_attachment\"} type=\"file\" note=\"Kosongkan jika tidak ada dokumen\" />\r\n                                <AttachmentInfo show={this.attachmentsData[inputPrefix + \"_attachment\"] != null}\r\n                                    name={this.attachmentsData[inputPrefix + \"_attachment\"] == null ? null : this.attachmentsData[inputPrefix + \"_attachment\"].name}\r\n                                    onRemoveClick={(e) => this.removeAttachment(inputPrefix + \"_attachment\")} />\r\n                                <LinkEditAndAction show={this.getRecordId() != null} id={id} />\r\n                                <AttachmentLink showExtension={true} show={discussionTopic!=null} \r\n                                    to={discussionTopic==null?null:\"upload/topic/\"+discussionTopic.attachment} />\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                    <ButtonAddTopic addDiscussionTopic={this.addDiscussionTopic} />\r\n                    <MeetingNoteSubmitResetField show={this.getRecordId() == null} />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(MeetingNoteForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Profile</CommonTitle>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\nexport default class IssuesService\r\n{\r\n    static instance = IssuesService.instance || new IssuesService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    //public//\r\n    departementList = () => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/departements\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    storePublicIssue =(issue) => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/store\");\r\n        return commonAjaxPostCalls(endpoint, {\r\n            issue:issue\r\n        });\r\n    }\r\n\r\n    //authenticated//\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'issue',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    delete = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/delete/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    followUpIssue = (followUp) => {\r\n        const request = {\r\n            followed_up_issue: followUp\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/followup\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport Columns from './../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n\r\nclass IssuesList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Aduan\", \"issue\");\r\n        this.state = {}\r\n        this.issueService = IssuesService.instance;\r\n\r\n        //overrid\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.issueService.delete,\r\n                id,\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.issueService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Aduan\";\r\n    }\r\n\r\n    //overrid baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.isLoggedUserNull()) {return null;}\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Aduan</CommonTitle>\r\n                <Card title=\"Daftar Aduan\">\r\n                {!isAdmin?null:this.linkToFormCreate(\"/issues/create\", \"Tambah Aduan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    // { text: 'id', withFilter: true },\r\n                                    { text: 'date', withFilter: true },\r\n                                    { text: 'place', withFilter: true },\r\n                                    { text: 'content', withFilter: true },\r\n                                    { text: 'issuer', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'issue_input', alias:'input', withFilter: true },\r\n                                    { text: 'attachment', withFilter: true },\r\n                                    { text: 'is_closed', alias:'Status', withFilter: true},\r\n                                    // { text: 'closed_date', alias:'Closed', withFilter: true},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    {/* <td>{item.id}</td> */}\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.issuer}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.issue_input}</td>\r\n                                    <td>{item.attachment == null ? null : <AttachmentLink to={\"upload/issue/\"+item.attachment} />}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    {/* <td>{item.closed_date}</td> */}\r\n                                    <td>\r\n                                        {isAdmin?\r\n                                        <>\r\n                                        <Link to={\"/issues/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        {this.buttonDeleteRecord(item.id, false)}\r\n                                        </>\r\n                                        :null}\r\n                                        <Link to={\"/issues/\" + item.id+\"/followup\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesList));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField, LabelField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nimport { toBase64v2, getAttachmentData } from './../../../utils/ComponentUtil';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n\r\nexport const issue_sources = [\r\n    'Yayasan', 'Orang Tua', 'Santri', 'Pegawai', 'Tamu',\r\n]\r\n\r\nclass IssuesForm extends BaseAdminPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.departementList = [];\r\n        this.attachmentData = null;\r\n        this.record = null;\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.updateAttachmentData = (e) => {\r\n            const app = this;\r\n            getAttachmentData(e.target).then(function(data){\r\n                app.attachmentData = data;\r\n            }).catch(console.error);\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const issue = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n                    if (fieldName == \"attachment\") {\r\n                        issue[fieldName+\"_info\"] = this.attachmentData\r\n                    } else {\r\n                        issue[fieldName] = element.value\r\n                    }\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                issue.id = this.getRecordId();\r\n            }\r\n            this.store(issue);\r\n            console.debug(\"ISSUE: \", issue);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList= response.result_list;\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            this.attachmentData = null;\r\n            this.record = null;\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/issues/\" + response.issue.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            console.error(e);\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (issue) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeIssue, issue,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n                this.commonAjax(\r\n                    this.masterDataService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    (error) => { }\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n                if (null != this.getRecordId()) {\r\n                    this.loadRecord();\r\n                }\r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.record = response.issue;\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.name == \"attachment\") {  continue; }\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.issue.departement_id;\r\n                } else {\r\n                    element.value = response.issue[element.name];\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            console.error(e);\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewIssue, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadDepartements();\r\n        document.title = \"Form Aduan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n        const title = this.title(\"Form Aduan\");\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Tanggal\" name=\"date\" type=\"date\" required={true} />\r\n                        <InputField label=\"Tempat\" name=\"place\" required={true} />\r\n                        <InputField label=\"Permasalahan\" name=\"content\" type=\"textarea\" required={true} />\r\n                        <InputField name=\"email\" type=\"email\" note=\"Kosongkan jika berstatus anonim\" />\r\n                         <SelectField label=\"Pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"Bidang\" options={this.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        {this.getRecordId()!=null && this.record != null ?\r\n                            <LabelField label=\"Attachment\">\r\n                                {this.record.attachment?\r\n                                 <AttachmentLink to={\"upload/issue/\"+this.record.attachment} />\r\n                                :\"tidak ada\"}\r\n                            </LabelField>\r\n                            :<InputField name=\"attachment\" attributes={{accept:'image/*', onChange:this.updateAttachmentData}} type=\"file\" note=\"Kosongkan jika tidak ada dokumen\" />\r\n                        \r\n                        }\r\n                      \r\n                        <InputField label=\"Sumber Aduan\" name=\"issue_input\" required={true} />\r\n                       <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(IssuesForm));","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ClosedStatus extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const isClosed = this.props.closed == true;\r\n        return (\r\n            <div className=\"tags has-addons are-medium\">\r\n                <span className=\"tag is-dark\">Status</span>\r\n                <span className={\"tag \" + (isClosed ? \"is-info\" : \"is-warning\")}>{isClosed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React from 'react';\r\n\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton, InputField } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon, AttachmentLink } from './../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-follow-up-issue\";\r\nclass IssuesFollowingUpForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailIssue: true,\r\n        }\r\n        this.issue = {};\r\n        this.issueService = IssuesService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({ showDetailIssue: false });\r\n        }\r\n        this.showDetailIssue = () => {\r\n            this.setState({ showDetailIssue: true });\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                issue_id: this.issue.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.issue.follow_up = response.followed_up_issue;\r\n            this.issue.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n                this.refresh();\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.issue = response.issue;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (followUp) => {\r\n            this.commonAjax(this.issueService.followUpIssue, followUp,\r\n                this.handleSuccessSubmit, null);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.issueService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.issue != null && this.issue.is_closed == true;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n        const title = this.title(\"Tindak Lanjut Aduan\");\r\n        if (this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Detail Aduan\r\n        </>\r\n        const isClosed = this.issue.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n\r\n                <Card title={formTitle}>\r\n                    <ClosedStatus closed={isClosed} />\r\n                    {this.state.showDetailIssue ?\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Aduan</p>\r\n                                <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Waktu dan Tempat\">\r\n                                    <p>{this.issue.place}, {dateStringDayMonthYearFromText(this.issue.date)}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Bidang\">\r\n                                    <p>{this.issue.departement.name}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Permasalahan\">\r\n                                    <p>{this.issue.content}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Pengadu\">\r\n                                    <p>{this.issue.email}, {this.issue.issuer}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Sumber Input\">\r\n                                    <p>{this.issue.issue_input}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Attachment\">\r\n                                    {this.issue.attachment?\r\n                                    <AttachmentLink to={\"upload/issue/\"+this.issue.attachment} />\r\n                                    :null}\r\n                                </LabelField>\r\n\r\n                            </div>\r\n                        </article>\r\n                        :\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-down\" onClick={this.showDetailIssue}>\r\n                            Detail Aduan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.issue.follow_up == null ?\r\n                        <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <formComponent.InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                        </form>\r\n                        :\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Tindak Lanjut</p>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Tanggal\"><p>{this.issue.follow_up.date}</p></LabelField>\r\n                                <LabelField label=\"Keterangan\"><p>{this.issue.follow_up.description}</p></LabelField>\r\n                            </div>\r\n                        </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesFollowingUpForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField, LabelField } from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport ClosedStatus from '../../messages/ClosedStatus';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n\r\nclass DiscussionTopicsForm extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const discussionTopic = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    discussionTopic[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                discussionTopic.id = this.getRecordId();\r\n            }\r\n            this.store(discussionTopic);\r\n            console.debug(\"discussionTopic: \", discussionTopic);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/discussiontopics/\" + response.discussion_topic.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (discussionTopic) => {\r\n            this.commonAjax(\r\n                this.discussionTopicService.store, discussionTopic,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.recordData = response;\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false });\r\n\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = this.discussionTopic[element.name];\r\n                if (this.isClosed() == false && element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed() == true) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n        document.title = \"Form Tema Pembahasan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const title = this.title(\"Form Tema Pembahasan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title={formTitle} >\r\n                    {this.getRecordId() != null && this.discussionTopic != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <ClosedStatus closed={isClosed} />\r\n                            </div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.discussionTopic.departement == null ? null : this.discussionTopic.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        <LabelField label=\"Attachment\">\r\n                            {this.discussionTopic.attachment? \r\n                            <AttachmentLink showExtension={true} to={\"upload/topic/\"+this.discussionTopic.attachment}/>:\r\n                            null\r\n                            }\r\n                        </LabelField>\r\n                        {this.isClosed() ? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkDetailMeetingNote = (props) => {\r\n    const note_id = props.note_id;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <Link to={\"/meetingnote/\" + props.note_id} className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-clipboard\"></i>\r\n                </span>\r\n                <span>Detail Notulensi</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DiscussionTopicsForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LinkDetailMeetingNote } from './DiscussionTopicsForm';\r\nimport { AnchorWithIcon, AttachmentLink } from '../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-discussion-action\";\r\nclass DiscussionActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailDiscussionTopic: true,\r\n        }\r\n        this.discussionTopic = {};\r\n        this.discussionTopicSerivce = DiscussionTopicsService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailDiscussionTopic:false});\r\n        }\r\n        this.showDetailDiscussionTopic = () => {\r\n            this.setState({showDetailDiscussionTopic:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                topic_id : this.discussionTopic.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.discussionTopic.action = response.discussion_action;\r\n            this.discussionTopic.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.discussionTopicSerivce.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicSerivce.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Konfirmasi Tema Pembahasan\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n    render() {\r\n        \r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return null;\r\n        }\r\n        \r\n        const title = this.title(\"Penyelesaian/Pelaksanaan Keputusan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title=\"Detail Tema Pembahasan\">\r\n                    <ClosedStatus closed={isClosed} />\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    {this.state.showDetailDiscussionTopic? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header has-background-link\">\r\n                            <p>Detail Tema Pembahasan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                        <LabelField label=\"Waktu\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.discussionTopic.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.discussionTopic.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.discussionTopic.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.discussionTopic.person_in_charge}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Attachment\">\r\n                                <AttachmentLink show={this.discussionTopic.attachment!=null} showExtension={true} to={\"upload/topic/\"+this.discussionTopic.attachment} />\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <AnchorWithIcon onClick={this.showDetailDiscussionTopic} iconClassName=\"fas fa-angle-down\">\r\n                        Detail Tema Pembahasan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Penyelesaian/Pelaksanaan Keputusan\">\r\n                    {this.discussionTopic.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <formComponent.InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <formComponent.InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header has-background-link\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.discussionTopic.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.discussionTopic.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionActionForm));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport { getDiffDaysToNow } from '../../../utils/DateUtil';\r\nimport MeetingNoteSerivce from './../../../services/MeetingNoteSerivce';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass MeetingNoteList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Notulensi\", \"notes\");\r\n        this.state = {}\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => { }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.meetingNoteService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Notulensi\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Notulensi</CommonTitle>\r\n                <Card title=\"Daftar Notulensi\">\r\n                    <LinkToFormCreate to=\"meetingnote/create\">Tambah Notulensi</LinkToFormCreate>\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table style={{}} className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'place', alias: \"Tempat\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'user', alias: \"Notulis\", withFilter: true },\r\n                                        { text: 'discussion_topics_count', alias:\"Topik\", withFilter:true},\r\n                                        { text: 'discussion_topics_closed_count', alias:\"closed\", withFilter:true},\r\n                                        { text: 'action', },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record-meeting-note-\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.place}</td>\r\n                                            <td>{item.departement ? item.departement.name : \"-\"}</td>\r\n                                            <td>{item.user ? item.user.name : \"-\"}</td>\r\n                                            <td>\r\n                                                {item.discussion_topics_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.discussion_topics_closed_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkEditPage id={item.id} />\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkToFormCreate = (props) => {\r\n    return (\r\n        <Link to={props.to} className=\"button is-primary\" style={{ marginBottom: '10px' }}>\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-plus\"></i>\r\n            </span>\r\n            <span>{props.children}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst LinkEditPage = (props) => {\r\n    return (\r\n        <Link to={\"/meetingnote/\" + props.id} className=\"button is-small\" >\r\n            <i className=\"fas fa-edit\"></i>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteList));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { getDiffDaysToNow } from './../../../utils/DateUtil';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { LinkToFormCreate } from './../meetingnotes/MeetingNoteList';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n// const title = \"Daftar Tema Pembahasan\";\r\nconst title = \"Daftar Topik\";\r\n        \r\nclass DiscussionTopicsList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Topik Pembahasan\", \"discussiontopic\");\r\n        this.state = {}\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => {\r\n            // this.commonAjax(\r\n            //     this.discussionTopicService.delete,\r\n            //     id,\r\n            //     this.onSuccessDelete,\r\n            //     this.onErrorDelete\r\n            // )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.discussionTopicService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = title;\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>{title}</CommonTitle>\r\n                <Card title={title}>\r\n                <LinkToFormCreate to=\"meetingnote/create\">Tambah Notulensi</LinkToFormCreate>\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        // { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        // { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'content', alias: \"Topik\", withFilter: true },\r\n                                        // { text: 'decision', alias: \"Keputusan\", withFilter: true },\r\n                                        { text: 'person_in_charge', alias: \"PIC\", withFilter: true },\r\n                                        { text: 'deadline_date', alias: \"Deadline\", withFilter: true },\r\n                                        // { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'is_closed', alias: 'Status', withFilter: true },\r\n                                        // { text: 'closed_date', alias: 'Closed', withFilter: true },\r\n                                        { text: 'attachment' },\r\n                                        { text: 'action' },\r\n                                        { text: 'opsi' },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record_\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            {/* <td>{item.id}</td> */}\r\n                                            {/* <td>{item.date}</td> */}\r\n                                            <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                            {/* <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td> */}\r\n                                            <td>{item.person_in_charge}</td>\r\n                                             <td>{item.deadline_date}</td>\r\n                                            {/* <td>{item.departement.name}</td> */}\r\n                                            <td>\r\n                                                {item.is_closed == true ?\r\n                                                    <span className=\"tag is-info\">Closed</span>\r\n                                                    :\r\n                                                    <span className=\"tag is-warning\">Not Closed</span>}\r\n                                            </td>\r\n                                            {/* <td>\r\n                                                {item.closed_date}\r\n                                            </td> */}\r\n                                            <td>\r\n                                                {item.attachment? \r\n                                                    <AttachmentLink to={\"upload/topic/\"+item.attachment}/>:null    \r\n                                                }\r\n                                            </td>\r\n                                            <td><LinkEditAndAction id={item.id} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={\"/meetingnote/\" + item.note_id}\r\n                                                    className=\"button is-light is-small\">\r\n                                                    <span className=\"icon\">\r\n                                                        <i className=\"fas fa-clipboard\" />\r\n                                                    </span>\r\n                                                    <span>Notulensi</span>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    return (\r\n        <>\r\n            <Link to={\"/discussiontopics/\" + props.id} className=\"button is-small\" >\r\n                <i className=\"fas fa-edit\"></i>\r\n            </Link>\r\n\r\n            <Link to={\"/discussiontopics/\" + props.id + \"/action\"} className=\"button is-primary is-small\" >\r\n                <i className=\"fas fa-location-arrow\"></i>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionTopicsList));","import React, { Component } from 'react';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Not Found\";\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/* <CommonTitle>404 Not Found</CommonTitle> */}\r\n                <article class=\"message is-warning\">\r\n                    <div class=\"message-header\">\r\n                        <p>404 Not Found</p>\r\n                        <button class=\"delete\" aria-label=\"delete\"></button>\r\n                    </div>\r\n                    <div class=\"message-body\">\r\n                        Halaman tidak ditemukan\r\n  </div>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport { InputField, SubmitResetButton } from '../../forms/commons';\r\nimport { issue_sources } from './IssuesForm';\r\nimport { SelectField } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nimport { toBase64v2, getAttachmentData } from './../../../utils/ComponentUtil';\r\nconst ADDITION = \"+\";\r\nconst SUBSTRACTION = \"-\";\r\nclass IssueFormPublic extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            captchaUpdate: new Date(),\r\n            recordSave: false,\r\n        }\r\n        this.issueService = IssuesService.instance;\r\n        this.departementList = [];\r\n        this.attachmentData = null;\r\n        this.captcha = {\r\n            firstNumber: 1,\r\n            secordNumber: 2,\r\n            operator: ADDITION,\r\n            updatedAt: new Date()\r\n        };\r\n\r\n        this.updateAttachmentData = (e) => {\r\n            const app = this;\r\n            getAttachmentData(e.target).then(function(data){\r\n                app.attachmentData = data;\r\n            }).catch(console.error);\r\n        }\r\n\r\n        this.resetCaptcha = () => {\r\n            this.captcha.firstNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.secordNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.operator = this.captcha.firstNumber % 2 == 0 ? ADDITION : SUBSTRACTION;\r\n            this.captcha.updatedAt = new Date();\r\n            this.setState({ captchaUpdate: this.captcha.updatedAt });\r\n        }\r\n\r\n        this.validateCaptcha = (value) => {\r\n            const number1 = this.captcha.firstNumber;\r\n            const number2 = this.captcha.secordNumber;\r\n            if (this.captcha.operator == ADDITION) {\r\n                return number1 + number2 == value;\r\n            } else if (this.captcha.operator == SUBSTRACTION) {\r\n                return number1 - number2 == value;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const capchaResult = document.getElementsByName(\"captcha_result\")[0].value;\r\n            const captchaValidated = this.validateCaptcha(capchaResult);\r\n            const app = this;\r\n            if (!captchaValidated) {\r\n\r\n                this.showError(\"Invalid Captcha\");\r\n                return;\r\n            }\r\n            this.showConfirmation(\"Submit Data?\").then(function (ok) {\r\n                if (ok) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const issue = {};\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.name == \"attachment\") {\r\n                    issue[element.name+\"_info\"] = this.attachmentData\r\n                } else {\r\n                    issue[element.name] = element.value\r\n                }\r\n            }\r\n            console.debug(\"Issue: \", issue);\r\n            this.storeIssue(issue);\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList = response.result_list;\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n        this.departementListNotLoaded = (error) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Error loading data.. please try or reload the page\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.loadDepartements();\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.resetCaptcha();\r\n            this.setState({ recordSaved: true });\r\n            this.attachmentData = null;\r\n        }\r\n\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"Gagal menyimpan aduan: \" + e + \" Silakan muat ulang halaman dan coba lagi\");\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n\r\n                this.commonAjax(\r\n                    this.issueService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    this.departementListNotLoaded\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.storeIssue = (issue) => {\r\n            this.commonAjax(\r\n                this.issueService.storePublicIssue, issue,\r\n                this.recordSaved,\r\n                this.recordFailedToSave\r\n            );\r\n        }\r\n\r\n        this.showForm = () => {\r\n            this.setState({ recordSaved: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Aduan Publik\";\r\n        this.loadDepartements();\r\n        this.resetCaptcha();\r\n    }\r\n\r\n    componentDidUpdate() { }\r\n\r\n    render() {\r\n        const title = this.title(\"Form Aduan Publik\");\r\n        if (this.state.recordSaved == true) {\r\n\r\n            return (\r\n                <div>\r\n                    {title}\r\n                    <div className=\"box has-text-success\" style={{ textAlign: 'center', margin: '10px' }}>\r\n                        <span className=\"icon\" style={{ fontSize: '4em', marginTop: '30px' }}><i className=\"fas fa-check\" /></span>\r\n                        <h2>Terimakasih. Aduan Anda berhasil disimpan!</h2>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-right\" onClick={this.showForm} >Kirim Tanggapan Lain</AnchorWithIcon>\r\n                    </div>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                {title}\r\n                <Card title=\"Form\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <InputField name=\"date\" label=\"tanggal\" type=\"date\" required={true} />\r\n\r\n                        <InputField name=\"place\" label=\"tempat\" required={true} />\r\n                        <InputField name=\"content\" label=\"permasalahan\" type=\"textarea\" required={true} />\r\n                        <InputField name=\"email\" type=\"email\" note=\"Kosongkan jika berstatus anonim\" />\r\n                        <SelectField label=\"pengadu\" options={issue_sources.map(source => {\r\n                            return { value: source, text: source };\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"bidang\" options={this.departementList.map(item => {\r\n                            return { value: item.id, text: item.name };\r\n                        })} name=\"departement_id\" required={true} />\r\n                        <InputField name=\"attachment\" attributes={{accept:'image/*', onChange:this.updateAttachmentData}} type=\"file\" note=\"Kosongkan jika tidak ada dokumen\" />\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label\">Verifikasi</div>\r\n                            <div className=\"field-body\">\r\n                                <CaptCha reset={this.resetCaptcha} captcha={this.captcha} />\r\n                            </div>\r\n                        </div>\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass CaptCha extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas_id = \"captcha_canvas_\" + new Date().getTime();\r\n    }\r\n    getCaptchaText() {\r\n        const captcha = this.props.captcha;\r\n        const text = captcha.firstNumber + \" \" + captcha.operator + \" \" + captcha.secordNumber;\r\n        return text;\r\n    }\r\n    drawCanvas() {\r\n        const canvas = document.getElementById(this.canvas_id);\r\n        const context = canvas.getContext('2d');\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.fillStyle = '#000';\r\n        context.font = '70px Arial';\r\n        context.fillText(this.getCaptchaText(), 10, 50);\r\n    }\r\n    componentDidUpdate() {\r\n        this.drawCanvas();\r\n    }\r\n    componentDidMount() {\r\n        this.drawCanvas();\r\n    }\r\n    render() {\r\n        const captcha = this.props.captcha;\r\n        return (\r\n\r\n            <article style={{ width: '100%' }} className=\"message \">\r\n                <div className=\"message-header has-background-grey-lighter\">\r\n                    <p className=\"has-text-dark\">Captcha</p>\r\n                    <a onClick={this.props.reset} className=\"button\"><i className=\"fas fa-sync\" /></a>\r\n                </div>\r\n                <div className=\"message-body has-background-light\">\r\n                    <canvas id={this.canvas_id} className=\"has-background-light\" style={{ width: '100px', height: 'auto' }} />\r\n                    <input className=\"input\" name=\"captcha_result\" required />\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssueFormPublic));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/dashboard/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport Profile from '../pages/Profile';\r\nimport IssuesList from '../pages/issues/IssuesList';\r\nimport IssuesForm from '../pages/issues/IssuesForm';\r\nimport IssuesFollowingUpForm from '../pages/issues/IssuesFollowingUpForm';\r\nimport DiscussionActionForm from '../pages/discussiontopics/DiscussionActionForm';\r\nimport DiscussionTopicsForm from '../pages/discussiontopics/DiscussionTopicsForm';\r\nimport DiscussionTopicsList from '../pages/discussiontopics/DiscussionTopicsList';\r\nimport MeetingNoteList from '../pages/meetingnotes/MeetingNoteList';\r\nimport NotFound from './../pages/errors/NotFound';\r\nimport IssueFormPublic from './../pages/issues/IssueFormPublic';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nclass Content extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          {/* ========= meeting notes ========= */}\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote\" render={\r\n            (props) =>\r\n              <MeetingNoteList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          {/* ======== issues ========= */}\r\n          <Route exact path=\"/issues\" render={\r\n            (props) =>\r\n              <IssuesList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/create\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues-public\" render={\r\n            (props) => <IssueFormPublic app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id/followup\" render={\r\n            (props) =>\r\n              <IssuesFollowingUpForm app={this.props.app} />\r\n          } />\r\n          {/* ======== discussiontopics ========= */}\r\n          <Route exact path=\"/discussiontopics\" render={\r\n            (props) =>\r\n              <DiscussionTopicsList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id/action\" render={\r\n            (props) =>\r\n              <DiscussionActionForm app={this.props.app} />\r\n          } />\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* ============== users management ============= */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* ================ departements management ============= */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n\r\n          {/* ////////////404///////////////// */}\r\n          <Route path=\"\" component={NotFound} />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div className=\"has-text-centered\">\r\n    <img src=\"kiis-stroke.png\" width=\"200\"  />\r\n    <h2>Kafila Console</h2>\r\n    \r\n  </div>\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  //console.log(state);\r\n  return {\r\n      //user\r\n      loginStatus: state.userState.loginStatus,\r\n      loggedUser: state.userState.loggedUser,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n})\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Content))","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      // <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000, color: '#ccc'}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\nclass SideBar extends BaseMenus {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <aside className=\"menu\">\r\n                    {MENUS.map((menu, i) => {\r\n                        const childs = this.extractChildren(menu.children);\r\n                        if (childs == null || childs.length == 0) { return null; }\r\n                        const isMenuListShown = this.isMenuListShown(menu.name);\r\n                        const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                        return (\r\n                            <React.Fragment key={\"menu_\" + menu.name}>\r\n                                <p key={menu.name} menu-name={menu.name} onClick={this.toggleMenuList} className=\"menu-label\">\r\n                                    <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                    {menu.name}\r\n                                </p>\r\n                                {isMenuListShown ?\r\n                                    <ul className=\"menu-list\">\r\n                                        {childs.map((menuChild, j) => {\r\n                                            return (<li key={\"sidebar-menu-child-\" + i + \"-\" + j}>\r\n                                                <Link to={menuChild.link}>\r\n                                                    <span className=\"icon\">\r\n                                                        <i className={menuChild.iconClassName ? menuChild.iconClassName : \"fas fa-folder\"} />\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        {menuChild.name}\r\n                                                    </span>\r\n                                                </Link>\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>\r\n                                    : null}\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))\r\n\r\n","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actions/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nimport SideBar from './components/layout/SideBar';\nimport './components/layout/SideBar.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      \n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert\n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section style={{ minHeight: '70vh' }}>\n          <div >\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\" style={{ minHeight: '70vh', marginBottom: '1px' }}>\n            <div style={{ paddingTop: '20px', paddingLeft: '20px', borderRight:'solid 2px #ccc' }}\n              className=\"menu-container column is-one-fifth has-background-water-ter\">\n              \n                <SideBar app={this} />\n               \n            </div>\n            <div className=\"column is-four-fifths\">\n\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    requestId: state.userState.requestId,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n    applicationData: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    const result = state;\r\n    switch (action.type) {\r\n        case types.STORE_APPLICTION_DATA:\r\n            const key = action.payload.key;\r\n            const data = action.payload.data;\r\n           \r\n            result.applicationData[key] = data\r\n\r\n            return result;\r\n        case types.REMOVE_APPLICTION_DATA:\r\n            \r\n            delete result[action.payload.key];\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as applicationReducer from \"./applicationReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        applicationState: applicationReducer.reducer,\r\n        \r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    applicationState: applicationReducer.initState,\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            }).catch((error)=>{\r\n                alert(\"Error requesting application: \"+error+\". Try to reload the page\");\r\n            });\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as types from '../redux/types'\r\n\r\n\r\nexport const storeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_APPLICTION_DATA) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nexport const removeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_APPLICTION_DATA) {\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport { storeApplicationData } from './../middlewares/ApplicationMiddleware';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            storeApplicationData\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}