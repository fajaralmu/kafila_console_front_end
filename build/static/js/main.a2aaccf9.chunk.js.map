{"version":3,"sources":["logo.svg","constant/Url.js","redux/actions/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/BaseMenus.js","constant/Menus.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","components/container/Card.js","components/buttons/buttons.js","utils/StringUtil.js","components/pages/dashboard/PieChart.js","middlewares/Common.js","services/Promises.js","services/RecordHistoriesService.js","components/forms/commons.js","components/pages/dashboard/Statistic.js","constant/ApplicationDataKeys.js","components/pages/dashboard/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","services/MasterDataService.js","components/buttons/NavButtons.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/messages/Alert.js","services/DiscussionTopicsService.js","utils/ComponentUtil.js","components/pages/meetingnotes/MeetingNoteForm.js","services/UserService.js","components/pages/Profile.js","services/IssuesService.js","components/pages/issues/IssuesList.js","components/pages/issues/IssuesForm.js","utils/DateUtil.js","components/messages/ClosedStatus.js","components/pages/issues/IssuesFollowingUpForm.js","components/pages/discussiontopics/DiscussionTopicsForm.js","components/pages/discussiontopics/DiscussionActionForm.js","components/pages/meetingnotes/MeetingNoteList.js","components/pages/discussiontopics/DiscussionTopicsList.js","components/pages/errors/NotFound.js","components/pages/issues/IssueFormPublic.js","components/layout/Content.js","components/widget/Loader.js","components/layout/SideBar.js","App.js","redux/userReducer.js","redux/applicationReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/ApplicationMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","accountAction","app","startLoading","type","payload","meta","email","password","user","applicationAction","key","data","Footer","className","href","Component","BaseComponent","props","authenticated","state","updated","Date","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","getLoggedUser","isLoggedUserAdmin","isLoggedUserNull","role","getLoggedUserDepartementName","departement","name","showConfirmation","body","Promise","resolve","reject","showAlert","e","showConfirmationDanger","showAlertError","showInfo","showError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","then","response","catch","finally","console","warn","commonAjax","commonAjaxWithProgress","title","refresh","setState","this","CommonTitle","style","textAlign","marginLeft","children","BaseMenus","shownMenuList","id","hideMenuList","isMenuListShown","toggleMenuList","menuName","target","getAttribute","menuChildren","i","length","element","MENUS","link","iconClassName","Header","showBurger","toggleNavBurger","performLogout","accepted","backgroundColor","to","src","width","height","onClick","map","menu","childs","extractChildren","Fragment","menu-name","marginRight","linkProperty","j","display_name","AppLink","withRouter","connect","userState","dispatch","actions","Message","show","hide","enableHidden","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","handleSubmit","event","preventDefault","form","FormData","elements","performLogin","showLoginInfo","loginFailed","current","ref","marginTop","onSubmit","fontSize","nam","placeholder","required","requestId","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","headerIconClassName","iconOnClick","headerIconOnClick","margin","withButtonFooter","footerContent","HeaderIcon","aria-hidden","AnchorWithIcon","AttachmentLink","index","RAD","Math","PI","PieChart","string","getUTCMilliseconds","uniqueId","getTime","proportions","showDetail","timeoutId","accumulationDegree","updatePie","canvas","ctx","getContext","clearRect","fillStyle","currentRad","currentDegree","x","circleX","y","proportion","endAngle","color","strokeStyle","beginPath","arc","fill","coord","calculatePosition","moveTo","lineTo","labelCoord","font","fillText","label","parseFloat","toFixed","radians","mainCoord","calculateCoordinate","rad","deg","PIE_W","accDegree","radius","newX","newY","quad","getQuadrant","adjustedX","abs","cos","adjuxtedY","sin","toggleDetail","proportionIsFixed","stateProp","prop","getPropsProportion","sumValues","proportionIsEmpty","sort","a","b","animate","requestAnimation","clearTimeout","setTimeout","resetProportion","val","overflowX","DetailPie","padding","commonAuthorizedHeader","token","getLoginKey","toString","trim","getCookie","setApiToken","log","setCookie","cname","cvalue","exdays","d","setTime","expires","toUTCString","cookie","ca","decodeURIComponent","split","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","headers","code","error","RecordHistoriesService","getStatistic","departement_id","filter","fieldsFilter","instance","CapitalizeFirstLetter","rawString","String","splitted","result","toUpperCase","TableHeadWithFilter","onButtonOrderClick","alias","text","withFilter","InputFormFilter","ButtonApplyResetFilter","InputField","orientation","attributes","note","SelectField","options","option","LabelField","SubmitResetButton","submitValue","submitText","submitIconClassName","submitButtonClassName","withReset","Statistic","getDiscussionTopicProportion","statisticData","statistic","total_topic","topic_count","topic_closed_count","topic_not_closed_count","getIssueProportion","total_issue","issue_count","issue_closed_count","issue_not_closed_count","errorLoadingStatistic","pieChartChildTopic","pieChartChildIssue","historiesService","departementList","loadStatisticWithDepartement","loadStatistic","statisticLoaded","departements","storeApplicationData","statisticFailedToLoad","discussionTopicProportions","issueProportions","departementListMapped","departementOptions","date","ErrorInfo","applicationData","applicationState","Dashboard","BaseAdminPage","ManagementMenu","MasterManagementService","setUsersData","usersData","storeUser","userModel","storeIssue","issue","viewUser","userList","list","viewIssue","issueList","storeDepartement","viewDepartement","deleteRecord","departementsData","NavButtons","buttonValues","generateButtonValues","limit","totalData","activeIndex","buttonsData","currentPage","displayed_buttons","buttonCount","ceil","min","max","BaseManagementPage","loadRecords","readInputForm","inputs","getElementsByClassName","masterDataServce","page","count","orderBy","orderType","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","withText","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","populateDefaultInputs","hasOwnProperty","navButtons","createNavButton","recordList","result_list","formComponent","overflow","item","indexBegin","DeparementManagement","removeDataFromStore","record_id","find","dep","splice","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","debug","match","departementListLoaded","loadRecord","recordSaved","handleSuccessGetRecord","recordFailedToSave","loadDepartements","handleErrorGetRecord","formTitle","DepartementManagementForm","updateLocallyStoredDepartements","MeetingNoteSerivce","meetingNote","meeting_note","view","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","ModalBackdrop","DiscussionTopicsService","discussionTopic","discussion_topic","storeAction","action","discussion_action","getAttachmentData","input","file","files","lastDot","lastIndexOf","ext","size","reader","FileReader","readAsDataURL","onload","attachmentData","isFile","extension","onerror","FORM_ID","TOPIC_PREFIX","MeetingNoteForm","discussionTopicCount","showFormDiscussionTopicInEditMode","discussionTopicService","attachmentsData","form_temporary_inputs","discussion_topics","isSubmitting","meetingNoteService","getMaxDiscussionTopicID","addDiscussionTopic","saveFormInputsToTemporaryData","isDiscussionTopicClosed","is_closed","removeDiscussionTopic","ok","doRemoveDiscussionTopic","deleteTempFormData","setInputsFromTemporaryData","startsWith","setAttribute","fillDataAndStore","onSubmitDiscussionTopic","window","confirm","note_id","storeDiscussionTopic","rawInputs","Object","keys","forEach","currentDiscussionTopicID","currentDiscussionTopicIndex","indexAndName","extractTopicDiscussionIndexAndName","storeMeetingNote","addAttachmentData","removeAttachment","handleErrorSubmit","discussionTopics","enableInputs","removeAttribute","reset","discussionTopicSaved","alert","handleErrorSubmitDiscussionTopic","notulis","isClosed","inputPrefix","onChange","cursor","FormAddDiscussionTopic","elementName","elementNameSplitIndex","parseInt","ButtonRemoveTopic","DiscussionTopicStatusInfo","closed","border","ButtonAddTopic","LinkEditAndAction","FormUpperTag","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","IssuesService","storePublicIssue","followUpIssue","followUp","followed_up_issue","IssuesList","issueService","isAdmin","place","content","issuer","issue_input","attachment","closed_date","issue_sources","IssuesForm","record","updateAttachmentData","appData","source","accept","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","getDiffDaysToNow","ClosedStatus","IssuesFollowingUpForm","showDetailIssue","hideDetailIssue","issue_id","handleSuccessSubmit","follow_up","DiscussionTopicsForm","LinkDetailMeetingNote","DiscussionActionForm","showDetailDiscussionTopic","discussionTopicSerivce","topic_id","decision","deadline_date","person_in_charge","MeetingNoteList","deadlineDate","parse","diffDay","discussion_topics_count","discussion_topics_closed_count","LinkToFormCreate","LinkEditPage","DiscussionTopicsList","NotFound","class","IssueFormPublic","captchaUpdate","recordSave","captcha","firstNumber","secordNumber","operator","updatedAt","resetCaptcha","floor","random","validateCaptcha","number1","number2","capchaResult","getElementsByName","captchaValidated","departementListNotLoaded","CaptCha","canvas_id","context","getCaptchaText","drawCanvas","Content","exact","path","render","UsersManagement","UsersManagementForm","DepartementManagement","component","Home","Loader","opacity","position","zIndex","SideBar","menuChild","App","menus","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","additionalMenus","Array","isNotAuthenticated","isShoppingDisabled","enableShopping","minHeight","paddingTop","paddingLeft","borderRight","initState","loginKey","loginAttempt","applicationProfile","reducer","api_token","rootReducer","combineReducers","userReducer","applicationReducer","initialState","performLoginMiddleware","next","common","responseJson","newAction","assign","err","param","requestAppIdMiddleware","message","get","performLogoutMiddleware","logoutSuccess","configureStore","createStore","applyMiddleware","userMiddleware","Root","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2aaccf9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from '../types'\r\nimport * as url from '../../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n\r\n \r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const applicationAction = {\r\n    /**\r\n     * @param {String} key\r\n     * @param {*} data\r\n     */\r\n    storeApplicationData: (key, data) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                data:data,\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.STORE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    removeApplicationData: (key) => {\r\n        \r\n        let requested = {\r\n            type: types.STORE_APPLICTION_DATA,\r\n            payload: {\r\n                key:key   \r\n            },\r\n            meta: {\r\n                type: types.REMOVE_APPLICTION_DATA,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n export const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const STORE_APPLICTION_DATA = \"store-app-data\";\r\nexport const REMOVE_APPLICTION_DATA = \"remove-app-data\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer className=\"footer has-background-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"content has-text-centered\">\r\n\t\t\t\t\t<div className=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div className=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t\t\t\t<div className=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a className=\"tag is-link\" href=\"https://kafila.sch.id\">KIIS Jakarta</a>\r\n\t\t\t\t\t\t\t\t\t<span className=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import  React , {Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.state = {\r\n            updated:new Date()\r\n        }\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return true;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.getLoggedUser = () => {\r\n            return this.props.loggedUser;\r\n        }\r\n        this.isLoggedUserAdmin = () => {\r\n            return this.isLoggedUserNull() == false && this.getLoggedUser().role == 'admin';\r\n        }\r\n        this.getLoggedUserDepartementName = () => {\r\n            if (this.isLoggedUserNull()) return null;\r\n            return this.getLoggedUser().departement.name;\r\n        }\r\n        this.isLoggedUserNull = () => {\r\n            return false == this.props.loginStatus || null == this.props.loggedUser;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showConfirmationDanger = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n\r\n        this.title = (title) => {\r\n            return <CommonTitle>{title}</CommonTitle>\r\n        }\r\n        this.refresh = () => {\r\n            this.setState({updated:new Date()});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated && null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n\r\nexport const CommonTitle = (props) => {\r\n    return <h2 style={{ textAlign: 'left', marginLeft:'10px' }}>{props.children}</h2>\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nexport default class BaseMenus extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            shownMenuList: {}\r\n        }\r\n\r\n        this.shownMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = true;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.hideMenuList = (id) => {\r\n            const shownMenuList = this.state.shownMenuList;\r\n            shownMenuList[id] = false;\r\n            this.setState({ shownMenuList: shownMenuList });\r\n        }\r\n        this.isMenuListShown = (id) => {\r\n            return this.state.shownMenuList[id] == true;\r\n        }\r\n        this.toggleMenuList = (e) => {\r\n            const menuName = e.target.getAttribute(\"menu-name\");\r\n            if (this.isMenuListShown(menuName)) {\r\n                this.hideMenuList(menuName);\r\n            } else {\r\n                this.shownMenuList(menuName);\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    extractChildren(menuChildren) {\r\n        const children = [];\r\n        for (let i = 0; i < menuChildren.length; i++) {\r\n            const element = menuChildren[i];\r\n            if (element.authenticated && this.isLoggedUserNull()) {\r\n                continue;\r\n            }\r\n            if (this.isLoggedUserNull() == false && element.role != null && this.getLoggedUser().role != element.role) {\r\n                continue;\r\n            }\r\n            children.push(element);\r\n        }\r\n\r\n        return children;\r\n    }\r\n    \r\n\r\n}\r\n","\r\nexport const MENUS = [\r\n    {\r\n        name: 'Umum',\r\n        children: [\r\n            {\r\n                name: 'Home',\r\n                link: '/home',\r\n                iconClassName: 'fas fa-home',\r\n            }, {\r\n                name: 'Dashboard',\r\n                link: '/dashboard',\r\n                iconClassName: 'fas fa-tachometer-alt',\r\n                authenticated: true,\r\n\r\n            }, {\r\n                name: 'Aduan',\r\n                link: '/issues-public',\r\n                iconClassName: 'fas fa-envelope-open-text',\r\n                // authenticated: true,\r\n            }]\r\n    }, {\r\n        name: 'Notulensi',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/discussiontopics',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        }, {\r\n            name: 'Tambah Notulensi',\r\n            link: '/meetingnote/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n        }]\r\n    }, {\r\n        name: 'Aduan',\r\n        children: [{\r\n            name: 'List',\r\n            link: '/issues',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-list',\r\n        },\r\n        {\r\n            name: 'Tambah',\r\n            link: '/issues/create',\r\n            authenticated: true,\r\n            iconClassName: 'fas fa-plus-square',\r\n            role: 'admin'\r\n        }]\r\n    // }, {\r\n    //     name: 'Tema Pembahasan',\r\n    //     children: [{\r\n    //         name: 'List',\r\n    //         link: '/discussiontopics',\r\n    //         authenticated: true,\r\n    //         iconClassName: 'fas fa-list',\r\n    //     }]\r\n    }, {\r\n        name: 'Master Data',\r\n        children: [\r\n            {\r\n                name: 'Menu',\r\n                link: '/management',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                // iconClassName: 'fas fa-database'\r\n            },\r\n            {\r\n                name: 'User',\r\n                link: '/management/users',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-users',\r\n            }, {\r\n                name: 'Bidang',\r\n                link: '/management/departements',\r\n                authenticated: true,\r\n                role: 'admin',\r\n                iconClassName: 'fas fa-object-group',\r\n            }]\r\n    }\r\n]\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport './SideBar.css'\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\n\r\nclass Header extends BaseMenus {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            showBurger: false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({ showBurger: !this.state.showBurger })\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link style={{ backgroundColor: '#fff' }} className=\"navbar-item\" to=\"/\">\r\n                            <img src=\"kiis-stroke.png\" width=\"38\" height=\"38\" />\r\n                        </Link>\r\n                        <div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"topNav\" className={this.state.showBurger ? \"is-active navbar-menu\" : \" navbar-menu\"}>\r\n                        <div className=\"navbar-start\">\r\n                            {MENUS.map((menu, i) => {\r\n                                const childs = this.extractChildren(menu.children);\r\n                                if (childs == null || childs.length == 0) { return null; }\r\n                                const isMenuListShown = this.isMenuListShown(menu.name);\r\n                                const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                                return (\r\n                                    <React.Fragment key={\"NavMenu_\" + menu.name}>\r\n                                        <p style={{ marginLeft: '10px' }} onClick={this.toggleMenuList} menu-name={menu.name} className=\"menu-label\">\r\n                                            <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                            {menu.name}  </p>\r\n                                        {isMenuListShown ?\r\n                                            <ul className=\"menu-list\">\r\n                                                {childs.map((linkProperty, j) => {\r\n                                                    return <AppLink key={\"header-link-\" + j + \"-\" + i} loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                                                })}\r\n                                            </ul> : null}\r\n                                    </React.Fragment>)\r\n                            })}\r\n                        </div>\r\n                        <div className=\"navbar-end\">\r\n                            <div className=\"navbar-item\">\r\n                                <div className=\"buttons has-addons\">\r\n\r\n                                    {this.props.loginStatus ?\r\n                                        <><Link className=\"button is-info\" to=\"/profile\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                        </Link>\r\n                                            <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                                <span className=\"icon\">\r\n                                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                                </span>\r\n                                                <span>Logout</span>\r\n                                            </a>\r\n                                        </> :\r\n                                        <Link className=\"button is-info\" to=\"/login\">\r\n                                            <span className=\"icon\">\r\n                                                <i className=\"fas fa-user\"></i>\r\n                                            </span>\r\n                                            <span>Login</span>\r\n                                        </Link>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    const iconClassName = linkProperty.iconClassName ? linkProperty.iconClassName : 'fas fa-folder';\r\n    if (null == linkProperty.link) {\r\n        return null;\r\n    }\r\n\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if (linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >\r\n            <span className=\"icon\"><i className={iconClassName} /></span>\r\n            <span>\r\n                {linkProperty.name}\r\n            </span>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header))\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            if (this.props.enableHidden){\r\n                this.setState({show:false});\r\n            }\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                    {this.props.children}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div className=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} className=\"column is-5-tablet is-5-desktop is-5-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field has-text-centered\">\r\n                            <span style={{fontSize:'70px'}}><i className=\"fas fa-user-circle\"/></span>\r\n                            <p>Sign In</p>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label   className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. user@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label  className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const iconClassName = this.props.headerIconClassName;\r\n        const iconOnClick = this.props.headerIconOnClick;\r\n\r\n        return (\r\n            <div className=\"card\" style={{ margin: '10px', ...this.props.style }}>\r\n                <header className=\"card-header\">\r\n                    <p className=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    {null == iconClassName ? null : <HeaderIcon className={iconClassName} onClick={iconOnClick} /> }\r\n                </header>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer className=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} className=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} className=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} className=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst HeaderIcon = (props) => {\r\n    return (\r\n        <a className=\"card-header-icon\" aria-label=\"more options\" onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={props.className} aria-hidden=\"true\"></i>\r\n            </span>\r\n        </a>\r\n    );\r\n}","import  React  from 'react';\r\nimport { contextPath } from './../../constant/Url';\r\n\r\nexport const AnchorWithIcon = (props) => {\r\n    const className = props.className;\r\n    const iconClassName = props.iconClassName;\r\n    return (\r\n        <a className={\"button \" +className} style={props.style} onClick={props.onClick}>\r\n            <span className=\"icon\">\r\n                <i className={iconClassName}></i>\r\n            </span>\r\n            <span>{props.children}</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport const AttachmentLink = (props) => {\r\n    const link = contextPath()+ props.to;\r\n    return (\r\n        <a href={link} target=\"_blank\" className={\"button is-small\"} style={props.style}  >\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-link\"></i>\r\n            </span>\r\n            <span>Open</span>\r\n        </a>\r\n    )\r\n}","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = \"\";\r\n\tstring = new Date().getUTCMilliseconds();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport const replaceString = (string, toReplace, replacement) => {\r\n\ttry {\r\n\t\tconst splitted = new String(string).split(toReplace);\r\n\t\treturn splitted.join(replacement);\r\n\t} catch (error) {\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n \r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst rawVal = parseInt(val);\r\n\tlet nominal =  Math.abs(val).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) {\r\n\t\tlet zero = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzero++;\r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zero == 3) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzero = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif(rawVal < 0){\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { AnchorWithIcon } from '../../buttons/buttons';\r\nimport { uniqueId } from './../../../utils/StringUtil';\r\n\r\nconst PIE_W = 100, RAD = 2 * Math.PI;\r\nconst MAX_DEG = 360;\r\nconst PIE_CANVAS_SIZE = 300;\r\nconst circleX = 150, circleY = 150;\r\nexport default class PieChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.id = uniqueId() + \"_\" + (new Date().getTime()) + (\"_pie_chart_canvas\");\r\n        this.state = {\r\n            proportions: [],\r\n            showDetail: false\r\n        }\r\n        this.timeoutId = null;\r\n        this.accumulationDegree = 0;\r\n\r\n        this.updatePie = () => {\r\n            this.accumulationDegree = 0;\r\n            const proportions = this.state.proportions;\r\n\r\n            const canvas = document.getElementById(this.id);\r\n            if (null == canvas) {\r\n                return;\r\n            }\r\n            const ctx = canvas.getContext(\"2d\");\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.fillStyle = '#ccc';\r\n            let currentRad = RAD;\r\n            let currentDegree = 0;\r\n            let x = circleX + PIE_W, y = circleY;\r\n\r\n\r\n            for (let i = 0; i < proportions.length; i++) {\r\n\r\n                const element = proportions[i];\r\n\r\n                if (element.proportion <= 0) { continue; }\r\n\r\n                const endAngle = currentRad - element.proportion * RAD;\r\n                ctx.fillStyle = element.color;\r\n                ctx.strokeStyle = element.color;\r\n                ctx.beginPath();\r\n                ctx.arc(circleX, circleY, PIE_W, currentRad, endAngle, true);\r\n                // ctx.stroke();\r\n                ctx.fill();\r\n\r\n                currentDegree = element.proportion * MAX_DEG;\r\n                this.accumulationDegree += currentDegree;\r\n                const coord = this.calculatePosition(endAngle, element.proportion, ctx);\r\n\r\n                ctx.fillStyle = element.color;\r\n                //drawLine\r\n                if (element.proportion < 0.5) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(circleX, circleY);\r\n                    ctx.lineTo(x, y);\r\n\r\n                    ctx.lineTo(coord.x, coord.y);\r\n                    // ctx.stroke();\r\n                    ctx.fill();\r\n                }\r\n\r\n                //drawLabel\r\n                const labelCoord = coord.labelCoord;\r\n                ctx.font = \"15px Arial\";\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(element.label + \" \" + parseFloat(100 * element.proportion).toFixed(2) + \"%\", labelCoord.x, labelCoord.y);\r\n\r\n                x = coord.x;\r\n                y = coord.y;\r\n\r\n                currentRad = endAngle;\r\n            }\r\n        }\r\n\r\n        this.calculatePosition = (radians, value, ctx) => {\r\n            const mainCoord = this.calculateCoordinate(radians,\r\n                this.accumulationDegree, PIE_W);\r\n            //for label\r\n            const rad = value * RAD / 2;\r\n            const deg = value * MAX_DEG / 2;\r\n            const labelCoord = this.calculateCoordinate(radians - rad,\r\n                this.accumulationDegree - deg, PIE_W / 2);\r\n            return { ...mainCoord, labelCoord: labelCoord };\r\n        }\r\n\r\n        this.calculateCoordinate = (radians, accDegree, radius) => {\r\n\r\n            let newX = 0, newY = 0;\r\n            const quad = this.getQuadrant(accDegree);\r\n\r\n            const adjustedX = Math.abs(radius * Math.cos(radians));\r\n            const adjuxtedY = Math.abs(radius * Math.sin(radians));\r\n            if (quad == 1) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n\r\n            } else if (quad == 2) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY - adjuxtedY;\r\n            } else if (quad == 3) {\r\n                newX = circleX - adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            } else if (quad == 4) {\r\n                newX = circleX + adjustedX;\r\n                newY = circleY + adjuxtedY;\r\n            }\r\n            // ctx.fillRect(newX-5, newY-5, 10, 10);\r\n            return { x: newX, y: newY }\r\n        }\r\n\r\n        this.getQuadrant = (value) => {\r\n            if (value <= 90) {\r\n                return 1;\r\n            }\r\n            if (value <= 180) {\r\n                return 2;\r\n            }\r\n            if (value <= 270) {\r\n                return 3;\r\n            }\r\n            return 4;\r\n        }\r\n\r\n        this.toggleDetail = () => {\r\n            this.setState({ showDetail: !this.state.showDetail });\r\n        }\r\n\r\n        this.proportionIsFixed = () => {\r\n            const stateProp = this.state.proportions;\r\n            const prop = this.getPropsProportion();\r\n            const fixed = this.sumValues(stateProp) >= this.sumValues(prop);\r\n            return fixed;\r\n        }\r\n\r\n        this.proportionIsEmpty = () => {\r\n            const stateProp = this.state.proportions;\r\n            const prop = this.getPropsProportion();\r\n\r\n            return this.sumValues(prop) == 0 || 0 == this.sumValues(stateProp);\r\n        }\r\n\r\n        this.getPropsProportion = () => {\r\n            const proportions = this.props.proportions;\r\n            proportions.sort(function (a, b) {\r\n                return b.proportion - a.proportion;\r\n            });\r\n            return proportions;\r\n        }\r\n\r\n        this.animate = () => {\r\n            const proportions = this.getPropsProportion();\r\n            // while (this.proportionIsFixed() == false) {\r\n\r\n            const stateProp = this.state.proportions;\r\n            for (let i = 0; i < proportions.length; i++) {\r\n                const element = proportions[i];\r\n                if (stateProp[i] == null) {\r\n                    stateProp.push({\r\n                        proportion: 0,\r\n                        value: element.value,\r\n                        label: element.label,\r\n                        color: element.color\r\n                    })\r\n                }\r\n                if (stateProp[i].proportion < element.proportion) {\r\n                    stateProp[i].proportion += 0.005;\r\n                }\r\n                if (stateProp[i].proportion >= element.proportion) {\r\n                    stateProp[i].proportion = element.proportion;\r\n                }\r\n            }\r\n            this.setState({ proportions: stateProp });\r\n            if (this.proportionIsFixed() == false) {\r\n                this.requestAnimation();\r\n            }\r\n        }\r\n        // }\r\n\r\n        this.requestAnimation = () => {\r\n            if (null != this.timeoutId) {\r\n                clearTimeout(this.timeoutId);\r\n            }\r\n            this.timeoutId = setTimeout(this.animate, 1);\r\n        }\r\n\r\n        this.resetProportion = () => {\r\n            this.setState({ proportions: [] });\r\n        }\r\n\r\n    }\r\n\r\n    sumValues(proportions) {\r\n        let val = 0;\r\n        for (let i = 0; i < proportions.length; i++) {\r\n            const element = proportions[i];\r\n            val += element.proportion;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n    componentDidUpdate() {\r\n        this.requestAnimation();\r\n        this.updatePie();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ marginBottom: '20px' }}><h3>{this.props.title ? this.props.title : \"Grafik\"}</h3>\r\n                <div style={{ height: 'auto' }} className=\"columns\">\r\n\r\n                    <div className=\"column has-text-centered \" style={{ overflowX: 'scroll' }}>\r\n                        {this.proportionIsEmpty() ? <h2 style={{ height: PIE_CANVAS_SIZE }}>Tidak ada data</h2> :\r\n                            <canvas id={this.id} className=\"has-background-light\" width={PIE_CANVAS_SIZE} height={PIE_CANVAS_SIZE}></canvas>\r\n                        }\r\n                    </div>\r\n                    <div className=\"column \">\r\n                        <AnchorWithIcon style={{ marginBottom: '10px' }} onClick={this.toggleDetail}\r\n                            iconClassName={this.state.showDetail ? \"fas fa-angle-up\" : \"fas fa-angle-down\"}>{this.state.showDetail ? \"Close\" : \"Show\"} Detail</AnchorWithIcon>\r\n                        {this.state.showDetail ? <DetailPie proportions={this.state.proportions} /> : null}\r\n                    </div>\r\n                </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DetailPie = (props) => {\r\n    return (<article className=\"message\">\r\n        <div className=\"message-body\" style={{ overflowX: 'scroll' }}>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>Warna</th>\r\n                        <th>Keterangan</th>\r\n                        <th>Nilai</th>\r\n                        <th>Presentase</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.proportions.map((proportion, i) => {\r\n                        return (\r\n                            <tr key={\"PIE_PROP_\" + i}>\r\n                                <td style={{ width: '20px' }}>{i + 1}</td>\r\n                                <td style={{ padding: '5px', width: '50px' }}>\r\n                                    <div style={{ width: '40px', height: '40px', backgroundColor: proportion.color, }} />                            </td>\r\n                                <td>{proportion.label}</td>\r\n                                <td>{proportion.value}</td>\r\n                                <td>{parseFloat(100 * proportion.proportion).toFixed(2)}%</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </article>)\r\n}","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    const token = getLoginKey();\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        // 'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n    if (token != null && token.toString().trim() != \"\") {\r\n        header['Authorization'] = 'Bearer '+ token;\r\n    }\r\n    return header;\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst axios = require('axios')\r\n\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.data)\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class RecordHistoriesService {\r\n    static instance = RecordHistoriesService.instance || new RecordHistoriesService();\r\n    getStatistic = (departement_id = null) => {\r\n        const request = {\r\n            filter:{ fieldsFilter:{}}\r\n        }\r\n\r\n        if (null != departement_id) {\r\n            request.filter.fieldsFilter['departement_id'] = departement_id;\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/histories/statistic\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\nimport { replaceString } from '../../utils/StringUtil';\r\n\r\nexport const CapitalizeFirstLetter = (rawString) => {\r\n    if (null == rawString || rawString.length <= 1) {\r\n        return rawString;\r\n    }\r\n    const string = new String(rawString);\r\n    \r\n    let splitted = string.split(\"_\");\r\n    if (splitted.length > 1) {\r\n        let result = \"\";\r\n        for (let i = 0; i < splitted.length; i++) {\r\n            const element = splitted[i];\r\n            result+=CapitalizeFirstLetter(element)+ \" \";\r\n        }\r\n\r\n        return result;\r\n    }\r\n    let result = (string).substring(0,1).toUpperCase();\r\n    result+= (string).substring(1, string.length);\r\n\r\n    return result;\r\n}\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map((header, i) => {\r\n                const label = header.alias?header.alias:header.text;\r\n                return <th key={\"TH_\"+i}>{CapitalizeFirstLetter(label)}\r\n\r\n                    {header.withFilter ?\r\n                       <div className=\"field has-addons\">\r\n                       <div className=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div className=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field \"+props.className;\r\n    const orientation = props.orientation?props.orientation:\"horizontal\";\r\n    const label = props.label ? props.label : props.name;\r\n    return (\r\n        <div className={\"field is-\"+orientation}>\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{CapitalizeFirstLetter(label)}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea {...props.attributes} required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input  {...props.attributes} required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea  {...props.attributes} className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input  {...props.attributes} type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option, i) => {\r\n        return <option key={\"select-option-\"+i} value={option.value} >{option.text}</option>\r\n    })\r\n    const label = props.label?props.label:props.name;\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{CapitalizeFirstLetter(label)}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select {...props.attributes} required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select  {...props.attributes} id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? CapitalizeFirstLetter(props.label) : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.value}\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    const submitIconClassName = props.submitIconClassName ? props.submitIconClassName : \"fas fa-save\";\r\n    const submitButtonClassName = props.submitButtonClassName ? \"button \"+ props.submitButtonClassName : \"button is-link\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className={submitButtonClassName} type=\"submit\" style={{marginRight:'10px'}} >\r\n                        <span className=\"icon\"><i className={submitIconClassName}></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport PieChart from './PieChart';\r\nimport RecordHistoriesService from './../../../services/RecordHistoriesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport Message from './../../messages/Message';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nimport { SubmitResetButton, SelectField, LabelField } from '../../forms/commons';\r\nconst COLOR_CLOSED = 'rgb(180,230,30)';\r\nconst COLOR_NOT_CLOSED = 'rgb(255,170,200)';\r\n\r\n\r\nclass Statistic extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            errorLoadingStatistic: false\r\n        };\r\n        this.pieChartChildTopic = React.createRef();\r\n        this.pieChartChildIssue = React.createRef();\r\n\r\n        this.historiesService = RecordHistoriesService.instance;\r\n        this.statisticData = null;\r\n        this.departementList = [];\r\n\r\n        this.loadStatisticWithDepartement = (e) => {\r\n            e.preventDefault();\r\n            const input = document.getElementById(\"input-form-field-departement\");\r\n            const departement_id = input.value;\r\n            if (departement_id == 'all') {\r\n                this.loadStatistic(null);\r\n                return;\r\n            }\r\n            this.loadStatistic(departement_id);\r\n        }\r\n\r\n        this.statisticLoaded = (response) => {\r\n            this.statisticData = response;\r\n            if (this.pieChartChildTopic.current) {\r\n                this.pieChartChildTopic.current.resetProportion();\r\n            }\r\n            if (this.pieChartChildIssue.current) {\r\n                this.pieChartChildIssue.current.resetProportion();\r\n            }\r\n\r\n            if (this.isLoggedUserAdmin()) {\r\n                this.departementList = response.statistic.departements;\r\n                this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n            }\r\n        }\r\n\r\n        this.statisticFailedToLoad = (e) => {\r\n            console.error(e);\r\n            this.setState({ errorLoadingStatistic: true });\r\n        }\r\n        this.loadStatistic = (departement_id = null) => {\r\n            this.setState({ errorLoadingStatistic: false });\r\n            this.commonAjax(\r\n                this.historiesService.getStatistic, departement_id,\r\n                this.statisticLoaded,\r\n                this.statisticFailedToLoad,\r\n            )\r\n        }\r\n    }\r\n\r\n    getDiscussionTopicProportion = () => {\r\n        if (this.statisticData == null) { return null }\r\n        const statistic = this.statisticData.statistic;\r\n        const total_topic = statistic.topic_count;\r\n        const proportions = [\r\n            {\r\n                proportion: statistic.topic_closed_count / total_topic,\r\n                label: 'Closed',\r\n                color: COLOR_CLOSED,\r\n                value: statistic.topic_closed_count\r\n            },\r\n            {\r\n                proportion: statistic.topic_not_closed_count / total_topic,\r\n                label: 'Not Closed',\r\n                color: COLOR_NOT_CLOSED,\r\n                value: statistic.topic_not_closed_count\r\n            }\r\n        ]\r\n        return proportions;\r\n    }\r\n    getIssueProportion = () => {\r\n        if (this.statisticData == null) { return null }\r\n        const statistic = this.statisticData.statistic;\r\n        const total_issue = statistic.issue_count;\r\n        const proportions = [\r\n            {\r\n                proportion: statistic.issue_closed_count / total_issue,\r\n                label: 'Closed',\r\n                color: COLOR_CLOSED,\r\n                value: statistic.issue_closed_count\r\n            },\r\n            {\r\n                proportion: statistic.issue_not_closed_count / total_issue,\r\n                label: 'Not Closed',\r\n                color: COLOR_NOT_CLOSED,\r\n                value: statistic.issue_not_closed_count\r\n            }\r\n        ]\r\n        return proportions;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (null == this.state.statisticData) {\r\n            this.loadStatistic();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        if (this.state.errorLoadingStatistic) {\r\n            return (<Card title=\"Statistik\">\r\n                <ErrorInfo onClick={this.loadStatistic} /></Card>);\r\n        }\r\n        const discussionTopicProportions = this.getDiscussionTopicProportion();\r\n        const issueProportions = this.getIssueProportion();\r\n        if (null == discussionTopicProportions || null == issueProportions) {\r\n            return <Card title=\"Statistik\"><p>Please Wait</p></Card>\r\n        }\r\n        const departementListMapped = this.departementList.map(function (d) {\r\n            return {\r\n                value: d.id,\r\n                text: d.name\r\n            }\r\n        });\r\n        const departementOptions = [{ value: 'all', text: '-- Semua --' }, ...departementListMapped];\r\n        return (\r\n\r\n            <Card title=\"Statistik\">\r\n                <div id=\"pie_chart_discussion_topics\">\r\n                    <PieChart title=\"Tema Pembahasan\" ref={this.pieChartChildTopic} proportions={discussionTopicProportions} />\r\n                    <PieChart title=\"Aduan\" ref={this.pieChartChildIssue} proportions={issueProportions} />\r\n\r\n\r\n                    <form style={{ marginTop: '20px' }} onSubmit={\r\n                        this.isLoggedUserAdmin() ? (e) => this.loadStatisticWithDepartement(e) : (e) => {\r\n                            e.preventDefault();\r\n                            this.loadStatistic(null)\r\n                        }}>\r\n                        {this.isLoggedUserAdmin() ?\r\n                            <SelectField name=\"departement\" options={\r\n                                departementOptions} /> : null}\r\n                        <LabelField label=\"updated_at\" value={new Date(this.statisticData.date).toString()} />\r\n                        <SubmitResetButton submitButtonClassName=\"no\" submitIconClassName=\"fas fa-sync\" submitText=\"Reload\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nconst ErrorInfo = (props) => {\r\n\r\n    return (\r\n        <Message enableHidden={false} className=\"is-danger\" header=\"Gagal Memuat Data\">\r\n            <AnchorWithIcon onClick={props.onClick} iconClassName=\"fas fa-sync\">Muat Ulang</AnchorWithIcon>\r\n        </Message>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(actions.applicationAction.storeApplicationData(code, data)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Statistic));","export const DATA_KEY_DEPARTEMENTS = \"departements\";","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../../redux/actions/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport PieChart from './PieChart';\r\nimport RecordHistoriesService from './../../../services/RecordHistoriesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport Message from './../../messages/Message';\r\nimport Statistic from './Statistic';\r\n\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n        };\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Dashboard\";\r\n    }\r\n\r\n    render() {\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Dashboard</CommonTitle>\r\n                <Card title=\"Welcome\" >\r\n                    <p>{this.getLoggedUser().display_name}</p>\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n               <Statistic app={this.props.app} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        if (this.isLoggedUserNull() ||\r\n            this.getLoggedUser().role != 'admin') {\r\n            this.backToLogin();\r\n        }\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Master Data Menu</CommonTitle>\r\n                <Card title=\"Menu\">\r\n                    <div className=\"columns\">\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-object-group\"></i></p>\r\n                                <Link to=\"/management/departements\">Departements</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={columnClass}>\r\n                            <div className=\"box has-text-centered\">\r\n                                <p><i style={{ fontSize: '50px' }} className=\"fas fa-users\"></i></p>\r\n                                <Link to=\"/management/users\">Users</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(ManagementMenu));\r\n","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    storeIssue = (issue) => {\r\n        const request = {\r\n            code: 'issue',\r\n            issue:issue\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    viewIssue = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"issue\"});\r\n    }\r\n\r\n    issueList = (filter) => {\r\n        return this.list({\r\n            code: 'issue',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map((data, i)=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a key={\"nav_btn_\"+i} onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )  \r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n            console.error(\"Error loading resource: \", e);\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link, withText = true) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        {withText?\r\n                        <span>Edit</span>\r\n                        :null}\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink, false)}\r\n                    {this.buttonDeleteRecord(id, false)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id, withText = true) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    {withText?\r\n                    <span>Delete</span>\r\n                    :null}\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map((cell, i)=>{\r\n                    return <div key={\"column-\"+i} className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record-user-\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.onSuccessDelete = (response) => {\r\n            this.removeDataFromStore(response.record_id);\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n        this.removeDataFromStore = (id) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) { return; }\r\n            const exist = departementList.find(dep => dep.id == id) != null;\r\n            if (!exist) return;\r\n\r\n            for (let i = 0; i < departementList.length; i++) {\r\n                const element = departementList[i];\r\n                if (element.id == id) {\r\n                    departementList.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', withFilter: true },\r\n                                        { text: 'name', withFilter: true },\r\n                                        { text: 'description', withFilter: true },\r\n                                        { text: 'action' }\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        return (<tr key={\"record_\" + i}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.description}</td>\r\n                                            <td>\r\n                                                {this.buttonsModifyAndDelete(\r\n                                                    \"/management/departements/\" + item.id,\r\n                                                    item.id)}\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/users/\"+response.user.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Users Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.updateLocallyStoredDepartements = (departement) => {\r\n            const appData = this.props.applicationData;\r\n            const departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            if (null == departementList) {return;}\r\n            const exist = departementList.find(dep => dep.id == departement.id) != null;\r\n            if (exist) {\r\n                for (let i = 0; i < departementList.length; i++) {\r\n                    const element = departementList[i];\r\n                    if (element.id == departement.id) {\r\n                        departementList[i] = departement;\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n                departementList.push(departement);\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            this.updateLocallyStoredDepartements(response.departement);\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/management/departements/\"+response.departement.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <CommonTitle>Departements Management</CommonTitle>\r\n                <h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n               <CommonTitle>Departements Management</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'notes',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/notes/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <ModalBackdrop>\r\n                    <form onSubmit={(e)=>e.preventDefault()}>\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly||this.props.isError?\"button\" : \"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </ModalBackdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport const ModalBackdrop = (props) => {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\n\r\nexport default class DiscussionTopicsService\r\n{\r\n    static instance = DiscussionTopicsService.instance || new DiscussionTopicsService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    store = (discussionTopic) => {\r\n\r\n        const request = {\r\n            discussion_topic: discussionTopic\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'discussion_topic',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    // delete = (id) => {\r\n    //     const endpoint = contextPath().concat(\"api/discussiontopics/delete/\"+id);\r\n    //     return commonAjaxPostCalls(endpoint, {});\r\n    // }\r\n    storeAction = (action) => {\r\n        const request = {\r\n            discussion_action: action\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/discussiontopics/action\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","export const byId = (id) => { return document.getElementById(id) }\r\n\r\n\r\n/**\r\n * \r\n * @param  {...string} ignoredIds \r\n */\r\nexport const clearFields = (...ignoredIds) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n\r\n    let withIgnore = ignoredIds != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore) {\r\n            for (let y = 0; y < ignoredIds.length; y++) {\r\n                if (inputs[i].id == ignoredIds[y]) continue loop;\r\n            }\r\n        }\r\n\r\n        if (inputs[i].type == \"text\") { inputs[i].value = \"\"; }\r\n        else if (inputs[i].type == \"number\") { inputs[i].value = 0; }\r\n        else { inputs[i].value = null; }\r\n    }\r\n}\r\n\r\nexport function getAttachmentData(input) {\r\n    const file = input.files[0];\r\n    const name = file.name;\r\n    const lastDot = name.lastIndexOf('.');\r\n    const fileName = name.substring(0, lastDot);\r\n    const ext = name.substring(lastDot + 1);\r\n    const size = file.size;\r\n    // console.debug(\"FileName: \", fileName, \"ext: \", ext, \"FILE:\", file);\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(input.files[0]);\r\n            reader.onload = function () {\r\n                const attachmentData = {\r\n                    isFile:true,\r\n                    data:reader.result,\r\n                    name:name,\r\n                    extension:ext,\r\n                    size:size\r\n                };\r\n                resolve(attachmentData); \r\n            }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\r\n\r\nexport function toBase64v2(fileInput) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(fileInput.files[0]);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport function toBase64(file, referer, callback) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n        alert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { ModalBackdrop } from './../../messages/Alert';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LabelField } from './../../forms/commons';\r\nimport { getAttachmentData } from './../../../utils/ComponentUtil';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nconst TOPIC_PREFIX = \"discussion_topic_\";\r\nconst CLASS_INPUT_FIELD = \"input-form-field\";\r\n\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            discussionTopicCount: [1],\r\n            showFormDiscussionTopicInEditMode: false\r\n        }\r\n\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.attachmentsData = {};\r\n        this.form_temporary_inputs = {};\r\n        this.meetingNote = { discussion_topics: [] };\r\n        this.isSubmitting = false;\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.getMaxDiscussionTopicID = () => {\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let max = 0;\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element > max) {\r\n                    max = element;\r\n                }\r\n            }\r\n            return max;\r\n        }\r\n\r\n        this.addDiscussionTopic = () => {\r\n            this.saveFormInputsToTemporaryData();\r\n            if (this.getRecordId() != null && null != this.meetingNote) {\r\n                this.setState({ showFormDiscussionTopicInEditMode: true });\r\n                return;\r\n            }\r\n\r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            \r\n            discussionTopicCount.push(this.getMaxDiscussionTopicID() + 1);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n\r\n        }\r\n\r\n        this.isDiscussionTopicClosed = (id) => {\r\n            if (null == this.meetingNote || null == this.meetingNote.discussion_topics) {\r\n                return false;\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const element = this.meetingNote.discussion_topics[i];\r\n                if (element.id == id && element.is_closed) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.removeDiscussionTopic = (id) => {\r\n            this.saveFormInputsToTemporaryData();\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Remove discussion topic (\" + id + \")? \")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.doRemoveDiscussionTopic(id);\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.doRemoveDiscussionTopic = (id) => {\r\n            \r\n            const discussionTopicCount = this.state.discussionTopicCount;\r\n            let index = null;\r\n\r\n            for (let i = 0; i < discussionTopicCount.length; i++) {\r\n                const element = discussionTopicCount[i];\r\n                if (element == id) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if (null == index) {\r\n                return;\r\n            }\r\n            discussionTopicCount.splice(index, 1);\r\n\r\n            //delete temp data\r\n            this.deleteTempFormData(id);\r\n            this.setState({ discussionTopicCount: discussionTopicCount });\r\n            this.setInputsFromTemporaryData();\r\n\r\n        }\r\n        this.deleteTempFormData = (id) => {\r\n            for (const key in this.form_temporary_inputs) {\r\n                if (this.form_temporary_inputs.hasOwnProperty(key)) { \r\n                    if (key.startsWith(TOPIC_PREFIX+id+\"_\")) {\r\n                        delete this.form_temporary_inputs[key];\r\n                    }\r\n                }\r\n            }\r\n            for (const key in this.attachmentsData) {\r\n                if (this.attachmentsData.hasOwnProperty(key)) { \r\n                    if (key.startsWith(TOPIC_PREFIX+id+\"_\")) {\r\n                        delete this.attachmentsData[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setInputsFromTemporaryData = () => {\r\n            console.debug(\"setTempDiscussionTopicValues: \", this.form_temporary_inputs);\r\n            // console.debug(\"attachmentData: \", this.attachmentsData);\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.type == 'file') continue;\r\n                if (null != this.form_temporary_inputs[element.name]) {\r\n                    element.value = this.form_temporary_inputs[element.name];\r\n                } else {\r\n                    element.value = null;\r\n                }\r\n\r\n                if (this.getRecordId() != null) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n        this.saveFormInputsToTemporaryData = () => {\r\n            this.form_temporary_inputs = {};\r\n            const form = document.getElementById(FORM_ID), app = this;\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                const name = element.name;\r\n                if (element.value == null || element.value == \"\") {\r\n                    continue;\r\n                }\r\n                if (element.type == 'file') { \r\n                    //\r\n                } else {\r\n                    this.form_temporary_inputs[name] = element.value;\r\n                }\r\n            }\r\n            console.debug(\"SAVED TEMP: \", this.form_temporary_inputs);\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (this.getRecordId() != null) {\r\n                return;\r\n            }\r\n            this.saveFormInputsToTemporaryData();\r\n            this.isSubmitting = true;\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n                app.isSubmitting = false;\r\n            });\r\n        }\r\n\r\n        this.onSubmitDiscussionTopic = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n\r\n            if (!window.confirm(\"Submit Data?\") || null == this.meetingNote) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            const discussionTopic = {\r\n                note_id: this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                discussionTopic[element.name] = element.value;\r\n            }\r\n            console.debug(\"SUBMIT:\", discussionTopic);\r\n            this.storeDiscussionTopic(discussionTopic);\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const rawInputs =  this.form_temporary_inputs;\r\n            for (const key in this.attachmentsData) {\r\n                if (this.attachmentsData.hasOwnProperty(key)) {\r\n                    const element = this.attachmentsData[key];\r\n                    rawInputs[key] = element;\r\n                }\r\n            }\r\n            const inputs = {};\r\n            //sort keys\r\n            Object.keys(rawInputs).sort().forEach(function(key) {\r\n                inputs[key] = rawInputs[key];\r\n            });\r\n            console.debug(\"inputs: \",inputs);\r\n            this.meetingNote = { discussion_topics: [] };\r\n            let currentDiscussionTopicID = -1;\r\n            let currentDiscussionTopicIndex = -1;\r\n            for (const key in inputs) {\r\n                const value = inputs[key];\r\n                if (key.startsWith(TOPIC_PREFIX)) {\r\n                    const indexAndName = extractTopicDiscussionIndexAndName(key);\r\n                    if (indexAndName.index != currentDiscussionTopicID) {\r\n                        this.meetingNote.discussion_topics.push({});\r\n                        currentDiscussionTopicID = indexAndName.index;\r\n                        currentDiscussionTopicIndex++;\r\n                    } \r\n                    if (value.isFile == true) {\r\n                        this.meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name+\"_info\"] = value;\r\n                    } else {\r\n                        this.meetingNote.discussion_topics[currentDiscussionTopicIndex][indexAndName.name] = value;\r\n                    }\r\n                } else {\r\n                    this.meetingNote[key] = value;\r\n                }\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"meetingNote: \", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n        this.addAttachmentData = (e, key) => {\r\n            this.saveFormInputsToTemporaryData();\r\n            const app = this;\r\n            getAttachmentData(e.target).then(function(data){\r\n                app.attachmentsData[key] = data;\r\n                app.refresh();\r\n            });\r\n        }\r\n        this.removeAttachment = (key) => {\r\n            this.saveFormInputsToTemporaryData();\r\n            const app = this;\r\n            this.showConfirmation(\"Remove attachment?\").then(function(ok){ \r\n                if(!ok) return;\r\n                try {\r\n                    delete app.attachmentsData[key];\r\n                    app.refresh();\r\n                } catch (error) { console.error(error)}\r\n            });\r\n        }\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"Success\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    this.props.history.push(\"/meetingnote/\" + response.meeting_note.id);\r\n                    this.handleSuccessGetRecord(response);\r\n                }\r\n            } catch (error) { console.error(error);  }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            const discussionTopics = this.meetingNote.discussion_topics;\r\n            let discussionTopicCount = [];\r\n            for (let i = 0; i < discussionTopics.length; i++) {\r\n                const element = discussionTopics[i];\r\n                discussionTopicCount.push(element.id);\r\n            }\r\n            this.form_temporary_inputs = {};\r\n\r\n            for (const key in this.meetingNote) {\r\n                if (this.meetingNote.hasOwnProperty(key)) {\r\n                    const element = this.meetingNote[key];\r\n                    if (key == (\"discussion_topics\")) {\r\n                        continue;\r\n                    }\r\n                    this.form_temporary_inputs[key] = element;\r\n                }\r\n            }\r\n            for (let i = 0; i < this.meetingNote.discussion_topics.length; i++) {\r\n                const discussion_topic = this.meetingNote.discussion_topics[i];\r\n                for (const key in discussion_topic) {\r\n                    if (discussion_topic.hasOwnProperty(key)) {\r\n                        const element = discussion_topic[key];\r\n                        this.form_temporary_inputs[TOPIC_PREFIX + discussion_topic.id + \"_\" + key] = element;\r\n                    }\r\n                }\r\n            }\r\n            // console.debug(\"FORM INPUTS: \", this.form_temporary_inputs);\r\n            this.setState({ discussionTopicCount: discussionTopicCount, isLoadingRecord: false });\r\n            \r\n            // console.debug(\"FORM INPUTS == : \", this.form_temporary_inputs);\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            if (null == form) {\r\n                return;\r\n            }\r\n            const inputs = form.getElementsByClassName(CLASS_INPUT_FIELD);\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n            }\r\n            if (this.isSubmitting == false) {\r\n                form.reset();\r\n            }\r\n        }\r\n\r\n        this.discussionTopicSaved = (response) => {\r\n            alert(\"Success\");\r\n            this.setState({ showFormDiscussionTopicInEditMode: false });\r\n            this.loadRecord();\r\n\r\n        }\r\n        this.handleErrorSubmitDiscussionTopic = (e) => {\r\n            alert(\"Error Update Discussion Topic: \" + e);\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeDiscussionTopic = (discussionTopic) => {\r\n            this.commonAjax(this.discussionTopicService.store, discussionTopic,\r\n                this.discussionTopicSaved, this.handleErrorSubmitDiscussionTopic);\r\n        }\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.recordSaved, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Notulensi\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n\r\n        if (this.getRecordId() == null && this.meetingNote != null) {\r\n            this.meetingNote = null;\r\n            this.form_temporary_inputs = {};\r\n            this.setState({ discussionTopicCount: [1] });\r\n        }\r\n        this.setInputsFromTemporaryData();\r\n    }\r\n\r\n    render() {\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n\r\n        const title = this.title(\"Notulensi Rapat\");\r\n        \r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        let notulis = \"\";\r\n        if (this.meetingNote != null && this.meetingNote.user != null) {\r\n            notulis = this.meetingNote.user.display_name;\r\n        } else {\r\n           notulis = this.getLoggedUser().display_name;\r\n        }\r\n        const formTitle = <>\r\n            {/* <Link to=\"/meetingnote\">Notulensi</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp; */}\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;\r\n            Form\r\n        </>\r\n\r\n        return (\r\n            <div>\r\n                {title}\r\n                {this.state.showFormDiscussionTopicInEditMode ?\r\n                    <FormAddDiscussionTopic onSubmit={this.onSubmitDiscussionTopic}\r\n                        onClose={(e) => this.setState({ showFormDiscussionTopicInEditMode: false })}\r\n                    /> : null\r\n                }\r\n                <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                    <Card title={formTitle}>\r\n                        {this.getRecordId() != null && this.meetingNote != null ?\r\n                            <FormUpperTag meetingNote={this.meetingNote} /> : null}\r\n                        \r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <LabelField label=\"Tema Pembahasan\" >\r\n                            <span className=\"tag is-dark\">\r\n                                <b>{this.state.discussionTopicCount.length}</b></span>\r\n                        </LabelField>\r\n                        <LabelField label=\"Notulis\" >{notulis}</LabelField>\r\n                    </Card>\r\n\r\n                    {/* ---------- discussion topics forms ----------- */}\r\n                    {this.state.discussionTopicCount.map((id, i) => {\r\n                        const isClosed = this.isDiscussionTopicClosed(id);\r\n                        const title = \"Tema Pembahasan #\" + (i + 1);// +\", id:\"+id;\r\n                        const inputPrefix = TOPIC_PREFIX + id;\r\n                        return (\r\n                            <Card title={title} key={\"disc_topic_field_\" + i}\r\n                            >\r\n                                {isClosed ?\r\n                                    <span className=\"tag is-primary\"><i className=\"fas fa-check\" />&nbsp;Closed</span> :\r\n                                    null}\r\n                                {this.getRecordId() == null && this.state.discussionTopicCount.length > 1 ?\r\n                                    <ButtonRemoveTopic id={id} removeDiscussionTopic={\r\n                                        this.removeDiscussionTopic} /> : null}\r\n\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={inputPrefix + \"_content\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={inputPrefix + \"_decision\"} type=\"textarea\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={inputPrefix + \"_deadline_date\"} type=\"date\" />\r\n                                <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={inputPrefix + \"_person_in_charge\"} />\r\n                                <InputField className=\"discussion-topic\" label=\"Attachment\" attributes={{onChange: (e) => this.addAttachmentData(e, inputPrefix + \"_attachment\")}} name={inputPrefix + \"_attachment\"} type=\"file\" note=\"Kosongkan jika tidak ada dokumen\" />\r\n                                {this.attachmentsData[inputPrefix + \"_attachment\"] ? \r\n                                <div className=\"tags has-addons\">\r\n                                    <span className=\"tag is-info\">\r\n                                        Attachment : {this.attachmentsData[inputPrefix + \"_attachment\"].name}\r\n                                    </span>\r\n                                    <span className=\"tag is-warning\" style={{cursor:'pointer'}} onClick={(e)=>this.removeAttachment(inputPrefix + \"_attachment\")}>remove</span>\r\n                                </div>\r\n                                :null}\r\n                                {/* {this.getRecordId() != null? } */}\r\n                                {this.getRecordId() != null ? <LinkEditAndAction id={id} /> : null}\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                    <ButtonAddTopic addDiscussionTopic={this.addDiscussionTopic} />\r\n                    {this.getRecordId() == null ?\r\n                    <Card title=\"Action\">\r\n                        <SubmitResetButton submitText={\"Create\"} withReset={true} />\r\n                    </Card>\r\n                        : null}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormAddDiscussionTopic = (props) => {\r\n    return (\r\n        <ModalBackdrop >\r\n            <div className=\"container\">\r\n                <Card title=\"Tambah Tema Pembahasan\"\r\n                    headerIconClassName=\"fas fa-times\"\r\n                    headerIconOnClick={props.onClose}\r\n                >\r\n                    <form onSubmit={props.onSubmit}>\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Pembahasan\" name={\"content\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Keputusan\" name={\"decision\"} type=\"textarea\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Deadline\" name={\"deadline_date\"} type=\"date\" />\r\n                        <InputField className=\"discussion-topic\" required={true} label=\"Penganggung Jawab\" name={\"person_in_charge\"} />\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                    <div className=\"level\">\r\n                        <div className=\"level-left\">\r\n                        <a className=\"button\" onClick={props.onClose}>Close</a>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </Card>\r\n            </div>\r\n        </ModalBackdrop>\r\n    )\r\n}\r\n\r\nconst extractTopicDiscussionIndexAndName = (elementName) => {\r\n    const result = {\r\n        index: 0,\r\n        name: null,\r\n    }\r\n    let elementNameSplitKey = elementName.split(TOPIC_PREFIX);\r\n    let elementNameSplitIndex = elementNameSplitKey[1].split(\"_\");\r\n    result.index = parseInt(elementNameSplitIndex[0]);\r\n    result.name = elementName.split(TOPIC_PREFIX + result.index + \"_\")[1];\r\n    return result;\r\n}\r\n\r\nconst ButtonRemoveTopic = (props) => {\r\n\r\n    return (\r\n        <a className=\"button is-danger is-outlined\" onClick={(e) => props.removeDiscussionTopic(props.id)}>\r\n            <span className=\"icon\"><i className=\"fas fa-times\" /></span>\r\n            <span>Remove</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nconst DiscussionTopicStatusInfo = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    if (null == meetingNote) return null;\r\n    const discussion_topics = meetingNote.discussion_topics;\r\n    if (null == discussion_topics) return null;\r\n    let closed = 0;\r\n    for (let i = 0; i < discussion_topics.length; i++) {\r\n        const element = discussion_topics[i];\r\n        if (element.is_closed) {\r\n            closed++;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table><tbody><tr >\r\n            <td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Closed</span>\r\n                    <span className=\"tag is-info\">{closed}</span>\r\n                </div>\r\n            </td><td style={{ border: 'none' }}>\r\n                <div className=\"tags has-addons are-small\">\r\n                    <span className=\"tag is-light\">Not Closed</span>\r\n                    <span className=\"tag is-danger\">{discussion_topics.length - closed}</span>\r\n                </div></td>\r\n        </tr></tbody></table>\r\n    )\r\n}\r\n\r\nconst ButtonAddTopic = (props) => {\r\n    return (\r\n        <div className=\"has-text-centered\">\r\n            <a className=\"button is-primary is-outlined\" onClick={props.addDiscussionTopic}\r\n                style={{ marginTop: '10px', marginBottom: '10px' }}>\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                </span>\r\n                <span>{\"Tambah Tema Pembahasan\"}</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    const id = props.id;\r\n    return (\r\n        <div className=\"buttons has-addons\">\r\n            <Link to={\"/discussiontopics/\" + id} className=\"button is-warning\">\r\n                <i className=\"fas fa-edit\" />&nbsp;Edit\r\n            </Link>\r\n            <Link to={\"/discussiontopics/\" + id + \"/action\"} className=\"button is-primary\">\r\n                <i className=\"fas fa-location-arrow\" />&nbsp;Konfirmasi\r\n            </Link></div>\r\n    )\r\n}\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\nconst FormUpperTag = (props) => {\r\n    const meetingNote = props.meetingNote;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <div className=\"level\">\r\n                <div className=\"level-left\" >\r\n                    <DiscussionTopicStatusInfo meetingNote={meetingNote} />\r\n                </div>\r\n                <div className=\"level-right\">\r\n                    <span className=\"tag is-primary is-medium\">{meetingNote.departement.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent, { CommonTitle } from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actions/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <CommonTitle>Profile</CommonTitle>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\n\r\nexport default class IssuesService\r\n{\r\n    static instance = IssuesService.instance || new IssuesService();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    //public//\r\n    departementList = () => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/departements\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    storePublicIssue =(issue) => {\r\n        const endpoint = contextPath().concat(\"api/public/issues/store\");\r\n        return commonAjaxPostCalls(endpoint, {\r\n            issue:issue\r\n        });\r\n    }\r\n\r\n    //authenticated//\r\n    list = (filter) => {\r\n        const request = {\r\n            code: 'issue',\r\n            filter: filter\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    view = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    delete = (id) => {\r\n        const endpoint = contextPath().concat(\"api/issues/delete/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    followUpIssue = (followUp) => {\r\n        const request = {\r\n            followed_up_issue: followUp\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/issues/followup\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React,{ Component } from 'react';\r\nimport BaseComponent, { CommonTitle } from './../../BaseComponent';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport Columns from './../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n\r\nclass IssuesList extends BaseManagementPage\r\n{\r\n    constructor(props){\r\n        super(props, \"Aduan\", \"issue\");\r\n        this.state = {}\r\n        this.issueService = IssuesService.instance;\r\n\r\n        //overrid\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.issueService.delete,\r\n                id,\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        \r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.issueService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Aduan\";\r\n    }\r\n\r\n    //overrid baseAdminPage\r\n    componentDidUpdate(){\r\n        if (this.isLoggedUserNull() ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.isLoggedUserNull()) {return null;}\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        const isAdmin = this.props.loggedUser.role == \"admin\";\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Aduan</CommonTitle>\r\n                <Card title=\"Daftar Aduan\">\r\n                {!isAdmin?null:this.linkToFormCreate(\"/issues/create\", \"Tambah Aduan\")}\r\n                <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'date', withFilter: true },\r\n                                    { text: 'place', withFilter: true },\r\n                                    { text: 'content', withFilter: true },\r\n                                    { text: 'issuer', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'issue_input', withFilter: true },\r\n                                    { text: 'attachment', withFilter: true },\r\n                                    { text: 'is_closed', alias:'Status', withFilter: true},\r\n                                    { text: 'closed_date', alias:'Closed', withFilter: true},\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                                <tbody>\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr key={\"record_\"+i}>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.place}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.issuer}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.issue_input}</td>\r\n                                    <td>{item.attachment == null ? null : <AttachmentLink to={\"upload/issue/\"+item.attachment} />}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-warning\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.closed_date}\r\n                                    </td>\r\n                                    <td>\r\n                                        {isAdmin?\r\n                                        <>\r\n                                        <Link to={\"/issues/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        {this.buttonDeleteRecord(item.id, false)}\r\n                                        </>\r\n                                        :null}\r\n                                        <Link to={\"/issues/\" + item.id+\"/followup\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                            </tbody>\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesList));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField, LabelField } from '../../forms/commons';\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nimport { toBase64v2, getAttachmentData } from './../../../utils/ComponentUtil';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n\r\nexport const issue_sources = [\r\n    'Yayasan', 'Orang Tua', 'Santri', 'Pegawai', 'Tamu',\r\n]\r\n\r\nclass IssuesForm extends BaseAdminPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.departementList = [];\r\n        this.attachmentData = null;\r\n        this.record = null;\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.updateAttachmentData = (e) => {\r\n            const app = this;\r\n            getAttachmentData(e.target).then(function(data){\r\n                app.attachmentData = data;\r\n            }).catch(console.error);\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const issue = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n                    if (fieldName == \"attachment\") {\r\n                        issue[fieldName+\"_info\"] = this.attachmentData\r\n                    } else {\r\n                        issue[fieldName] = element.value\r\n                    }\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                issue.id = this.getRecordId();\r\n            }\r\n            this.store(issue);\r\n            console.debug(\"ISSUE: \", issue);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList= response.result_list;\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n            this.attachmentData = null;\r\n            this.record = null;\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/issues/\" + response.issue.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            console.error(e);\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (issue) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeIssue, issue,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n                this.commonAjax(\r\n                    this.masterDataService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    (error) => { }\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n                if (null != this.getRecordId()) {\r\n                    this.loadRecord();\r\n                }\r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.record = response.issue;\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.name == \"attachment\") {  continue; }\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.issue.departement_id;\r\n                } else {\r\n                    element.value = response.issue[element.name];\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            console.error(e);\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewIssue, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadDepartements();\r\n        document.title = \"Form Aduan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Form Aduan</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/issues\">Aduan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <CommonTitle>Form Aduan</CommonTitle>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Tanggal\" name=\"date\" type=\"date\" required={true} />\r\n                        <InputField label=\"Tempat\" name=\"place\" required={true} />\r\n                        <InputField label=\"Permasalahan\" name=\"content\" type=\"textarea\" required={true} />\r\n                        <InputField name=\"email\" type=\"email\" note=\"Kosongkan jika berstatus anonim\" />\r\n                         <SelectField label=\"Pengadu\" options={issue_sources.map(source => {\r\n                            return {\r\n                                value: source,\r\n                                text: source\r\n                            }\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"Bidang\" options={this.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        {this.getRecordId()!=null && this.record != null ?\r\n                            <LabelField label=\"Attachment\">\r\n                                {this.record.attachment?\r\n                                 <AttachmentLink to={\"upload/issue/\"+this.record.attachment} />\r\n                                :\"tidak ada\"}\r\n                            </LabelField>\r\n                            :<InputField name=\"attachment\" attributes={{accept:'image/*', onChange:this.updateAttachmentData}} type=\"file\" note=\"Kosongkan jika tidak ada dokumen\" />\r\n                        \r\n                        }\r\n                      \r\n                        <InputField label=\"Sumber Aduan\" name=\"issue_input\" required={true} />\r\n                       <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\nexport default withRouter(\r\n    connect(mapStateToProps, mapDispatchToProps)(IssuesForm));","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\nexport const getDiffDaysFromNow = (date) => {\r\n    const diff = new Date().getTime() - date.getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\nexport const getDiffDaysToNow = (date) => {\r\n    const diff = date.getTime() - new Date().getTime();\r\n    const diffDays = diff / (24 * 60 * 60 * 1000);\r\n    return diffDays;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ClosedStatus extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const isClosed = this.props.closed == true;\r\n        return (\r\n            <div className=\"tags has-addons are-medium\">\r\n                <span className=\"tag is-dark\">Status</span>\r\n                <span className={\"tag \" + (isClosed ? \"is-info\" : \"is-warning\")}>{isClosed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon, AttachmentLink } from './../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-follow-up-issue\";\r\nclass IssuesFollowingUpForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailIssue: true,\r\n        }\r\n        this.issue = {};\r\n        this.issueService = IssuesService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({ showDetailIssue: false });\r\n        }\r\n        this.showDetailIssue = () => {\r\n            this.setState({ showDetailIssue: true });\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                issue_id: this.issue.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.issue.follow_up = response.followed_up_issue;\r\n            this.issue.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.issue = response.issue;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (followUp) => {\r\n            this.commonAjax(this.issueService.followUpIssue, followUp,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.issueService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.issue != null && this.issue.is_closed == true;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        document.title = \"Follow Up Issue\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        if (this.isLoggedUserNull()) {\r\n            return null;\r\n        }\r\n        const isClosed = this.issue.is_closed;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Tindak Lanjut Aduan</CommonTitle>\r\n\r\n                <Card title=\"Detail Aduan\">\r\n                    <ClosedStatus closed={isClosed} />\r\n                    {this.state.showDetailIssue ?\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Aduan</p>\r\n                                <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Waktu dan Tempat\">\r\n                                    <p>{this.issue.place}, {dateStringDayMonthYearFromText(this.issue.date)}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Bidang\">\r\n                                    <p>{this.issue.departement.name}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Permasalahan\">\r\n                                    <p>{this.issue.content}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Pengadu\">\r\n                                    <p>{this.issue.email}, {this.issue.issuer}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Sumber Input\">\r\n                                    <p>{this.issue.issue_input}</p>\r\n                                </LabelField>\r\n                                <LabelField label=\"Attachment\">\r\n                                    {this.issue.attachment?\r\n                                    <AttachmentLink to={\"upload/issue/\"+this.issue.attachment} />\r\n                                    :null}\r\n                                </LabelField>\r\n\r\n                            </div>\r\n                        </article>\r\n                        :\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-down\" onClick={this.showDetailIssue}>\r\n                            Detail Aduan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Tindak Lanjut\">\r\n                    {this.issue.follow_up == null ?\r\n                        <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                        </form>\r\n                        :\r\n                        <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                            <div className=\"message-header\">\r\n                                <p>Detail Tindak Lanjut</p>\r\n                            </div>\r\n                            <div className=\"message-body has-background-light\">\r\n                                <LabelField label=\"Tanggal\"><p>{this.issue.follow_up.date}</p></LabelField>\r\n                                <LabelField label=\"Keterangan\"><p>{this.issue.follow_up.description}</p></LabelField>\r\n                            </div>\r\n                        </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssuesFollowingUpForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField, LabelField } from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport BaseManagementPage from './../management/BaseManagementPage';\r\nimport ClosedStatus from '../../messages/ClosedStatus';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n\r\nclass DiscussionTopicsForm extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const discussionTopic = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    discussionTopic[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                discussionTopic.id = this.getRecordId();\r\n            }\r\n            this.store(discussionTopic);\r\n            console.debug(\"discussionTopic: \", discussionTopic);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n\r\n            if (this.getRecordId() == null) {\r\n                this.handleSuccessGetRecord(response);\r\n                this.props.history.push(\"/discussiontopics/\" + response.discussion_topic.id);\r\n            }\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (discussionTopic) => {\r\n            this.commonAjax(\r\n                this.discussionTopicService.store, discussionTopic,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.recordData = response;\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false });\r\n\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = this.discussionTopic[element.name];\r\n                if (this.isClosed() == false && element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed() == true) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n        document.title = \"Form Tema Pembahasan\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const title = this.title(\"Form Tema Pembahasan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/discussiontopics\">Tema Pembahasan</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title={formTitle} >\r\n                    {this.getRecordId() != null && this.discussionTopic != null ?\r\n                        <div className=\"level\">\r\n                            <div className=\"level-left\">\r\n                                <ClosedStatus closed={isClosed} />\r\n                            </div>\r\n                            <div className=\"level-right\">\r\n                                <span className=\"tag is-primary is-medium\">{this.discussionTopic.departement == null ? null : this.discussionTopic.departement.name}</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null}\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        <LabelField label=\"Attachment\">\r\n                            {this.discussionTopic.attachment? \r\n                            <AttachmentLink to={\"upload/topic/\"+this.discussionTopic.attachment}/>:\r\n                            null\r\n                            }\r\n                        </LabelField>\r\n                        {this.isClosed() ? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkDetailMeetingNote = (props) => {\r\n    const note_id = props.note_id;\r\n    return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n            <Link to={\"/meetingnote/\" + props.note_id} className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-clipboard\"></i>\r\n                </span>\r\n                <span>Detail Notulensi</span>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DiscussionTopicsForm));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent, { CommonTitle } from '../../BaseComponent';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from '../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from '../../../utils/DateUtil';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { LinkDetailMeetingNote } from './DiscussionTopicsForm';\r\nimport { AnchorWithIcon, AttachmentLink } from '../../buttons/buttons';\r\nimport ClosedStatus from './../../messages/ClosedStatus';\r\n\r\nconst FORM_ID = \"form-input-discussion-action\";\r\nclass DiscussionActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailDiscussionTopic: true,\r\n        }\r\n        this.discussionTopic = {};\r\n        this.discussionTopicSerivce = DiscussionTopicsService.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailIssue = () => {\r\n            this.setState({showDetailDiscussionTopic:false});\r\n        }\r\n        this.showDetailDiscussionTopic = () => {\r\n            this.setState({showDetailDiscussionTopic:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                topic_id : this.discussionTopic.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"issue action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.discussionTopic.action = response.discussion_action;\r\n            this.discussionTopic.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.discussionTopic = response.discussion_topic;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.discussionTopicSerivce.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.discussionTopicSerivce.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.discussionTopic != null && this.discussionTopic.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.validateLoginStatus()){\r\n            return;\r\n        }\r\n        document.title = \"Konfirmasi Tema Pembahasan\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n \r\n    render() {\r\n        \r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return null;\r\n        }\r\n        \r\n        const title = this.title(\"Penyelesaian/Pelaksanaan Keputusan\");\r\n        if (this.state.recordNotFound) {\r\n            return <div>{title}<Message className=\"is-danger\" body=\"Record Not Found\" /></div>\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <div>{title}<h3>Please Wait...</h3></div>\r\n        }\r\n        const isClosed = this.discussionTopic.is_closed;\r\n        return (\r\n            <div>\r\n                {title}\r\n                <Card title=\"Detail Tema Pembahasan\">\r\n                    <ClosedStatus closed={isClosed} />\r\n                    <LinkDetailMeetingNote note_id={this.discussionTopic.note_id} />\r\n                    {this.state.showDetailDiscussionTopic? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header has-background-link\">\r\n                            <p>Detail Tema Pembahasan</p>\r\n                            <button onClick={this.hideDetailIssue} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                        <LabelField label=\"Waktu\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Bidang\">\r\n                                <p>{this.discussionTopic.departement.name}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.discussionTopic.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.discussionTopic.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.discussionTopic.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.discussionTopic.person_in_charge}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Attachment\">\r\n                                {this.discussionTopic.attachment?\r\n                                <AttachmentLink to={\"upload/topic/\"+this.discussionTopic.attachment} />\r\n                                :null}\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <AnchorWithIcon onClick={this.showDetailDiscussionTopic} iconClassName=\"fas fa-angle-down\">\r\n                        Detail Tema Pembahasan\r\n                    </AnchorWithIcon>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Penyelesaian/Pelaksanaan Keputusan\">\r\n                    {this.discussionTopic.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <formComponent.InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <formComponent.InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header has-background-link\">\r\n                            <p>Detail Tindak Lanjut</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.discussionTopic.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.discussionTopic.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getissues: (request, app) => dispatch(actions.issuesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionActionForm));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport { getDiffDaysToNow } from '../../../utils/DateUtil';\r\nimport MeetingNoteSerivce from './../../../services/MeetingNoteSerivce';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nclass MeetingNoteList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Notulensi\", \"notes\");\r\n        this.state = {}\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => { }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.meetingNoteService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = \"Daftar Notulensi\";\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>Daftar Notulensi</CommonTitle>\r\n                <Card title=\"Daftar Notulensi\">\r\n                    <LinkToFormCreate to=\"meetingnote/create\">Tambah Notulensi</LinkToFormCreate>\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table style={{}} className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'place', alias: \"Tempat\", withFilter: true },\r\n                                        { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'user', alias: \"Notulis\", withFilter: true },\r\n                                        { text: 'discussion_topics_count', alias:\"Topik\", withFilter:true},\r\n                                        { text: 'discussion_topics_closed_count', alias:\"closed\", withFilter:true},\r\n                                        { text: 'action', },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record-meeting-note-\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            <td>{item.id}</td>\r\n                                            <td>{item.date}</td>\r\n                                            <td>{item.place}</td>\r\n                                            <td>{item.departement ? item.departement.name : \"-\"}</td>\r\n                                            <td>{item.user ? item.user.name : \"-\"}</td>\r\n                                            <td>\r\n                                                {item.discussion_topics_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.discussion_topics_closed_count}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkEditPage id={item.id} />\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const LinkToFormCreate = (props) => {\r\n    return (\r\n        <Link to={props.to} className=\"button is-primary\" style={{ marginBottom: '10px' }}>\r\n            <span className=\"icon\">\r\n                <i className=\"fas fa-plus\"></i>\r\n            </span>\r\n            <span>{props.children}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst LinkEditPage = (props) => {\r\n    return (\r\n        <Link to={\"/meetingnote/\" + props.id} className=\"button is-small\" >\r\n            <i className=\"fas fa-edit\"></i>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteList));","import React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../../container/Card';\r\nimport BaseManagementPage from '../management/BaseManagementPage';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport Columns from '../../container/Columns';\r\nimport { TableHeadWithFilter, ButtonApplyResetFilter } from '../../forms/commons';\r\nimport IssuesService from '../../../services/IssuesService';\r\nimport DiscussionTopicsService from './../../../services/DiscussionTopicsService';\r\nimport { getDiffDaysToNow } from './../../../utils/DateUtil';\r\nimport { CommonTitle } from '../../BaseComponent';\r\nimport { LinkToFormCreate } from './../meetingnotes/MeetingNoteList';\r\nimport { AttachmentLink } from '../../buttons/buttons';\r\n// const title = \"Daftar Tema Pembahasan\";\r\nconst title = \"Daftar Topik\";\r\n        \r\nclass DiscussionTopicsList extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Topik Pembahasan\", \"discussiontopic\");\r\n        this.state = {}\r\n        this.discussionTopicService = DiscussionTopicsService.instance;\r\n\r\n        //override\r\n        this.deleteRecord = (id) => {\r\n            // this.commonAjax(\r\n            //     this.discussionTopicService.delete,\r\n            //     id,\r\n            //     this.onSuccessDelete,\r\n            //     this.onErrorDelete\r\n            // )\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n\r\n        this.commonAjax(this.discussionTopicService.list, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.validateLoginStatus()) {\r\n            return;\r\n        }\r\n        this.loadRecords();\r\n        document.title = title;\r\n    }\r\n\r\n    //override baseAdminPage\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false || this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n            recordData.result_list == null ? [] :\r\n            recordData.result_list;\r\n        return (\r\n            <div>\r\n                <CommonTitle>{title}</CommonTitle>\r\n                <Card title={title}>\r\n                <LinkToFormCreate to=\"meetingnote/create\">Tambah Notulensi</LinkToFormCreate>\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <div style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\">\r\n                                <TableHeadWithFilter\r\n                                    onButtonOrderClick={this.onButtonOrderClick}\r\n                                    headers={[\r\n                                        { text: 'No' },\r\n                                        // { text: 'id', alias: \"Id\", withFilter: true },\r\n                                        // { text: 'date', alias: \"Tanggal\", withFilter: true },\r\n                                        { text: 'content', alias: \"Topik\", withFilter: true },\r\n                                        // { text: 'decision', alias: \"Keputusan\", withFilter: true },\r\n                                        { text: 'person_in_charge', alias: \"PIC\", withFilter: true },\r\n                                        { text: 'deadline_date', alias: \"Deadline\", withFilter: true },\r\n                                        // { text: 'departement', alias: \"Bidang\", withFilter: true },\r\n                                        { text: 'is_closed', alias: 'Status', withFilter: true },\r\n                                        // { text: 'closed_date', alias: 'Closed', withFilter: true },\r\n                                        { text: 'attachment' },\r\n                                        { text: 'action' },\r\n                                        { text: 'opsi' },\r\n                                    ]} />\r\n                                <tbody>\r\n                                    {recordList.map((item, i) => {\r\n                                        const indexBegin = (this.page - 1) * this.limit;\r\n                                        const deadlineDate = Date.parse(item.deadline_date);\r\n                                        const style = {};\r\n                                        try {\r\n                                            const diffDay = getDiffDaysToNow(new Date(deadlineDate));\r\n\r\n                                            if (item.is_closed == false && diffDay <= 3 && diffDay > 0) {\r\n                                                style.backgroundColor = 'orange';\r\n                                            } else if (item.is_closed == false && diffDay < 0) {\r\n                                                style.backgroundColor = 'red';\r\n                                            }\r\n                                        } catch (e) {\r\n                                            //\r\n                                        }\r\n                                        return (<tr key={\"record_\" + i} style={style}>\r\n                                            <td>{indexBegin + i + 1}</td>\r\n                                            {/* <td>{item.id}</td> */}\r\n                                            {/* <td>{item.date}</td> */}\r\n                                            <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                            {/* <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td> */}\r\n                                            <td>{item.person_in_charge}</td>\r\n                                             <td>{item.deadline_date}</td>\r\n                                            {/* <td>{item.departement.name}</td> */}\r\n                                            <td>\r\n                                                {item.is_closed == true ?\r\n                                                    <span className=\"tag is-info\">Closed</span>\r\n                                                    :\r\n                                                    <span className=\"tag is-warning\">Not Closed</span>}\r\n                                            </td>\r\n                                            {/* <td>\r\n                                                {item.closed_date}\r\n                                            </td> */}\r\n                                            <td>\r\n                                                {item.attachment? \r\n                                                    <AttachmentLink to={\"upload/topic/\"+item.attachment}/>:null    \r\n                                                }\r\n                                            </td>\r\n                                            <td><LinkEditAndAction id={item.id} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={\"/meetingnote/\" + item.note_id}\r\n                                                    className=\"button is-light is-small\">\r\n                                                    <span className=\"icon\">\r\n                                                        <i className=\"fas fa-clipboard\" />\r\n                                                    </span>\r\n                                                    <span>Notulensi</span>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>)\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst LinkEditAndAction = (props) => {\r\n    return (\r\n        <>\r\n            <Link to={\"/discussiontopics/\" + props.id} className=\"button is-small\" >\r\n                <i className=\"fas fa-edit\"></i>\r\n            </Link>\r\n\r\n            <Link to={\"/discussiontopics/\" + props.id + \"/action\"} className=\"button is-primary is-small\" >\r\n                <i className=\"fas fa-location-arrow\"></i>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DiscussionTopicsList));","import React, { Component } from 'react';\r\nimport { CommonTitle } from '../../BaseComponent';\r\n\r\nexport default class NotFound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Not Found\";\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/* <CommonTitle>404 Not Found</CommonTitle> */}\r\n                <article class=\"message is-warning\">\r\n                    <div class=\"message-header\">\r\n                        <p>404 Not Found</p>\r\n                        <button class=\"delete\" aria-label=\"delete\"></button>\r\n                    </div>\r\n                    <div class=\"message-body\">\r\n                        Halaman tidak ditemukan\r\n  </div>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport { InputField, SubmitResetButton } from '../../forms/commons';\r\nimport { issue_sources } from './IssuesForm';\r\nimport { SelectField } from './../../forms/commons';\r\nimport IssuesService from './../../../services/IssuesService';\r\nimport { AnchorWithIcon } from './../../buttons/buttons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { applicationAction } from '../../../redux/actions/actionCreators';\r\nimport { DATA_KEY_DEPARTEMENTS } from './../../../constant/ApplicationDataKeys';\r\nimport { toBase64v2, getAttachmentData } from './../../../utils/ComponentUtil';\r\nconst ADDITION = \"+\";\r\nconst SUBSTRACTION = \"-\";\r\nclass IssueFormPublic extends BaseComponent {\r\n    constructor(props) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n            captchaUpdate: new Date(),\r\n            recordSave: false,\r\n        }\r\n        this.issueService = IssuesService.instance;\r\n        this.departementList = [];\r\n        this.attachmentData = null;\r\n        this.captcha = {\r\n            firstNumber: 1,\r\n            secordNumber: 2,\r\n            operator: ADDITION,\r\n            updatedAt: new Date()\r\n        };\r\n\r\n        this.updateAttachmentData = (e) => {\r\n            const app = this;\r\n            getAttachmentData(e.target).then(function(data){\r\n                app.attachmentData = data;\r\n            }).catch(console.error);\r\n        }\r\n\r\n        this.resetCaptcha = () => {\r\n            this.captcha.firstNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.secordNumber = Math.floor(Math.random() * 10) + 1;\r\n            this.captcha.operator = this.captcha.firstNumber % 2 == 0 ? ADDITION : SUBSTRACTION;\r\n            this.captcha.updatedAt = new Date();\r\n            this.setState({ captchaUpdate: this.captcha.updatedAt });\r\n        }\r\n\r\n        this.validateCaptcha = (value) => {\r\n            const number1 = this.captcha.firstNumber;\r\n            const number2 = this.captcha.secordNumber;\r\n            if (this.captcha.operator == ADDITION) {\r\n                return number1 + number2 == value;\r\n            } else if (this.captcha.operator == SUBSTRACTION) {\r\n                return number1 - number2 == value;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const capchaResult = document.getElementsByName(\"captcha_result\")[0].value;\r\n            const captchaValidated = this.validateCaptcha(capchaResult);\r\n            const app = this;\r\n            if (!captchaValidated) {\r\n\r\n                this.showError(\"Invalid Captcha\");\r\n                return;\r\n            }\r\n            this.showConfirmation(\"Submit Data?\").then(function (ok) {\r\n                if (ok) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const issue = {};\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (element.name == \"attachment\") {\r\n                    issue[element.name+\"_info\"] = this.attachmentData\r\n                } else {\r\n                    issue[element.name] = element.value\r\n                }\r\n            }\r\n            console.debug(\"Issue: \", issue);\r\n            this.storeIssue(issue);\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.departementList = response.result_list;\r\n            this.props.storeApplicationData(DATA_KEY_DEPARTEMENTS, this.departementList);\r\n        }\r\n        this.departementListNotLoaded = (error) => {\r\n            const app = this;\r\n            this.showConfirmationDanger(\"Error loading data.. please try or reload the page\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.loadDepartements();\r\n                    }\r\n                })\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.resetCaptcha();\r\n            this.setState({ recordSaved: true });\r\n            this.attachmentData = null;\r\n        }\r\n\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"Gagal menyimpan aduan: \" + e + \" Silakan muat ulang halaman dan coba lagi\");\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            const appData = this.props.applicationData;\r\n            if (appData[DATA_KEY_DEPARTEMENTS] == null ||\r\n                appData[DATA_KEY_DEPARTEMENTS].length == 0) {\r\n\r\n                this.commonAjax(\r\n                    this.issueService.departementList, {},\r\n                    this.departementListLoaded,\r\n                    this.departementListNotLoaded\r\n                );\r\n            } else {\r\n                this.departementList = appData[DATA_KEY_DEPARTEMENTS];\r\n            }\r\n            this.refresh();\r\n        }\r\n\r\n        this.storeIssue = (issue) => {\r\n            this.commonAjax(\r\n                this.issueService.storePublicIssue, issue,\r\n                this.recordSaved,\r\n                this.recordFailedToSave\r\n            );\r\n        }\r\n\r\n        this.showForm = () => {\r\n            this.setState({ recordSaved: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Aduan Publik\";\r\n        this.loadDepartements();\r\n        this.resetCaptcha();\r\n    }\r\n\r\n    componentDidUpdate() { }\r\n\r\n    render() {\r\n        const title = this.title(\"Form Aduan Publik\");\r\n        if (this.state.recordSaved == true) {\r\n\r\n            return (\r\n                <div>\r\n                    {title}\r\n                    <div className=\"box has-text-success\" style={{ textAlign: 'center', margin: '10px' }}>\r\n                        <span className=\"icon\" style={{ fontSize: '4em', marginTop: '30px' }}><i className=\"fas fa-check\" /></span>\r\n                        <h2>Terimakasih. Aduan Anda berhasil disimpan!</h2>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-angle-right\" onClick={this.showForm} >Kirim Tanggapan Lain</AnchorWithIcon>\r\n                    </div>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                {title}\r\n                <Card title=\"Form\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <InputField name=\"date\" label=\"tanggal\" type=\"date\" required={true} />\r\n\r\n                        <InputField name=\"place\" label=\"tempat\" required={true} />\r\n                        <InputField name=\"content\" label=\"permasalahan\" type=\"textarea\" required={true} />\r\n                        <InputField name=\"email\" type=\"email\" note=\"Kosongkan jika berstatus anonim\" />\r\n                        <SelectField label=\"pengadu\" options={issue_sources.map(source => {\r\n                            return { value: source, text: source };\r\n                        })} name=\"issuer\" required={true} />\r\n                        <SelectField label=\"bidang\" options={this.departementList.map(item => {\r\n                            return { value: item.id, text: item.name };\r\n                        })} name=\"departement_id\" required={true} />\r\n                        <InputField name=\"attachment\" attributes={{accept:'image/*', onChange:this.updateAttachmentData}} type=\"file\" note=\"Kosongkan jika tidak ada dokumen\" />\r\n                        <div className=\"field is-horizontal\">\r\n                            <div className=\"field-label\">Verifikasi</div>\r\n                            <div className=\"field-body\">\r\n                                <CaptCha reset={this.resetCaptcha} captcha={this.captcha} />\r\n                            </div>\r\n                        </div>\r\n                        <SubmitResetButton />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass CaptCha extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas_id = \"captcha_canvas_\" + new Date().getTime();\r\n    }\r\n    getCaptchaText() {\r\n        const captcha = this.props.captcha;\r\n        const text = captcha.firstNumber + \" \" + captcha.operator + \" \" + captcha.secordNumber;\r\n        return text;\r\n    }\r\n    drawCanvas() {\r\n        const canvas = document.getElementById(this.canvas_id);\r\n        const context = canvas.getContext('2d');\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.fillStyle = '#000';\r\n        context.font = '70px Arial';\r\n        context.fillText(this.getCaptchaText(), 10, 50);\r\n    }\r\n    componentDidUpdate() {\r\n        this.drawCanvas();\r\n    }\r\n    componentDidMount() {\r\n        this.drawCanvas();\r\n    }\r\n    render() {\r\n        const captcha = this.props.captcha;\r\n        return (\r\n\r\n            <article style={{ width: '100%' }} className=\"message \">\r\n                <div className=\"message-header has-background-grey-lighter\">\r\n                    <p className=\"has-text-dark\">Captcha</p>\r\n                    <a onClick={this.props.reset} className=\"button\"><i className=\"fas fa-sync\" /></a>\r\n                </div>\r\n                <div className=\"message-body has-background-light\">\r\n                    <canvas id={this.canvas_id} className=\"has-background-light\" style={{ width: '100px', height: 'auto' }} />\r\n                    <input className=\"input\" name=\"captcha_result\" required />\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        applicationData: state.applicationState.applicationData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    storeApplicationData: (code, data) => dispatch(applicationAction.storeApplicationData(code, data)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(IssueFormPublic));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/dashboard/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport Profile from '../pages/Profile';\r\nimport IssuesList from '../pages/issues/IssuesList';\r\nimport IssuesForm from '../pages/issues/IssuesForm';\r\nimport IssuesFollowingUpForm from '../pages/issues/IssuesFollowingUpForm';\r\nimport DiscussionActionForm from '../pages/discussiontopics/DiscussionActionForm';\r\nimport DiscussionTopicsForm from '../pages/discussiontopics/DiscussionTopicsForm';\r\nimport DiscussionTopicsList from '../pages/discussiontopics/DiscussionTopicsList';\r\nimport MeetingNoteList from '../pages/meetingnotes/MeetingNoteList';\r\nimport NotFound from './../pages/errors/NotFound';\r\nimport IssueFormPublic from './../pages/issues/IssueFormPublic';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          {/* ========= meeting notes ========= */}\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote\" render={\r\n            (props) =>\r\n              <MeetingNoteList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          {/* ======== issues ========= */}\r\n          <Route exact path=\"/issues\" render={\r\n            (props) =>\r\n              <IssuesList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/create\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id\" render={\r\n            (props) =>\r\n              <IssuesForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues-public\" render={\r\n            (props) => <IssueFormPublic app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/issues/:id/followup\" render={\r\n            (props) =>\r\n              <IssuesFollowingUpForm app={this.props.app} />\r\n          } />\r\n          {/* ======== discussiontopics ========= */}\r\n          <Route exact path=\"/discussiontopics\" render={\r\n            (props) =>\r\n              <DiscussionTopicsList app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id\" render={\r\n            (props) =>\r\n              <DiscussionTopicsForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/discussiontopics/:id/action\" render={\r\n            (props) =>\r\n              <DiscussionActionForm app={this.props.app} />\r\n          } />\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* ============== users management ============= */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* ================ departements management ============= */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n\r\n          {/* ////////////404///////////////// */}\r\n          <Route path=\"\" component={NotFound} />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div className=\"has-text-centered\">\r\n    <img src=\"kiis-stroke.png\" width=\"200\"  />\r\n    <h2>Kafila Console</h2>\r\n    \r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      // <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000, color: '#ccc'}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../BaseComponent';\r\n\r\nimport BaseMenus from './BaseMenus';\r\nimport { MENUS } from './../../constant/Menus';\r\n\r\nclass SideBar extends BaseMenus {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  >\r\n                <aside className=\"menu\">\r\n                    {MENUS.map((menu, i) => {\r\n                        const childs = this.extractChildren(menu.children);\r\n                        if (childs == null || childs.length == 0) { return null; }\r\n                        const isMenuListShown = this.isMenuListShown(menu.name);\r\n                        const iconClassName = isMenuListShown ? \"fas fa-angle-up\" : \"fas fa-angle-down\";\r\n\r\n                        return (\r\n                            <React.Fragment key={\"menu_\" + menu.name}>\r\n                                <p key={menu.name} menu-name={menu.name} onClick={this.toggleMenuList} className=\"menu-label\">\r\n                                    <i style={{ marginRight: '10px' }} className={iconClassName} />\r\n                                    {menu.name}\r\n                                </p>\r\n                                {isMenuListShown ?\r\n                                    <ul className=\"menu-list\">\r\n                                        {childs.map((menuChild, j) => {\r\n                                            return (<li key={\"sidebar-menu-child-\" + i + \"-\" + j}>\r\n                                                <Link to={menuChild.link}>\r\n                                                    <span className=\"icon\">\r\n                                                        <i className={menuChild.iconClassName ? menuChild.iconClassName : \"fas fa-folder\"} />\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        {menuChild.name}\r\n                                                    </span>\r\n                                                </Link>\r\n                                            </li>)\r\n                                        })}\r\n                                    </ul>\r\n                                    : null}\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        loggedUser: state.userState.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))\r\n\r\n","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport * as actions from './redux/actions/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nimport SideBar from './components/layout/SideBar';\nimport './components/layout/SideBar.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      \n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert\n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section style={{ minHeight: '70vh' }}>\n          <div >\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\" style={{ minHeight: '70vh', marginBottom: '1px' }}>\n            <div style={{ paddingTop: '20px', paddingLeft: '20px', borderRight:'solid 2px #ccc' }}\n              className=\"menu-container column is-one-fifth has-background-water-ter\">\n              \n                <SideBar app={this} />\n               \n            </div>\n            <div className=\"column is-four-fifths\">\n\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    requestId: state.userState.requestId,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    let result = {};\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n           result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            console.debug(\"DO_LOGIN\");\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n\r\n            console.debug(\"DO_LOGIN true \", new Date());\r\n            console.debug(\"APITOKEN: \", action.payload.loginKey);\r\n            setApiToken(action.payload.loginKey);\r\n            result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: true, //action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n           \r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n    applicationData: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    const result = state;\r\n    switch (action.type) {\r\n        case types.STORE_APPLICTION_DATA:\r\n            const key = action.payload.key;\r\n            const data = action.payload.data;\r\n           \r\n            result.applicationData[key] = data\r\n\r\n            return result;\r\n        case types.REMOVE_APPLICTION_DATA:\r\n            \r\n            delete result[action.payload.key];\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as applicationReducer from \"./applicationReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        applicationState: applicationReducer.reducer,\r\n        \r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    applicationState: applicationReducer.initState,\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nimport * as url from '../constant/Url'\r\nconst axios = require('axios');\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, action.payload, {headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    // Axios.post\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: headers\r\n    }).then(response  => {\r\n            const responseJson = response.data;\r\n            \r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: true, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            \r\n             console.error(\"ERROR Get User, will get requestId\"); \r\n             const endpoint = url.contextPath().concat(\"api/account/requestid\")\r\n            axios.get(endpoint).then(response=>{\r\n                const responseJson = response.data;\r\n                let requestId = responseJson.message;\r\n            \r\n                let newAction = Object.assign({}, action, { payload: {loginStatus: false, loginKey:null, requestId:requestId, ...responseJson }});\r\n                delete newAction.meta;\r\n                store.dispatch(newAction);\r\n            }).catch((error)=>{\r\n                alert(\"Error requesting application: \"+error+\". Try to reload the page\");\r\n            });\r\n         })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, action.payload, {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as types from '../redux/types'\r\n\r\n\r\nexport const storeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_APPLICTION_DATA) {\r\n        // console.debug(\"next: \", action)\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n\r\nexport const removeApplicationData = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_APPLICTION_DATA) {\r\n        return next(action);\r\n    }\r\n\r\n    let newAction = Object.assign({}, action, {\r\n        payload:  action.payload\r\n    });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport { storeApplicationData } from './../middlewares/ApplicationMiddleware';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            storeApplicationData\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}